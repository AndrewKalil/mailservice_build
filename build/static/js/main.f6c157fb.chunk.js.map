{"version":3,"sources":["components/AppContainerComponents/AppContainerElements.jsx","components/NavbarComponents/NavbarElements.jsx","components/Svg/helppeopleLogo.js","environments/base.ts","environments/production.ts","services/API.ts","store/modules/UserStore.ts","components/NavbarComponents/Navbar.jsx","components/FooterComponents/FooterElements.jsx","components/FooterComponents/Footer.jsx","pages/MainPage/MainPageStyles.jsx","components/MainPageComponents/ServidoresDeCorreo/ServidoresDeCorreoElements.jsx","components/ReusableStyles/index.jsx","components/widgets/ReactScrollbar.jsx","components/widgets/Popup.jsx","components/widgets/Loader.jsx","services/LocalStorage.ts","services/AWSAPI.ts","store/modules/EmailStore.ts","components/Svg/Calendario.js","components/MainPageComponents/ServidoresDeCorreo/Log.jsx","components/widgets/ReactSelect.jsx","components/Svg/Basura.js","components/Svg/Guardar.js","components/Svg/Lapiz.js","components/MainPageComponents/ServidoresDeCorreo/regla.jsx","components/MainPageComponents/ServidoresDeCorreo/newEmail.jsx","components/MainPageComponents/ServidoresDeCorreo/index.jsx","pages/MainPage/index.tsx","components/Routes/PrivateRoutes.tsx","store/modules/AuthStore.ts","App.tsx","context/index.jsx","store/modules/RuleStore.ts","store/modules/RequestStore.ts","store/store.ts","index.tsx"],"names":["AppContainer","styled","main","AppInnerContainer","div","NavbarContainer","nav","NavbarStyle","NavLogoContainer","NavLogo","NavLink","ProfileSquare","ProfileGrid","ProfileText","p","props","title","color","MailService","helppeopleLogo","width","height","viewBox","fill","xmlns","d","getBaseEnv","baseApi","awsBaseApi","intervals","logout","timeout","api","url","awsApi","isProduction","isDevelopment","process","REACT_APP_API_URL","REACT_APP_AWS_API","env","environment","Config","API","axios","create","baseURL","headers","common","Accept","UserStorage","createSlice","name","initialState","username","lastName","companyName","CompanyID","email","userImage","userImageExt","userImageMime","isVIP","reducers","setDetails","state","action","payload","actions","user","Navbar","userDetails","useSelector","to","style","display","flexDirection","alignItems","justifyContent","borderRadius","borderWidth","borderColor","backgroundColor","alt","src","position","bottom","right","padding","className","FootertContainer","footer","InnerContainer","LinkContainer","Footer","href","MainPageContainer","MainDiv","TabButtons","TabButton","button","isActive","Tab1Container","ConfigurationsContainer","EmailsContainer","LogsBtn","Link","absolute","EmailContainer","edit","OptionsContainer","OptionButton","EmailWrapper","InputFields","InputField","switch","Input","input","InputShow","ContentContainer","spaceBetween","ContentWrapper","Logs","LogContainer","LogBody","LogInfo","Reglas","ReglaContainer","ReglasInputField","CheckInput","checked","PartialOptionsContainer","Button","bg","marginTop","w","ModalButtons","IoMdAddCircleOutline","IoMdAddCircle","Scrollbar","preventDefault","e","window","event","returnValue","enableScroll","document","removeEventListener","disableScroll","addEventListener","passive","autoHide","onMouseEnter","onMouseLeave","children","portalRoot","getElementById","Popup","componentDidMount","appendChild","element","componentWillUnmount","removeChild","createElement","this","ReactDOM","createPortal","Component","PopupStyle","PopupWindow","Background","Content","Modal","setModalActive","active","alert","onClick","BounceAnimation","keyframes","DotWrapper","mTop","Dot","delay","Container","Loader","TOKEN","TokenService","token","localStorage","getItem","value","setItem","AWSAPI","EmailStore","emails","emailsList","tooManyEmailsAlert","serversList","label","text","server","port","areas","natures","services","clientSettings","id","apiUrl","mainUsername","maxInboxLength","reglas","loading","loadingInboxes","loadingRules","loadingNatures","loadingAreas","logs","isOpen","content","setEmailsCount","setNewInbox","setReplaceInbox","indexToReplace","indexOf","filter","item","idToReplace","tempList","replaceObject","setEmailsList","setTooManyWarning","setEmailFields","setAreas","setNatures","setServices","setAddRules","setClientSettings","setRules","setRulesLoader","setInboxesLoader","setNaturesLoader","setAreasLoader","setLogs","setNewRule","setFilteredRules","setAlert","handleAlert","dispatch","getNatures","get","then","res","naturesToDispatch","data","Values","map","Text","Value","catch","console","log","error","getAreas","areasToDispatch","getServices","areaID","servicesToDispatch","Calendar","size","Log","features","type","logMessage","date","dateFormat","Date","fontWeight","fontSize","gap","toString","CustomSelect","options","defaultValue","placeholder","onChange","customStyles","option","provided","control","border","margin","fontFamily","dropdownIndicator","indicatorSeparator","styles","Basura","Guardar","Lapiz","Regla","hasKeywords","keywords","natureId","areaId","serviceId","ruleId","recentlyCreated","inboxId","useDispatch","useState","join","editableKeywords","setKeywords","editableHasKeywords","setHasKeywords","typo","setType","showOptions","setShowOptions","emailState","n","selectedNature","setSelectedNature","a","selectedArea","setSelectedAreas","s","selectedService","setSelectedService","Icon","post","operation","inboxRuleId","deleted","toast","warning","bodyStyle","deleteRule","split","parseInt","payloadArg","rules","ruleToReplace","createdInboxRuleId","success","edited","saveRule","useEffect","target","NewEmail","emailText","tipoDeServidor","otherRoute","portNumber","password","setEdit","wrapperRef","useRef","openModal","setOpenModal","deleteModal","setDeleteModal","saveModal","setSaveModal","editedEmail","setEditedEmail","serverType","setServerType","isSllOn","setIsSslOn","puerto","setPuerto","showOthers","setShowOthers","serverRoute","setServerRoute","editablePassword","setPassword","show","handleClickOutside","current","contains","ref","newEmailList","updatedList","emailToEdit","clientId","newInbox","temporaryInboxId","clientID","successfulConnection","createdInboxId","createInbox","textAlign","textJustify","marginBottom","index","inboxID","rule","handleServerChange","checkedIcon","uncheckedIcon","onColor","ServidoresDeCorreo","capitalize","str","charAt","toUpperCase","slice","emailList","inbox","toLowerCase","Items","inboxUsername","logsReversed","reverse","length","undefined","cliCod","tab","setTab","status","getClientSettings","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","PrivateRoute","isAuthenticated","routeProps","authenticationPath","useLocation","pathname","search","AuthStore","count","tokenValid","loginSuccess","logoutSuccess","setError","increaseCounter","resetCounter","setTokenChecked","selectUser","auth","App","urlParams","URLSearchParams","location","authState","response","Status","message","checkToken","setToken","UserInfo","Username","Name","LastName","CompanyName","Email","UserImage","UserImageExt","UserImageMime","IsVIP","getUserDetails","defaultProtectedRouteProps","redirectPath","setRedirectPath","NoToken","Default","basename","path","exact","component","Dashboard","AppContext","React","createContext","AppProvider","Provider","RuleStore","list","requestID","mode","setRule","clearRules","setRequestID","setMode","RequestStore","filteredList","term","advancements","workOrders","filteredUsers","users","createSuccess","departments","locations","assets","pageData","pagesTotal","offset","statuses","years","notesTypes","notes","selectedYears","selectedStatuses","page","files","autofillData","workOrderId","setRequests","setWorkOrders","setActiveRequest","setFilteredRequests","listFiltered","subject","setCurrentPageData","newData","setTerm","setSelectedYears","setSelectedStatuses","setAdvancements","setFilteredUsers","setUsers","setDepartments","setLocations","setAssets","setTotalPages","setStatuses","setYears","setNotesTypes","setNotes","setPage","setFiles","setAutofillData","setWorkOrderId","store","configureStore","reducer","userReducer","authReducer","request","requestReducer","ruleReducer","emailReducer","render","StrictMode"],"mappings":"wNAEaA,EAAeC,IAAOC,KAAV,8DAKZC,EAAoBF,IAAOG,IAAV,0dCJjBC,EAAkBJ,IAAOK,IAAV,6QAefC,EAAcN,IAAOG,IAAV,ugBA2BXI,EAAmBP,IAAOG,IAAV,sEAKhBK,EAAUR,YAAOS,IAAPT,CAAH,qSAmBPU,EAAgBV,IAAOG,IAAV,yPAcbQ,EAAcX,IAAOG,IAAV,+NAaXS,EAAcZ,IAAOa,EAAV,6MAEP,SAACC,GAAD,OAAWA,EAAMC,OAAS,SAChC,SAACD,GAAD,OAAWA,EAAME,OAASF,EAAME,SAW9BC,EAAcjB,IAAOG,IAAV,4J,OCXTe,EAjGQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OACE,sBACEA,MAAOA,EACPC,OAAO,OACPC,QAAQ,aACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,8iDACFF,KAAK,YAEP,sBACEE,EAAE,2kBACFF,KAAK,YAEP,sBACEE,EAAE,+oBACFF,KAAK,YAEP,sBACEE,EAAE,ggBACFF,KAAK,YAEP,sBACEE,EAAE,+qBACFF,KAAK,YAEP,sBACEE,EAAE,kiBACFF,KAAK,YAEP,sBACEE,EAAE,y3DACFF,KAAK,YAEP,sBACEE,EAAE,wjDACFF,KAAK,YAEP,sBACEE,EAAE,0rDACFF,KAAK,YAEP,sBACEE,EAAE,qsDACFF,KAAK,YAEP,sBACEE,EAAE,8oEACFF,KAAK,YAEP,sBACEE,EAAE,kwEACFF,KAAK,YAEP,sBACEE,EAAE,69CACFF,KAAK,YAEP,sBACEE,EAAE,s2CACFF,KAAK,YAEP,sBACEE,EAAE,svBACFF,KAAK,YAEP,sBACEE,EAAE,6iBACFF,KAAK,YAEP,sBACEE,EAAE,wsBACFF,KAAK,YAEP,sBACEE,EAAE,ilCACFF,KAAK,YAEP,sBACEE,EAAE,m0BACFF,KAAK,YAEP,sBACEE,EAAE,8wBACFF,KAAK,YAEP,sBACEE,EAAE,wxBACFF,KAAK,gB,wDC3EEG,I,uHAAAA,GAhBf,SAAoBC,EAAiBC,GACnC,MAAO,CACLC,UAAW,CACTC,OAAQ,KACRC,QAAS,MAEXC,IAAK,CACHC,IAAI,GAAD,OAAKN,EAAL,QACHO,OAAO,GAAD,OAAKN,IAGbO,cAAc,EACdC,eAAe,ICJbT,GAAUU,oIAAYC,kBACxBD,oIAAYC,kBACZ,qDAGEV,GAAaS,oIAAYE,kBAC3BF,oIAAYE,kBACZ,yFACEC,GAAMC,GAAYd,GAASC,IAE3Bc,GAAmB,2BACpBF,IADoB,IAEvBX,UAAU,2BACLW,GAAIX,WADA,IAEPC,OAAQ,MAEVK,cAAc,EACdC,eAAe,IAGFM,MCdAC,GAbH,WACV,OAAOC,IAAMC,OAAO,CAClBC,QAASL,GAAYT,IAAIC,IACzBF,QAASU,GAAYZ,UAAUE,QAC/BgB,QAAS,CACPC,OAAQ,CACN,eAAgB,mBAChBC,OAAQ,wBCqBHC,GAAcC,YAAY,CACrCC,KAAM,OACNC,aAfyB,CACzBC,SAAU,GACVF,KAAM,GACNG,SAAU,GACVC,YAAa,GACbC,UAAW,GACXC,MAAO,GACPC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,MAAO,IAMPC,SAAU,CACRC,WAAY,SAACC,EAAOC,GAClBD,EAAMb,KAAOc,EAAOC,QAAQf,KAC5Ba,EAAMV,SAAWW,EAAOC,QAAQZ,SAChCU,EAAMX,SAAWY,EAAOC,QAAQb,SAChCW,EAAMT,YAAcU,EAAOC,QAAQX,YACnCS,EAAMP,MAAQQ,EAAOC,QAAQT,MAC7BO,EAAMN,UAAYO,EAAOC,QAAQR,UACjCM,EAAML,aAAeM,EAAOC,QAAQP,aACpCK,EAAMJ,cAAgBK,EAAOC,QAAQN,cACrCI,EAAMH,MAAQI,EAAOC,QAAQL,MAC7BG,EAAMR,UAAYS,EAAOC,QAAQV,cA8BxBO,GAAed,GAAYkB,QAA3BJ,WACFK,GAAO,SAACJ,GAAD,OAAsBA,EAAMI,MACjCnB,MAAf,QC7DaoB,GAAS,WACpB,IAAMC,EAAcC,YAAYH,IAEhC,OACE,cAAChE,EAAD,UACE,eAACE,EAAD,WACE,cAACC,EAAD,UACE,cAACC,EAAD,CAASgE,GAAG,IAAZ,SACE,cAAC,EAAD,CAAMrD,MAAO,aAGjB,cAACF,EAAD,UACE,gDAEF,cAACP,EAAD,UAGE,eAACC,EAAD,WACE,sBACE8D,MAAO,CACLtD,MAAO,OACPC,OAAQ,OACRsD,QAAS,OACTC,cAAe,SACfC,WAAY,YANhB,UASE,cAAChE,EAAD,CACEG,MAAK,OADP,mBAEKuD,EAAYnB,KAFjB,YAEyBmB,EAAYhB,YACrC,cAAC1C,EAAD,CAAaI,MAAM,UAAnB,mBAAiCsD,EAAYf,kBAE/C,qBACEkB,MAAO,CACLtD,MAAO,OACPC,OAAQ,OACRsD,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAPpB,SAU6B,KAA1BP,EAAYZ,UACX,qBACEe,MAAO,CACLK,aAAc,MACdC,YAAa,MACbC,YAAY,GAAD,OAAKV,EAAYT,MAAZ,kBAChBoB,gBAAiB,SAOnBC,IAAI,UACJC,IAAI,2OAGN,sBAAKV,MAAO,CAAEW,SAAU,YAAxB,UACE,qBACEX,MAAO,CACLK,aAAc,MACdC,YAAa,MACbC,YAAY,GAAD,OAAKV,EAAYT,MAAZ,kBAChBoB,gBAAiB,SAEnBE,IAAG,eAAUb,EAAYV,cAAtB,mBAA8CU,EAAYZ,WAC7DwB,IAAI,YAEiB,MAAtBZ,EAAYT,OACX,qBACEY,MAAO,CACLW,SAAU,WACVC,OAAQ,IACRC,MAAO,IACPlE,OAAQ,MACR0D,aAAc,MACdG,gBAAiB,SACjBP,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZW,QAAS,QAXb,SAcE,qBACEC,UAAU,mBACVjE,MAAM,6BACNF,QAAQ,sBAHV,SAKE,sBAAMG,EAAE,wXCxGnBiE,GAAmBzF,IAAO0F,OAAV,mUAmBhBC,GAAiB3F,IAAOG,IAAV,+WAgBdyF,GAAgB5F,IAAOG,IAAV,gKC/Bb0F,GAAS,WACpB,OACE,cAACJ,GAAD,UACE,eAACE,GAAD,WACE,cAACC,GAAD,UACE,mBACEnB,MAAO,CAAEzD,MAAO,WAChB8E,KAAK,8EAFP,0BAQF,eAACF,GAAD,WACE,qCACA,mBACEnB,MAAO,CAAEzD,MAAO,WAChB8E,KAAK,sFAFP,oCAMA,wCAGF,cAACF,GAAD,UACE,mBACEnB,MAAO,CAAEzD,MAAO,WAChB8E,KAAK,0EAFP,6C,SC7BGC,GAAoB/F,IAAOG,IAAV,2KAUjB6F,GAAUhG,IAAOG,IAAV,oMAUP8F,GAAajG,IAAOK,IAAV,8GAOV6F,GAAYlG,IAAOmG,OAAV,0lBAET,SAACrF,GAAD,OAAWA,EAAMsF,UAAN,YAEF,SAACtF,GAAD,OAAYA,EAAMsF,SAAW,WAAa,iBAC9C,SAACtF,GAAD,OACdA,EAAMsF,SAAW,kBAAoB,qBACzB,SAACtF,GAAD,OAAYA,EAAMsF,SAAW,QAAU,M,SCjC1CC,GAAgBrG,IAAOG,IAAV,+IASbmG,GAA0BtG,IAAOG,IAAV,sFAMvBoG,GAAkBvG,IAAOG,IAAV,wHAQfqG,GAAUxG,YAAOyG,IAAPzG,CAAH,gJAGN,SAACc,GAAD,OAAWA,EAAM4F,UAAY,cAChC,SAAC5F,GAAD,OAAWA,EAAM4F,UAAY,OAC/B,SAAC5F,GAAD,OAAWA,EAAM4F,UAAY,WAIzBC,GAAiB3G,IAAOG,IAAV,qUAMX,SAACW,GAAD,OAAWA,EAAM8F,MAAQ,aAa5BC,GAAmB7G,IAAOG,IAAV,uJAKf,SAACW,GAAD,OAAWA,EAAM4F,UAAY,cAClC,SAAC5F,GAAD,OAAWA,EAAM4F,UAAY,OAC5B,SAAC5F,GAAD,OAAWA,EAAM4F,UAAY,SAG1BI,GAAe9G,IAAOmG,OAAV,kGAMZY,GAAe/G,IAAOG,IAAV,0PAcZ6G,GAAchH,IAAOG,IAAV,qJAQX8G,GAAajH,IAAOG,IAAV,yRAKR,SAACW,GAAD,OAAWA,EAAMoG,QAAU,UAU7BC,GAAQnH,IAAOoH,MAAV,kLAKN,SAACtG,GAAD,OAAYA,EAAMM,OAASN,EAAMM,OAAS,UAKzCiG,GAAYrH,IAAOG,IAAV,sMAWTmH,GAAmBtH,IAAOG,IAAV,uPAOhB,SAACW,GAAD,OAAWA,EAAMyG,cAAgB,UACzB,SAACzG,GAAD,OAAWA,EAAMyG,cAAgB,mBACrC,SAACzG,GAAD,OAAWA,EAAMyG,cAAgB,YAC9B,SAACzG,GAAD,OAAWA,EAAMyG,cAAgB,YAGxCC,GAAiBxH,IAAOG,IAAV,0HAQdsH,GAAOzH,IAAOG,IAAV,8IASJuH,GAAe1H,IAAOG,IAAV,qLAUZwH,GAAU3H,IAAOG,IAAV,+EAmBPyH,IAbQ5H,IAAOG,IAAV,gLAaKH,IAAOG,IAAV,2JAQP0H,GAAS7H,IAAOG,IAAV,8IASN2H,GAAiB9H,IAAOG,IAAV,kQAYd4H,GAAmB/H,IAAOG,IAAV,mQAchB6H,GAAahI,IAAOG,IAAV,gXAUC,SAACW,GAAD,OAAYA,EAAMmH,QAAU,UAAY,aAWnDC,GAA0BlI,IAAOG,IAAV,0G,SCxPvBgI,GAASnI,IAAOmG,OAAV,4XACP,SAACrF,GAAD,OACRA,EAAMsH,GAAN,oBAAwBtH,EAAMsH,IAAO,uBAC9B,SAACtH,GAAD,OAAYA,EAAMsH,GAAKtH,EAAMsH,GAAK,aAS7B,SAACtH,GAAD,OAAWA,EAAMuH,WAAavH,EAAMuH,aACtC,SAACvH,GAAD,OAAYA,EAAMwH,EAAIxH,EAAMwH,EAAI,WAGtB,SAACxH,GAAD,OAAYA,EAAMsH,GAAKtH,EAAMsH,GAAK,aAmB7CG,IAVgBvI,YAAOwI,KAAPxI,CAAH,qEAKCA,YAAOyI,KAAPzI,CAAH,qEAKIA,IAAOmG,OAAV,wRAGP,SAACrF,GAAD,OAAYA,EAAMsH,GAAKtH,EAAMsH,GAAK,aAM9B,SAACtH,GAAD,OAAYA,EAAMsH,GAAKtH,EAAMsH,GAAK,iBAC7C,SAACtH,GAAD,OAAYA,EAAMsH,GAAK,QAAU,c,oBC7C/BM,GAAY,SAAC5H,GACxB,IAAM6H,EAAiB,SAACC,IACtBA,EAAIA,GAAKC,OAAOC,OACVH,gBACJC,EAAED,iBAEJC,EAAEG,aAAc,GAGZC,EAAe,WACnBC,SAASC,oBAAoB,QAASP,GAAgB,IAGlDQ,EAAgB,WACpBF,SAASG,iBAAiB,QAAST,EAAgB,CACjDU,SAAS,KAIb,OACE,cAAC,KAAD,CACE5E,MAAO,CACLtD,MAAO,OACPC,OAAQN,EAAMM,OAASN,EAAMM,OAAS,QACtCmE,QAAS,QAEX+D,UAAQ,EACRC,aAAc,kBAAMJ,GACpBK,aAAc,kBAAMR,GARtB,SAUGlI,EAAM2I,Y,6CC5BPC,GAAaT,SAASU,eAAe,UAErCC,G,oDACJ,aAAe,IAAD,+BACZ,gBAIFC,kBAAoB,WAClBH,GAAWI,YAAY,EAAKC,UANhB,EASdC,qBAAuB,WACrBN,GAAWO,YAAY,EAAKF,UAR5B,EAAKA,QAAUd,SAASiB,cAAc,OAF1B,E,2CAad,WAAU,IACAT,EAAaU,KAAKrJ,MAAlB2I,SAER,OAAOW,IAASC,aAAaZ,EAAUU,KAAKJ,a,GAjB5BO,aAsBdC,GAAavK,IAAOG,IAAV,mLAWVqK,GAAcxK,IAAOG,IAAV,wdAON,SAACW,GAAD,OAAYA,EAAMM,OAASN,EAAMK,MAAQ,SACxC,SAACL,GAAD,OAAYA,EAAMM,OAASN,EAAMM,OAAS,SAIzC,SAACN,GAAD,OAAYA,EAAMM,OAASN,EAAMK,MAAQ,SACxC,SAACL,GAAD,OAAYA,EAAMM,OAASN,EAAMM,OAAS,SAI3C,SAACN,GAAD,OAAYA,EAAMM,OAASN,EAAMK,MAAQ,SACxC,SAACL,GAAD,OAAYA,EAAMM,OAASN,EAAMM,OAAS,SAI3C,SAACN,GAAD,OAAYA,EAAMM,OAASN,EAAMK,MAAQ,SACxC,SAACL,GAAD,OAAYA,EAAMM,OAASN,EAAMM,OAAS,SAIlDqJ,GAAazK,IAAOG,IAAV,oKAWVuK,GAAU1K,IAAOG,IAAV,+DAKPgI,GAASnI,IAAOmG,OAAV,yPAgBCwE,GAAQ,SAAC7J,GAAW,IACvB2I,EAA2D3I,EAA3D2I,SAAUmB,EAAiD9J,EAAjD8J,eAAgBC,EAAiC/J,EAAjC+J,OAAQzJ,EAAyBN,EAAzBM,OAAQ0J,EAAiBhK,EAAjBgK,MAAO3J,EAAUL,EAAVK,MACzD,OACE,cAAC,GAAD,UACG0J,GACC,eAACN,GAAD,WACE,eAACC,GAAD,CAAapJ,OAAQA,EAAQD,MAAOA,EAApC,UACE,qBAAKsD,MAAO,CAAEW,SAAU,YAAxB,UACI0F,GACA,cAAC,GAAD,CACEC,QAAS,WACPH,GAAe,IAFnB,SAKE,cAAC,KAAD,QAIN,cAACF,GAAD,UAAUjB,OAEZ,cAACgB,GAAD,CACEM,QAAS,kBAAOD,GAASF,GAAe,YCvH9CI,GAAkBC,YAAH,sHAKRC,GAAalL,IAAOG,IAAV,wHAIP,SAACW,GAAD,OAAYA,EAAMqK,KAAOrK,EAAMqK,KAAO,WAEzCC,GAAMpL,IAAOG,IAAV,sNAMD6K,IACM,SAAClK,GAAD,OAAWA,EAAMuK,SAGzBC,GAAYtL,IAAOG,IAAV,mHAOToL,GAAS,SAAC,GAAc,IAAZJ,EAAW,EAAXA,KACvB,OACE,cAACG,GAAD,UACE,eAACJ,GAAD,CAAYC,KAAMA,EAAlB,UACE,cAACC,GAAD,CAAKC,MAAM,OACX,cAACD,GAAD,CAAKC,MAAM,QACX,cAACD,GAAD,CAAKC,MAAM,cCnCbG,GAAQ,QAERC,GAAe,WAEjB,IAAMC,EAAQC,aAAaC,QAAQJ,IACnC,OAAOE,GAAgB,IAHrBD,GAAe,SAKfI,GACFF,aAAaG,QAAQN,GAAOK,ICQjBE,GAbA,WACb,OAAOpJ,IAAMC,OAAO,CAClBC,QAASL,GAAYT,IAAIE,OACzBH,QAASU,GAAYZ,UAAUE,QAC/BgB,QAAS,CACPC,OAAQ,CACN,eAAgB,mBAChBC,OAAQ,wB,SC0HHgJ,GAAa9I,YAAY,CACpCC,KAAM,QACNC,aA9C+B,CAC/B6I,OAAQ,EACRC,WAAY,GACZC,oBAAoB,EACpBC,YAAa,CACX,CACEC,MAAO,QACPR,MAAO,CAAES,KAAM,QAASC,OAAQ,iBAAkBC,KAAM,MAE1D,CACEH,MAAO,UACPR,MAAO,CAAES,KAAM,UAAWC,OAAQ,wBAAyBC,KAAM,MAEnE,CACEH,MAAO,YACPR,MAAO,CAAES,KAAM,YAAaC,OAAQ,wBAAyBC,KAAM,MAErE,CACEH,MAAO,YACPR,MAAO,CAAES,KAAM,OAAQC,OAAQ,mBAAoBC,KAAM,MAE3D,CAAEH,MAAO,OAAQR,MAAO,CAAES,KAAM,OAAQC,OAAQ,GAAIC,KAAM,OAE5DC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,eAAgB,CACdC,GAAI,EACJC,OAAQ,GACRC,aAAc,GACdlC,QAAQ,EACRmC,eAAgB,GAElBC,OAAQ,GACRC,QAAS,CACPC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,GAEhBC,KAAM,GACNzC,MAAO,CAAE0C,QAAQ,EAAOC,QAAS,KAMjC3J,SAAU,CACR4J,eAAgB,SAAC1J,EAAOC,GACtBD,EAAMiI,OAASjI,EAAMiI,OAAS,GAEhC0B,YAAa,SAAC3J,EAAOC,GACnBD,EAAMkI,WAAN,uBAAuBlI,EAAMkI,YAA7B,CAAyCjI,EAAOC,WAElD0J,gBAAiB,SAAC5J,EAAOC,GACvB,IAAM4J,EAAiB7J,EAAMkI,WAAW4B,QACtC9J,EAAMkI,WAAW6B,QACf,SAACC,GAAD,OAAUA,EAAKnB,KAAO5I,EAAOC,QAAQ+J,eACrC,IAGAC,EAAQ,aAAOlK,EAAMkI,YACzBgC,EAASL,GAAkB5J,EAAOC,QAAQiK,cAE1CnK,EAAMkI,WAAagC,GAErBE,cAAe,SAACpK,EAAOC,GACrBD,EAAMkI,WAAajI,EAAOC,SAE5BmK,kBAAmB,SAACrK,EAAOC,GACzBD,EAAMmI,mBAAqBlI,EAAOC,SAEpCoK,eAAgB,SAACtK,EAAOC,GACtBD,EAAMkI,WAAajI,EAAOC,SAE5BqK,SAAU,SAACvK,EAAOC,GAChBD,EAAMyI,MAAQxI,EAAOC,SAEvBsK,WAAY,SAACxK,EAAOC,GAClBD,EAAM0I,QAAUzI,EAAOC,SAEzBuK,YAAa,SAACzK,EAAOC,GACnBD,EAAM2I,SAAW1I,EAAOC,SAE1BwK,YAAa,SAAC1K,EAAOC,GACnBD,EAAMiJ,OAAN,uBAAmBjJ,EAAMiJ,QAAzB,CAAiChJ,EAAOC,WAE1CyK,kBAAmB,SAAC3K,EAAOC,GACzBD,EAAM4I,eAAiB3I,EAAOC,SAEhC0K,SAAU,SAAC5K,EAAOC,GAChBD,EAAMiJ,OAAShJ,EAAOC,SAExB2K,eAAgB,SAAC7K,EAAOC,GACtBD,EAAMkJ,QAAN,2BAAqBlJ,EAAMkJ,SAA3B,IAAoCE,aAAcnJ,EAAOC,WAE3D4K,iBAAkB,SAAC9K,EAAOC,GACxBD,EAAMkJ,QAAN,2BAAqBlJ,EAAMkJ,SAA3B,IAAoCC,eAAgBlJ,EAAOC,WAE7D6K,iBAAkB,SAAC/K,EAAOC,GACxBD,EAAMkJ,QAAN,2BAAqBlJ,EAAMkJ,SAA3B,IAAoCE,aAAcnJ,EAAOC,WAE3D8K,eAAgB,SAAChL,EAAOC,GACtBD,EAAMkJ,QAAN,2BAAqBlJ,EAAMkJ,SAA3B,IAAoCC,eAAgBlJ,EAAOC,WAE7D+K,QAAS,SAACjL,EAAOC,GACfD,EAAMuJ,KAAOtJ,EAAOC,SAEtBgL,WAAY,SAAClL,EAAOC,GAClBD,EAAMiJ,OAAShJ,EAAOC,SAExBiL,iBAAkB,SAACnL,EAAOC,GACxBD,EAAMiJ,OAASjJ,EAAMiJ,OAAOc,QAAO,SAACC,GAAD,OAAUA,EAAKnB,KAAO5I,EAAOC,YAElEkL,SAAU,SAACpL,EAAOC,GAChBD,EAAM8G,MAAQ7G,EAAOC,YAMdmL,GAAc,SAACnL,GAAD,OAAwB,SAACoL,GAClDA,EAASF,GAASlL,MAmDPqL,GAAa,kBAAM,SAACD,GAC/B,IACE5M,KACG8M,IADH,qCACqC/D,OAClCgE,MAAK,SAACC,GACL,IAAIC,EACJA,EAAoBD,EAAIE,KAAKC,OAAOC,KAAI,SAAC9B,GACvC,MAAO,CAAE3B,MAAO2B,EAAK+B,KAAMlE,MAAOmC,EAAKgC,UAEzCV,EAASd,GAAWmB,OAErBM,OAAM,SAACrH,GAAD,OAAOsH,QAAQC,IAAIvH,MAC5B,MAAOwH,GACPF,QAAQC,IAAIC,MAOHC,GAAW,kBAAM,SAACf,GAC7B,IACE5M,KACG8M,IADH,mCACmC/D,OAChCgE,MAAK,SAACC,GACL,IAAIY,EACJA,EAAkBZ,EAAIE,KAAKC,OAAOC,KAAI,SAAC9B,GACrC,MAAO,CAAE3B,MAAO2B,EAAK+B,KAAMlE,MAAOmC,EAAKgC,UAEzCV,EAASf,GAAS+B,OAEnBL,OAAM,SAACrH,GAAD,OAAOsH,QAAQC,IAAIvH,MAC5B,MAAOwH,GACPF,QAAQC,IAAIC,MAOHG,GAAc,SAACC,GAAD,OAAqB,SAAClB,GAC/C,IACE5M,KACG8M,IADH,sCAEmC/D,MAFnC,OAGM+E,GAAqB,KAAXA,EAAV,kBAAqCA,GAArC,KAGHf,MAAK,SAACC,GACL,IAAIe,EACJA,EAAqBf,EAAIE,KAAKC,OAAOC,KAAI,SAAC9B,GACxC,MAAO,CAAE3B,MAAO2B,EAAK+B,KAAMlE,MAAOmC,EAAKgC,UAEzCV,EAASb,GAAYgC,OAEtBR,OAAM,SAACrH,GAAD,OAAOsH,QAAQC,IAAIvH,MAC5B,MAAOwH,GACPF,QAAQC,IAAIC,M,GA4aZpE,GAAW7H,QApBbiK,I,GADAV,e,GACAU,eACAT,G,GAAAA,YACAC,G,GAAAA,gBAEAU,I,GADAD,kB,GACAC,gBACAM,G,GAAAA,SAEAL,G,GAAAA,SACAC,G,GAAAA,WACAC,G,GAAAA,YACAC,G,GAAAA,YACAC,G,GAAAA,kBACAE,G,GAAAA,eACAC,G,GAAAA,iBAGAG,I,GAFAF,iB,GACAC,e,GACAC,SACAC,G,GAAAA,WACAC,G,GAAAA,iBACAC,G,GAAAA,SAEW3L,GAAQ,SAACO,GAAD,OAAsBA,EAAMP,OAClCuI,MAAf,QC5uBa0E,GAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,sBACExP,MAAOwP,EACPvP,OAAQuP,EACRtP,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,mNACFF,KAAK,YAEP,sBACEE,EAAE,sXACFF,KAAK,YAEP,sBACEE,EAAE,sNACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,gBCvDAsP,GAAM,SAAC9P,GAAW,IAAD,EACiBA,EAAM+P,SAA3CC,EADoB,EACpBA,KAAMC,EADc,EACdA,WAAYC,EADE,EACFA,KAAM3N,EADJ,EACIA,SAC1B4N,EAAa,IAAIC,KAAKF,GAE5B,OACE,eAACtJ,GAAD,WACE,6BAAKqJ,IACL,cAACpJ,GAAD,UAIE,eAACC,GAAD,WACE,iDACmB,IACjB,sBAAMnD,MAAO,CAAEzD,MAAO,UAAWmQ,WAAY,QAA7C,SACG9N,OAGL,uBACEoB,MAAO,CACL2M,SAAU,OACV1M,QAAS,OACTE,WAAY,SACZyM,IAAK,OALT,UASE,cAAC,GAAD,CAAUV,KAAM,KATlB,IAS0BM,EAAWK,mBAIzC,sBAAM7M,MAAO,CAAE2M,SAAU,OAAQpQ,MAAO,WAAxC,SAAsD8P,Q,SCrC/CS,GAAe,SAAC,GAMtB,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACA9F,EACI,EADJA,MAEM+F,EAAe,CACnBC,OAAQ,SAACC,EAAU9N,GAAX,mBAAC,eACJ8N,GADG,IAENV,SAAU,UAEZW,QAAS,SAACD,EAAU9N,GAAX,MAAsB,CAE7BU,QAAS,OACTsN,OAAQ,oBACRlN,aAAc,MACd3D,MAAO,OACP8Q,OAAQ,IACR7Q,OAAQ,OACR6D,gBAAiB,QACjBmM,SAAU,OACVpQ,MAAO,UACPkR,WAAW,4BAEbC,kBAAmB,SAACL,EAAU9N,GAAX,sBACd8N,IAELM,mBAAoB,iBAAO,CACzB1N,QAAS,SAEXgN,YAAa,iBAAO,CAClBN,SAAU,OACVpQ,MAAO,UACPkR,WAAW,6BAIf,OACE,cAAC,KAAD,CACEG,OAAQT,EACRJ,QAASA,EACTC,aAAcA,EACdC,YAAaA,EACbC,SAAUA,EACV9F,MAAOA,K,oBC/CAyG,GAAS,SAAC,GAAc,IAAZ3B,EAAW,EAAXA,KACvB,OACE,sBACExP,MAAOwP,EACPvP,OAAQuP,EACRtP,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,uQACFF,KAAK,YAEP,sBACEE,EAAE,4yBACFF,KAAK,YAEP,sBACEE,EAAE,uPACFF,KAAK,gBCnBAiR,GAAU,SAAC,GAAc,IAAZ5B,EAAW,EAAXA,KACxB,OACE,sBACExP,MAAOwP,EACPvP,OAAQuP,EACRtP,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,0hBACFF,KAAK,YAEP,sBACEE,EAAE,oDACFF,KAAK,gBCfAkR,GAAQ,SAAC,GAAc,IAAZ7B,EAAW,EAAXA,KACtB,OACE,sBACExP,MAAOwP,EACPvP,OAAQuP,EACRtP,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,wpBACFF,KAAK,YAEP,sBACEE,EAAE,4PACFF,KAAK,gBCaAmR,GAAQ,SAAC3R,GAAW,IAAD,EAW1BA,EAAM+P,SATR6B,EAF4B,EAE5BA,YACAC,EAH4B,EAG5BA,SACA7B,EAJ4B,EAI5BA,KACA8B,EAL4B,EAK5BA,SACAC,EAN4B,EAM5BA,OACAC,EAP4B,EAO5BA,UACAC,EAR4B,EAQ5BA,OACAlG,EAT4B,EAS5BA,GACAmG,EAV4B,EAU5BA,gBAEIC,EAAUnS,EAAMmS,QAChB3D,EAAW4D,cAba,EAcUC,mBAASR,EAASS,KAAK,MAdjC,oBAcvBC,EAduB,KAcLC,EAdK,OAegBH,mBAAST,GAfzB,oBAevBa,EAfuB,KAeFC,EAfE,OAgBNL,mBAASrC,GAhBH,oBAgBvB2C,EAhBuB,KAgBjBC,EAhBiB,OAiBQP,oBAAS,GAjBjB,oBAiBvBQ,EAjBuB,KAiBVC,EAjBU,KAkBxBC,EAAatP,YAAYd,IAlBD,EAoBc0P,mBAC1CP,EACIiB,EAAWnH,QAAQqB,QAAO,SAAC+F,GAAD,OAAOA,EAAEjI,QAAU+G,EAAStB,cAAY,GAClE,CAAEjF,MAAO,2BAA4BR,MAAO,KAvBpB,oBAoBvBkI,EApBuB,KAoBPC,EApBO,OAyBWb,mBACvCN,EACIgB,EAAWpH,MAAMsB,QAAO,SAACkG,GAAD,OAAOA,EAAEpI,QAAUgH,EAAOvB,cAAY,GAC9D,CAAEjF,MAAO,qBAAsBR,MAAO,KA5Bd,oBAyBvBqI,EAzBuB,KAyBTC,EAzBS,OA8BgBhB,mBAC5CL,EACIe,EAAWlH,SAASoB,QAAO,SAACqG,GAAD,OAAOA,EAAEvI,QAAUiH,EAAUxB,cAAY,GACpE,CAAEjF,MAAO,yBAA0BR,MAAO,KAjClB,oBA8BvBwI,EA9BuB,KA8BNC,EA9BM,KAoCxB9C,EAAU,CACd,CACE+C,KAAMjC,GACNrO,OAAQ,WACNqL,EP0nBkB,SAACyD,GAAD,OAAoB,SAACzD,GAC7C,IACEvD,KACGyI,KADH,GACY,CACRC,UAAW,kBACXvQ,QAAS,CAAEwQ,YAAa3B,KAEzBtD,MAAK,SAACC,GACDA,EAAIE,KAAKA,KAAK+E,UAChBrF,EAASH,GAAiB4D,IAC1B6B,KAAMC,QAAQ,6BAA8B,CAC1CC,UAAW,CAAE9T,MAAO,SACpBoE,SAAU,oBAKlB,MAAOgL,GACPF,QAAQC,IAAIC,KO5oBC2E,CAAWlI,KAEtBA,GAAI,GAEN,CACE0H,KAAMhC,GACNtO,OAAQ,WACN,IAAIC,EAAU,CACZ2I,GAAIA,EACJoG,QAASA,EACTP,YAAaa,EACbZ,SAAUU,EAAiB2B,MAAM,KACjClE,KAAM2C,EACNV,OAAQA,EACRF,OAAQoC,SAASf,EAAarI,OAC9BiH,UAAWmC,SAASZ,EAAgBxI,OACpC+G,SAAUqC,SAASlB,EAAelI,QAEpCyD,EPuhBN,SAAC4F,EAAiBlC,EAA0BmC,GAA5C,OACA,SAAC7F,GACC,GAAI0D,EACF,IACEjH,KACGyI,KADH,GACY,CACRC,UAAW,kBACXvQ,QAAQ,eAAMgR,KAEfzF,MAAK,SAACC,GACL,IAAI0F,EAAgB,CAClBvI,GAAI6C,EAAIE,KAAKA,KAAKyF,mBAClB3C,YAAawC,EAAWxC,YACxBC,SAAUuC,EAAWvC,SACrB7B,KAAMoE,EAAWpE,KACjB8B,SAAUsC,EAAWtC,SACrBC,OAAQqC,EAAWrC,OACnBC,UAAWoC,EAAWpC,UACtBC,OAAQmC,EAAWnC,QAGflF,EAAiBsH,EAAMrH,QAC3BqH,EAAMpH,QAAO,SAACC,GAAD,OAAUA,EAAKnB,KAAOqI,EAAWrI,MAAI,IAGhDqB,EAAQ,aAAOiH,GACnBjH,EAASL,GAAkBuH,EAE3B9F,EAASJ,GAAWhB,IAGpB0G,KAAMU,QAAQ,0BAA2B,CACvCR,UAAW,CAAE9T,MAAO,SACpBoE,SAAU,mBAGhB,MAAOgL,GACPF,QAAQC,IAAIC,QAET,IAAK4C,EACV,IACEjH,KACGyI,KADH,GACY,CACRC,UAAW,gBACXvQ,QAAQ,eAAMgR,KAEfzF,MAAK,SAACC,GACL,GAAIA,EAAIE,KAAKA,KAAK2F,OAAQ,CACxB,IAAIH,EAAgB,CAClBvI,GAAIqI,EAAWrI,GACf6F,YAAawC,EAAWxC,YACxBC,SAAUuC,EAAWvC,SACrB7B,KAAMoE,EAAWpE,KACjB8B,SAAUsC,EAAWtC,SACrBC,OAAQqC,EAAWrC,OACnBC,UAAWoC,EAAWpC,UACtBC,OAAQmC,EAAWnC,QAGflF,EAAiBsH,EAAMrH,QAC3BqH,EAAMpH,QAAO,SAACC,GAAD,OAAUA,EAAKnB,KAAOqI,EAAWrI,MAAI,IAGhDqB,EAAQ,aAAOiH,GACnBjH,EAASL,GAAkBuH,EAE3B9F,EAASJ,GAAWhB,IACpB0G,KAAMU,QAAQ,4BAA6B,CACzCR,UAAW,CAAE9T,MAAO,SACpBoE,SAAU,qBAGZ8K,QAAQC,IAAIT,EAAIE,SAGtB,MAAOQ,GACPF,QAAQC,IAAIC,KOnmBHoF,CAAStR,EAAS8O,EAAiBa,EAAW5G,UAGzDJ,GAAI,IAmBR,OAfA4I,qBAAU,WAERnG,EAASC,MACTD,EAASe,MACTf,EAASiB,GAAY2D,EAAarI,UACjC,CAACyD,EAAU4E,IAEduB,qBAAU,WAEN7B,EADW,WAATH,KAKH,CAACA,IAGF,eAAC3L,GAAD,WACE,cAACjB,GAAD,CAAkBH,UAAU,EAA5B,SACG8K,EAAQ1B,KAAI,SAAC+B,GAAY,IAChB0C,EAAqB1C,EAArB0C,KAAM1H,EAAegF,EAAfhF,GAAI5I,EAAW4N,EAAX5N,OAClB,OACE,cAAC6C,GAAD,CAAuBiE,QAAS,kBAAM9G,KAAtC,SACE,cAACsQ,EAAD,CAAM5D,KAAM,MADK9D,QAMzB,eAAC9E,GAAD,WACE,uDACA,sBAAKtD,MAAO,CAAEC,QAAS,OAAQ2M,IAAK,QAApC,UACE,sBAAK5M,MAAO,CAAEC,QAAS,OAAQ2M,IAAK,OAApC,UAEE,cAACrJ,GAAD,CACEC,SAAiC,IAAxBsL,EACTxI,QAAS,kBAAMyI,GAAe,MAEhC,0CAEF,sBAAK/O,MAAO,CAAEC,QAAS,OAAQ2M,IAAK,OAApC,UACE,cAACrJ,GAAD,CACEC,SAAiC,IAAxBsL,EACTxI,QAAS,kBAAMyI,GAAe,MAEhC,iDAImB,IAAxBD,GACC,eAACxL,GAAD,WACE,8CACA,cAACZ,GAAD,CACEwK,SAAU,SAAC/I,GACT0K,EAAY1K,EAAE8M,OAAO7J,QAEvBA,MAAOwH,EACPjS,OAAO,OACPsQ,YAAY,4DAIlB,eAAC3J,GAAD,WACE,uDACA,sBAAKtD,MAAO,CAAEC,QAAS,OAAQ2M,IAAK,QAApC,UACE,sBAAK5M,MAAO,CAAEC,QAAS,OAAQ2M,IAAK,OAApC,UACE,cAACrJ,GAAD,CACEC,QAAkB,WAATwL,EACT1I,QAAS,kBAAM2I,EAAQ,aAEzB,+CAEF,sBAAKjP,MAAO,CAAEC,QAAS,OAAQ2M,IAAK,OAApC,UACE,cAACrJ,GAAD,CACEC,QAAkB,aAATwL,EACT1I,QAAS,kBAAM2I,EAAQ,eAEzB,sDAILC,GACC,eAACzL,GAAD,WACE,cAAC,GAAD,CACEyJ,SAAU,SAAC/I,GAAD,OAAOoL,EAAkBpL,IACnCiD,MAAOkI,EACPvC,QAASqC,EAAWnH,QACpBgF,YAAY,eAEd,cAAC,GAAD,CACEC,SAAU,SAAC/I,GAAD,OAAOuL,EAAiBvL,IAClCiD,MAAOqI,EACP1C,QAASqC,EAAWpH,MACpBiF,YAAY,aAEd,cAAC,GAAD,CACEC,SAAU,SAAC/I,GAAD,OAAO0L,EAAmB1L,IACpCiD,MAAOwI,EACP7C,QAASqC,EAAWlH,SACpB+E,YAAY,uBC7IXiE,GAAW,SAAC7U,GAAW,IAAD,EAU7BA,EAAM2C,MARRoJ,EAF+B,EAE/BA,GACA+I,EAH+B,EAG/BA,UACAC,EAJ+B,EAI/BA,eACAC,EAL+B,EAK/BA,WACAtJ,EAN+B,EAM/BA,KACAuJ,EAP+B,EAO/BA,WACA/C,EAR+B,EAQ/BA,gBACAgD,EAT+B,EAS/BA,SAT+B,EAWT7C,oBAAS,GAXA,oBAW1BvM,EAX0B,KAWpBqP,EAXoB,KAY3BpC,EAAatP,YAAYd,IACzB6L,EAAW4D,cACXgD,EAAaC,iBAAO,MAdO,EAgBChD,oBAAS,GAhBV,oBAgB1BiD,EAhB0B,KAgBfC,EAhBe,OAkBKlD,oBAAS,GAlBd,oBAkB1BmD,EAlB0B,KAkBbC,EAlBa,OAoBCpD,oBAAS,GApBV,oBAoB1BqD,EApB0B,KAoBfC,EApBe,OAuBKtD,mBAASyC,GAvBd,oBAuB1Bc,EAvB0B,KAuBbC,EAvBa,OAwBGxD,mBAAS0C,GAxBZ,oBAwB1Be,EAxB0B,KAwBdC,EAxBc,OAyBH1D,mBAAS3G,GAzBN,oBAyB1BsK,EAzB0B,KAyBjBC,EAzBiB,OA0BL5D,mBAAS4C,GA1BJ,oBA0B1BiB,EA1B0B,KA0BlBC,EA1BkB,OA2BG9D,mBACT,SAAzB0C,EAAexJ,OA5BgB,oBA2B1B6K,EA3B0B,KA2BdC,GA3Bc,QA8BKhE,mBAAS2C,GA9Bd,sBA8B1BsB,GA9B0B,MA8BbC,GA9Ba,SA+BOlE,mBAAS6C,GA/BhB,sBA+B1BsB,GA/B0B,MA+BRC,GA/BQ,MAiC3B/F,GAAU,CACd,CACE+C,KAAM/B,GACNvO,OAAQ,WACNgS,GAASrP,IAEXiG,GAAI,EACJ2K,MAAO5Q,IAAQ,GAEjB,CACE2N,KAAMjC,GACNrO,OAAQ,WACNsS,GAAe,IAEjB1J,GAAI,EACJ2K,MAAM,GAER,CACEjD,KAAMhC,GACNtO,OAAQ,WACNwS,GAAa,IAEf5J,GAAI,EACJ2K,KAAM5Q,IAAQ,IAKlB6O,qBAAU,WACR,IAAMgC,EAAqB,SAAC3O,GACtBoN,EAAWwB,UAAYxB,EAAWwB,QAAQC,SAAS7O,EAAM4M,SAC3DO,GAAQ,IAMZ,OADAhN,SAASG,iBAAiB,YAAaqO,GAChC,WAELxO,SAASC,oBAAoB,YAAauO,MAE3C,CAACvB,EAAYD,IA6BhB,OACE,eAACtP,GAAD,CAAgBC,KAAMA,EAAMgR,IAAK1B,EAAjC,UACE,cAAC,GAAD,CACErL,OAAQyL,EACR1L,eAAgB2L,EAChBnV,OAAO,QAHT,SAKE,eAACkG,GAAD,CAAkBC,cAAY,EAA9B,UACE,2EAC4C,IAC1C,sBACE9C,MAAO,CACLzD,MAAO,WAFX,SAKmB,KAAhB0V,EAAqBA,EAArB,UAAsC7J,KAP3C,OAWA,sBACEpI,MAAO,CACLC,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZyM,IAAK,OALT,UAQE,cAAC9I,GAAD,CACEwC,QAAS,WACPwL,GAAe,IAFnB,sBAOA,cAAChO,GAAD,CACEH,GAAG,UACH2C,QAAS,WACP,GAAI8B,EAAK,IAAO,CACd,IAAMgL,EAAehE,EAAW3H,WAAW6B,QACzC,SAACC,GAAD,OAAUA,EAAKnB,KAAOA,KAExByC,GR6DfwI,EQ7DwCD,ER6DL,SAACvI,GACnCA,EAAShB,GAAewJ,YQ5DVxI,GR0Wf2D,EQ1WoCpG,ER0WnBZ,EQ1WuB4H,EAAW3H,WR0WpD,uCAAgD,WAAOoD,GAAP,SAAA2E,EAAA,sDAC9C,IACElI,KACGyI,KADH,GACY,CACRC,UAAW,cACXvQ,QAAS,CACP+O,QAASA,KAGZxD,MAAK,SAACC,GACL,IAAMmI,EAAe5L,EAAO8B,QAAO,SAACC,GAAD,OAAUA,EAAKnB,KAAOoG,KACrDvD,EAAIE,KAAKA,KAAK+E,SAChBrF,EAASlB,GAAcyJ,IAEzBjD,KAAMC,QAAQ,yCAAiC,CAC7CC,UAAW,CAAE9T,MAAO,SACpBoE,SAAU,mBAGhB,MAAOgL,GACPF,QAAQC,IAAIC,GApBgC,2CAAhD,4DAAC6C,EAAiBhH,EA/SjB6L,EQzDavB,GAAe,IAXnB,8BAmBN,cAAC,GAAD,CAAO1L,OAAQ2L,EAAW5L,eAAgB6L,EAAcrV,OAAO,QAA/D,SACE,eAACkG,GAAD,CAAkBC,cAAY,EAA9B,UACE,0EAC2C,IACzC,sBACE9C,MAAO,CACLzD,MAAO,WAFX,SAKmB,KAAhB0V,EAAqBA,EAArB,UAAsC7J,KAP3C,OAWA,sBACEpI,MAAO,CACLC,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZyM,IAAK,OALT,UAQE,cAAC9I,GAAD,CACEwC,QAAS,WACP0L,GAAa,IAFjB,sBAOA,cAAClO,GAAD,CACEH,GAAG,UACH2C,QAAS,WAUL,IRoVfgN,EAA8BC,EQ7VjB,GAAIpR,IAASoM,EACX6D,EAAc,CACZxK,MAAOuK,EAAWvK,MAClBR,MAAM,2BACD+K,EAAW/K,OADX,IAEHW,KAAMwK,EACNzK,OAAQ6K,OAWZ9H,GR4UfyI,EQpViC,CAChBlL,GAAIA,EACJ+I,UAAWc,EACXV,SAAUsB,GACVxB,WAAYsB,GACZrB,WAAYiB,EACZnB,eAAgBe,GR8UHoB,EQzUXnE,EAAWjH,eAAeC,GAC1BgH,EAAW3H,WRwU/B,uCACA,WAAOoD,GAAP,eAAA2E,EAAA,sDACE,IACElI,KACGyI,KADH,GACY,CACRC,UAAW,YACXvQ,QAAS,CACP2I,GAAIkL,EAAYlL,GAChBmL,SAAUA,EACV3U,SAAU0U,EAAYnC,UACtBI,SAAU+B,EAAY/B,SACtBzJ,OAAQwL,EAAYjC,WACpBtJ,KAAMuL,EAAYhC,WAClBa,WAAU,UAAEmB,EAAYlC,sBAAd,aAAE,EAA4BhK,MAAMS,QAGjDmD,MAAK,SAACC,IACwB,IAAzBA,EAAIE,KAAKA,KAAK2F,SAChBjG,EACE1B,GAAgB,CACdO,cAAe4J,EACf9J,YAAa8J,EAAYlL,MAG7B+H,KAAMU,QAAQ,wCAAgC,CAC5CR,UAAW,CAAE9T,MAAO,SACpBoE,SAAU,oBAIlB,MAAOgL,GACPF,QAAQC,IAAIC,GA9BhB,2CADA,wDQrUgB6F,GAAQ,QACH,GAAIjD,EAAiB,CAC1B,IAAIiF,EAAW,CACbD,SAAUnE,EAAWjH,eAAeC,GACpCxJ,SAAUqT,EACVV,SAAUsB,GACV9K,KAAMwK,EACNJ,WAAYA,EACZrK,OAAQ6K,IAEV9H,ERuNhB,SAAC4I,EAA0BD,EAAeE,GAA1C,8CACA,WAAO7I,GAAP,SAAA2E,EAAA,+EAE6BlI,KACtByI,KADsB,GACb,CACRC,UAAW,0BACXvQ,QAAS,CACPb,SAAU4U,EAAS5U,SACnB2S,SAAUiC,EAASjC,SACnBzJ,OAAQ0L,EAAS1L,OACjBC,KAAMyL,EAASzL,QAGlBiD,MAAK,SAACC,GAEL,OAAOA,EAAIE,KAAKA,KAAKwI,wBAd7B,QAkBuB,IAlBvB,OAmBMrM,KACGyI,KADH,GACY,CACRC,UAAW,cACXvQ,QAAS,CACP8T,SAAUG,EACV9U,SAAU4U,EAAS5U,SACnB2S,SAAUiC,EAASjC,SACnBzJ,OAAQ0L,EAAS1L,OACjBC,KAAMyL,EAASzL,KAAO,IAAM,IAC5BoK,WAAYqB,EAASrB,WAAW/K,MAAMS,QAGzCmD,MAAK,SAACC,GACLQ,QAAQC,IAAIT,EAAIE,KAAKA,KAAKyI,gBAC1B,IAAIlK,EAAgB,CAClBtB,GAAI6C,EAAIE,KAAKA,KAAKyI,eAClBzC,UAAWqC,EAAS5U,SACpB2S,SAAUiC,EAASjC,SACnBxJ,KAAMyL,EAASzL,KACfuJ,WAAYkC,EAASzL,KAAO,IAAM,IAClCqJ,eAAgBoC,EAASrB,WACzBd,WAAYmC,EAAS1L,QAEvB+C,EACE1B,GAAgB,CACdO,cAAeA,EACfF,YAAaiK,KAGjBtD,KAAMU,QAAQ,sCAA8B,CAC1CR,UAAW,CAAE9T,MAAO,SACpBoE,SAAU,mBAIhBkK,EACEF,GAAS,CACP5B,QAAQ,EACRC,QACE,kEA1DZ,gDA+DIyC,QAAQC,IAAR,MA/DJ,yDADA,sDQtNkBmI,CAAYzL,EAAIoL,EAAUpE,EAAWjH,eAAeC,KAEtDoJ,GAAQ,GAEVQ,GAAa,IA1CjB,SA6CGzD,EAAe,4BAKxB,cAAC,GAAD,CAAOnI,OAAQuL,EAAWxL,eAAgByL,EAA1C,SACE,cAAC/O,GAAD,UACGuM,EAAW3G,QAAQE,aAClB,cAAC,GAAD,CAAQjC,KAAK,UAEb,cAAC,GAAD,CAAW/J,OAAO,OAAlB,SACE,eAACoG,GAAD,WACE,qBAAI/C,MAAO,CAAE8T,UAAW,SAAUC,YAAa,UAA/C,6BACgB,IACd,sBACE/T,MAAO,CACLzD,MAAO,WAFX,oBAMQ,IARV,aASa,IACX,sBACEyD,MAAO,CACLzD,MAAO,WAFX,SAKG0V,IACK,OAEV,mBAAGjS,MAAO,CAAE2M,SAAU,QAAtB,gEAGA,qBAAK3M,MAAO,CAAE4D,UAAW,OAAQoQ,aAAc,QAA/C,SACE,cAACtQ,GAAD,CACEC,GAAG,UACH2C,QAAS,WACPuE,GRpF0B,SAACA,GAS/CA,EAASZ,GARuB,CAC9B7B,GAAI,IACJ6F,aAAa,EACbC,SAAU,GACV7B,KAAM,WACNiC,OAAQ,EACRC,iBAAiB,SQ0EH,6BASF,cAACnL,GAAD,UACGgM,EAAW5G,OAAO6C,KAAI,SAAC9B,EAAM0K,GAC5B,OAAO,cAAC,GAAD,CAAmB7H,SAAU7C,EAAMiF,QAASpG,GAAhC6L,iBAQjC,cAAC,GAAD,CACE5N,MAAM,OACND,OAAQgJ,EAAW/I,MAAM0C,OAEzBpM,OAAO,QACPD,MAAM,QALR,SAOE,eAACmG,GAAD,CAAkBC,cAAY,EAA9B,UACE,6BAAKsM,EAAW/I,MAAM2C,UACtB,qBACEhJ,MAAO,CACLC,QAAS,OACTG,eAAgB,SAChBD,WAAY,UAJhB,SAOE,cAAC2D,GAAD,CACEH,GAAG,UACH2C,QAAS,WACPuE,EAASD,GAAY,CAAE7B,QAAQ,EAAOC,QAAS,OAHnD,8BAWN,cAAC5G,GAAD,UACG2K,GAAQ1B,KAAI,SAAC+B,GAAY,IAChB0C,EAA2B1C,EAA3B0C,KAAM1H,EAAqBgF,EAArBhF,GAAI5I,EAAiB4N,EAAjB5N,OAClB,OADmC4N,EAAT2F,MAGtB,cAAC1Q,GAAD,CAAuBiE,QAAS,kBAAM9G,KAAtC,SACE,cAACsQ,EAAD,CAAM5D,KAAM,MADK9D,QAO3B,eAAC9F,GAAD,WACE,cAACC,GAAD,UACE,eAACC,GAAD,WACE,4CACCL,EACC,cAACO,GAAD,CACEuK,YAAY,oBACZ7F,MAAO6K,EACP/E,SAAU,SAAC/I,GAAD,OAAO+N,EAAe/N,EAAE8M,OAAO7J,UAG3C,cAACxE,GAAD,UACE,4BAAIqP,MAGR,cAAClQ,GAAD,CACEhC,GAAG,IACHuG,QAAS,WRuBrB,IACE4N,EQvBYrJ,GRuBZqJ,EQrBgB9L,EACAgH,EAAWnH,QACXmH,EAAWpH,MACXoH,EAAWlH,SRiB7B,uCAMA,WAAO2C,GAAP,SAAA2E,EAAA,sDACE,IACE3E,EAAST,IAAe,IACxB9C,KACGyI,KADH,GACY,CACRC,UAAW,oBACXvQ,QAAS,CACP+O,QAAS0F,KAGZlJ,MAAK,SAACC,GACL,IAAIyF,EACJA,EAAQzF,EAAIE,KAAKA,KAAKE,KAAI,SAAC8I,GACzB,MAAO,CACL/L,GAAI+L,EAAK/L,GACT6F,YAAakG,EAAKlG,YAClBC,SAAUiG,EAAKjG,SACf7B,KAAM8H,EAAK9H,KACXiC,OAAQ6F,EAAK7F,OACbF,OAAQ+F,EAAK/F,OACbC,UAAW8F,EAAK9F,UAChBF,SAAUgG,EAAKhG,aAInBtD,EAASV,GAASuG,IAClB7F,EAAST,IAAe,OAG5B,MAAOuB,GACPF,QAAQC,IAAIC,GACZd,EAAST,IAAe,IA/B5B,2CANA,wDQdcwH,GAAcD,IAXlB,6BAkBJ,eAACpP,GAAD,WACE,eAACC,GAAD,WACE,sDACCL,EACC,cAAC,GAAD,CACEiF,MAAO+K,EACPjF,SAAU,SAAC/I,GAAD,OAhRG,SAACA,GAE1BiO,EAAcjO,GACE,SAAZA,EAAEyD,OACJ8K,IAAc,GACdJ,GAAW,GACXM,GAAezO,EAAEiD,MAAMU,QACvB0K,EAAUrO,EAAEiD,MAAMW,QAElB2K,IAAc,GACdF,EAAUrO,EAAEiD,MAAMW,MAClB6K,GAAezO,EAAEiD,MAAMU,SAqQIsM,CAAmBjQ,IACpC8I,YAAY,oCACZF,QAASqC,EAAWzH,cAGtB,cAAC/E,GAAD,UACE,4BAAIuP,EAAWvK,aAIpB6K,GACC,eAACjQ,GAAD,WACE,uDACCL,EACC,cAACO,GAAD,CACEuK,YAAY,+BACZ7F,MAAOuL,GACPzF,SAAU,SAAC/I,GAAD,OAAOyO,GAAezO,EAAE8M,OAAO7J,UAG3C,cAACxE,GAAD,UACE,4BAAI+P,UAKZ,eAACnQ,GAAD,WACE,mDACCL,EACC,cAACO,GAAD,CACE2J,KAAK,WACLY,YAAY,2BACZ7F,MAAOyL,GACP3F,SAAU,SAAC/I,GACT2O,GAAY3O,EAAE8M,OAAO7J,UAIzB,cAACxE,GAAD,UACE,4BAAyB,KAArBiQ,GAA0B,UAAY,UAIhD,eAACrQ,GAAD,WACGiQ,EAAa,4CAAyB,0CACrCA,GAActQ,EACd,cAAC,KAAD,CACEqB,QAAS6O,EACTnF,SAAU,WA3UlB/K,IACEkQ,GACFC,GAAW,GACXE,EAAU,OAEVF,GAAW,GACXE,EAAU,QAsUF6B,aAAa,EACbC,eAAe,EACfC,QAAQ,UACRrI,KAAK,SAELuG,GAActQ,EAChB,cAACO,GAAD,CACEuK,YAAY,oBACZ7F,MAAOmL,EACPrF,SAAU,SAAC/I,GACTqO,EAAUrO,EAAE8M,OAAO7J,UAIvB,cAACxE,GAAD,UACE,4BAAI2P,mBC1TLiC,GArHY,WACzB,IAAMpF,EAAatP,YAAYd,IACzBa,EAAcC,YAAYH,IAC1BkL,EAAW4D,cAHc,EAIGC,oBAAS,GAJZ,oBAIxBiD,EAJwB,KAIbC,EAJa,KAM/BZ,qBAAU,WTuTV,IAAC0C,EStTC7I,GTsTD6I,EStT+BtE,EAAWjH,eAAeC,GTsT1D,uCAAsB,WAAOyC,GAAP,SAAA2E,EAAA,sDACpB,IACE3E,EAASR,IAAiB,IAC1B/C,KACGyI,KADH,GACY,CACRC,UAAW,uBACXvQ,QAAS,CACP8T,SAAUG,KAGb1I,MAAK,SAACC,GACL,SAASwJ,EAAWC,GAClB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAEjD,IAAIC,EACJA,EAAY7J,EAAIE,KAAKA,KAAKE,KAAI,SAAC0J,GAC7B,MAAO,CACL3M,GAAI2M,EAAM3M,GACV+I,UAAW4D,EAAMnW,SACjBwS,eAAgB,CACdxJ,MAAOmN,EAAM5C,WACV6C,cACAzE,MAAM,KACNlF,IAAIoJ,GACJ9F,KAAK,KACRvH,MAAO,CACLS,KAAMkN,EAAM5C,WACZrK,OAAQiN,EAAMjN,OACdC,KAAMgN,EAAMhN,OAGhBwJ,SAAUwD,EAAMxD,SAChBF,WAAY0D,EAAMjN,OAClBC,KAAqB,MAAfgN,EAAMhN,KACZuJ,WAAYyD,EAAMhN,SAGtB8C,EAASlB,GAAcmL,IACvBjK,EAASR,IAAiB,OAG9B,MAAOsB,GACPF,QAAQC,IAAIC,GACZd,EAASR,IAAiB,IA3CR,2CAAtB,wDSrTEQ,GAA2BuE,EAAWjH,eAAeC,GTqZvD,uCAAuB,WAAOyC,GAAP,SAAA2E,EAAA,sDACrB,IACElI,KACGyI,KADH,GACY,CACRC,UAAW,oBACXvQ,QAAS,CACP8T,SAAU,KAGbvI,MAAK,SAACC,GACL,IAAInC,EAAmBmC,EAAIE,KAAKA,KAAK8J,MAAM5J,KAAI,SAACK,GAC9C,MAAO,CACLW,KAAMX,EAAIW,KACVC,WAAYZ,EAAIY,WAChBC,KAAMb,EAAIa,KACV3N,SAAU8M,EAAIwJ,kBAIlBrK,EAASL,GAAQ1B,OAErB,MAAO6C,GACPF,QAAQC,IAAIC,GAtBO,2CAAvB,wDSpZEd,EAASC,MACTD,EAASe,MACTf,EAASiB,QACR,CAACjB,EAAUhL,EAAYjB,SAAUwQ,EAAWjH,eAAeC,KAE9D,IAAM+M,EAAY,aAAO/F,EAAWtG,MAEpC,OACE,eAAClH,GAAD,WACE,0DACA,cAAC,GAAD,CAAOwE,OAAQuL,EAAWxL,eAAgByL,EAA1C,SACE,cAAC/O,GAAD,UACE,cAAC,GAAD,CAAWlG,OAAO,OAAlB,SACE,eAACoG,GAAD,WACE,qBAAI/C,MAAO,CAAE8T,UAAW,SAAUC,YAAa,UAA/C,0BACgB,IACd,sBACE/T,MAAO,CACLzD,MAAO,WAFX,kBAMQ,IARV,uBAWA,mBAAGyD,MAAO,CAAE2M,SAAU,QAAtB,2EAGA,cAAC3J,GAAD,UACGmS,EAAaC,UAAU/J,KAAI,SAAC9B,EAAM0K,GACjC,OAAO,cAAC,GAAD,CAAiB7H,SAAU7C,GAAjB0K,iBAO7B,cAAC,GAAD,CACE5N,MAAM,OACND,OAAQgJ,EAAW/I,MAAM0C,OAEzBpM,OAAO,QACPD,MAAM,QALR,SAOE,eAACmG,GAAD,CAAkBC,cAAY,EAA9B,UACE,6BAAKsM,EAAW/I,MAAM2C,UACtB,qBACEhJ,MAAO,CACLC,QAAS,OACTG,eAAgB,SAChBD,WAAY,UAJhB,SAOE,cAAC2D,GAAD,CACEH,GAAG,UACH2C,QAAS,WACPuE,EAASD,GAAY,CAAE7B,QAAQ,EAAOC,QAAS,OAHnD,8BAWN,cAACjH,GAAD,CAASE,SAAS,OAAOlC,GAAG,IAAIuG,QAAS,kBAAMsL,GAAcD,IAA7D,sBAGA,eAAC9P,GAAD,WACGuN,EAAW3G,QAAQC,eAClB,cAAC,GAAD,IAEA,cAAC,GAAD,CAAW/L,OAAO,OAAlB,SACE,cAACmF,GAAD,UACGsN,EAAW3H,WAAW4D,KAAI,SAACrM,GAE1B,OAAO,cAAC,GAAD,CAAyBA,MAAOA,GAAjBA,EAAMoJ,WAKpC,8BACE,cAAC1E,GAAD,CACEE,UAAU,OACV0C,QAAS,WAEL8I,EAAW3H,WAAW4N,OACtBjG,EAAWjH,eAAeI,eAE1BsC,GT8EsB,SAACA,GAWrCA,EAAS3B,GAViC,CACxCd,GAAI,MACJ+I,UAAW,GACXC,eAAgB,CAAExJ,MAAO,GAAIR,MAAO,CAAES,KAAM,GAAIC,OAAQ,GAAIC,KAAM,MAClEwJ,SAAU,GACVxJ,MAAM,EACNuJ,gBAAYgE,EACZjE,WAAY,GACZ9C,iBAAiB,QSrFL1D,EACED,GAAY,CACV7B,QAAQ,EACRC,QAAQ,4CAAD,OAA8CoG,EAAWjH,eAAeI,oBAZzF,qCClHGiM,GAAqB,SAACnY,GAAgB,IACzCkZ,EAAWlZ,EAAXkZ,OADwC,EAE1B7G,mBAAS,GAFiB,oBAEzC8G,EAFyC,KAEpCC,EAFoC,KAG1C5K,EAAW4D,cACX5O,EAAcC,YAAYH,IAOhC,OALAqR,qBAAU,WACRnG,EV+SF,SAACjM,EAAkB2W,GAAnB,8CAAmC,WAAO1K,GAAP,SAAA2E,EAAA,sDACjC,IACElI,KACGyI,KADH,GACY,CACRC,UAAW,4BACXvQ,QAAS,CACP8V,OAAQ/E,SAAS+E,MAGpBvK,MAAK,SAACC,GACL,GAAIA,EAAIyK,OAAS,KAA2B,SAApBzK,EAAIE,KAAKuK,OAAmB,CAClD,IAAIvN,EAAiC,CACnCC,GAAI6C,EAAIE,KAAKA,KAAK/C,GAClBC,OAAQ4C,EAAIE,KAAKA,KAAK9C,OACtBC,aAAc2C,EAAIE,KAAKA,KAAK7C,aAC5BlC,OAAQ6E,EAAIE,KAAKA,KAAK/E,OACtBmC,eAAgB0C,EAAIE,KAAKA,KAAK5C,gBAEhCsC,EAASX,GAAkB/B,QAIjC,MAAOwD,GACPF,QAAQC,IAAIC,GAvBmB,2CAAnC,sDU/SWgK,CAAkB9V,EAAYjB,SAAU2W,IACjD9J,QAAQC,IAAI6J,KACX,CAAC1K,EAAUhL,EAAYjB,SAAU2W,IAGlC,eAACjU,GAAD,WACE,eAACE,GAAD,WACE,cAACC,GAAD,CACEE,SAAkB,IAAR6T,EACVlP,QAAS,WACPmP,EAAO,IAHX,kCAQA,cAAChU,GAAD,CAAWE,SAAkB,IAAR6T,IACrB,cAAC/T,GAAD,CAAWE,SAAkB,IAAR6T,IACrB,cAAC/T,GAAD,CAAWE,SAAkB,IAAR6T,OAEvB,cAACjU,GAAD,UAAkB,IAARiU,GAAa,cAAC,GAAD,MACvB,cAAC,KAAD,CACE7U,SAAS,cACTiV,UAAW,KACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZnW,MAAO,CAAEC,QAAS,UAEpB,cAAC,KAAD,Q,SC1CSmW,GAbM,SAAC,GAIM,IAH1BC,EAGyB,EAHzBA,gBAEGC,GACsB,EAFzBC,mBAEyB,4DACIC,cAArBC,EADiB,EACjBA,SAAUC,EADO,EACPA,OAClB,OAAIL,EACK,cAAC,IAAD,eAAWC,IAEX,cAAC,IAAD,CAAUvW,GAAE,oBAAe0W,GAAf,OAA0BC,MCgBpCC,GAAYlY,YAAY,CACnCC,KAAM,OACNC,aAV0B,CAC1BsI,MAAO,KACP0E,MAAO,GACPiL,MAAO,EACPvQ,MAAO,CAAE0C,QAAQ,EAAOC,QAAS,IACjC6N,YAAY,GAMZxX,SAAU,CACRyX,aAAc,SAACvX,EAAOC,GACpBD,EAAM0H,MAAQzH,EAAOC,SAEvBsX,cAAe,SAACxX,GACdA,EAAM0H,MAAQ,MAEhB+P,SAAU,SAACzX,EAAOC,GAChBD,EAAMoM,MAAQnM,EAAOC,SAEvBwX,gBAAiB,SAAC1X,GAChBA,EAAMqX,MAAQrX,EAAMqX,MAAQ,GAE9BM,aAAc,SAAC3X,GACbA,EAAMqX,MAAQ,GAEhBjM,SAAU,SAACpL,EAAOC,GAChBD,EAAM8G,MAAQ7G,EAAOC,SAEvB0X,gBAAiB,SAAC5X,EAAOC,GACvBD,EAAMsX,WAAarX,EAAOC,Y,GAa5BkX,GAAUjX,QAPZoX,G,GAAAA,aAEAE,I,GADAD,c,GACAC,UAGArM,I,GAFAsM,gB,GACAC,a,GACAvM,UACAwM,G,GAAAA,gBAGWC,GAAa,SAAC7X,GAAD,OAAsBA,EAAM8X,MAoEzCA,GAAO,SAAC9X,GAAD,OAAsBA,EAAM8X,MAEjCV,MAAf,QCgCeW,GAjHO,WAGpB,IAAMC,EAAY,IAAIC,gBAAgBpT,OAAOqT,SAASf,QAChDzP,EAAQsQ,EAAUxM,IAAI,SACtBwK,EAASgC,EAAUxM,IAAI,UAKvBpL,EAAOG,YAAYsX,IACnBM,EAAY5X,YAAYuX,IACxBxM,EAAW4D,cAEjBuC,qBAAU,WACRnG,EDkCsB,SAAC5D,GAAD,8CAAgB,WAAO4D,GAAP,SAAA2E,EAAA,+DAGtCvR,KACG8M,IADH,oCACoC9D,IACjC+D,MAAK,SAAC2M,GACL,IAAIxM,EAAOwM,EAASxM,KACA,OAAhBA,EAAKyM,OACP/M,EAASsM,IAAgB,IAChBlQ,GAAyB,OAAhBkE,EAAKyM,SACvB/M,EAASF,GAAS,CAAE5B,QAAQ,EAAMC,QAAS,sBAC3C6B,EAASsM,IAAgB,QAXO,sDAetCtM,EAASmM,GAAS,UAfoB,kBAgB/BvL,QAAQE,MAAM,KAAEkM,UAhBe,wDAAhB,sDClCbC,CAAW7Q,IACpB4D,EDwBoB,SAAC5D,GAAD,OAAgB,SAAC4D,GACnC5D,GACFD,GAAiBC,GACjB4D,EAASiM,GAAa7P,KAEtB4D,EAASF,GAAS,CAAE5B,QAAQ,EAAMC,QAAS,4BC7BlC+O,CAAS9Q,IAClB4D,EzBrB0B,SAAC5D,GAAD,8CAAgB,WAAO4D,GAAP,SAAA2E,EAAA,+EAEpCvR,KACH8M,IADG,2CACqC9D,IACxC+D,MAAK,SAAC2M,GACL,IAAMxM,EAAa,CACjBvM,SAAU+Y,EAASxM,KAAKC,OAAO4M,SAASC,SACxCvZ,KAAMiZ,EAASxM,KAAKC,OAAO4M,SAASE,KACpCrZ,SAAU8Y,EAASxM,KAAKC,OAAO4M,SAASG,SACxCrZ,YAAa6Y,EAASxM,KAAKC,OAAO4M,SAASI,YAC3CpZ,MAAO2Y,EAASxM,KAAKC,OAAO4M,SAASK,MACrCpZ,UAAW0Y,EAASxM,KAAKC,OAAO4M,SAASM,UACzCpZ,aAAcyY,EAASxM,KAAKC,OAAO4M,SAASO,aAC5CpZ,cAAewY,EAASxM,KAAKC,OAAO4M,SAASQ,cAC7CpZ,MAAOuY,EAASxM,KAAKC,OAAO4M,SAASS,MACrC1Z,UAAW4Y,EAASxM,KAAKC,OAAO4M,SAASjZ,WAG3C,OADA0M,QAAQC,IAAIiM,GACL9M,EAASvL,GAAW6L,OAlBW,+EAqBnCM,QAAQE,MAAM,KAAEkM,UArBmB,wDAAhB,sDyBqBjBa,CAAezR,MACvB,CAAC4D,EAAU5D,IAGd,IAAIoP,GAAkB,EAGK,KAAvBrP,OAA2BqP,GAAkB,GAEjD,IAAMsC,EAAkD,CACtDtC,kBACAE,mBAAoB,IACpBqC,aAAc,IACdC,gBAAiB,KAGbC,EAAU,WACd,OACE,cAAC,GAAD,CACEzS,MAAM,OACND,OAAQsR,EAAUrR,MAAM0C,OAExBpM,OAAO,QACPD,MAAM,QALR,SAOE,eAACmG,GAAD,CAAkBC,cAAY,EAA9B,UACE,6BAAK4U,EAAUrR,MAAM2C,UACrB,qBACEhJ,MAAO,CACLC,QAAS,OACTG,eAAgB,SAChBD,WAAY,UAJhB,SAOE,cAAC2D,GAAD,CACEH,GAAG,UACH2C,QAAS,WDxCI,IAAC7G,ECyCZoL,GDzCYpL,ECyCS,CAAEsJ,QAAQ,EAAOC,QAAS,IDzCZ,SAAC6B,GAClDA,EAASF,GAASlL,QCqCR,+BAcJsZ,EAAU,WACd,OACE,cAAC,IAAD,CAAQC,SAAS,eAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,2BACML,GADN,IAEEM,KAAK,IACLC,OAAK,EACLC,UAAWL,KAEb,cAAC,IAAD,CAAU/Y,GAAG,YAMfqZ,EAAY,WAChB,OACE,cAAC9d,EAAD,UACE,eAAC,IAAD,CAAY0d,SAAS,eAArB,UACE,cAAC,GAAD,IACA,cAACvd,EAAD,UACE,cAAC,GAAD,CAAWkB,OAAO,OAAlB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,2BACMgc,GADN,IAEEM,KAAI,IAEJC,OAAK,EAJP,SAOE,cAAC,GAAD,CAAoB3D,OAAQA,aAMpC,cAAC,GAAD,UAMR,OACE,yCAAmB,KAAf5V,EAAKgM,OAAgBhM,EAAKkX,WAAa,cAACuC,EAAD,IAAgB,cAACL,EAAD,IAA3D,QChKEM,I,OAAaC,IAAMC,iBAEnBC,GAAc,SAAC,GAAkB,IAAhBxU,EAAe,EAAfA,SAarB,OAAO,cAACqU,GAAWI,SAAZ,CAAqBrS,MAAO,GAA5B,SAAiCpC,KCM7B0U,I,MAAYjb,YAAY,CACnCC,KAAM,OACNC,aAR8B,CAC9Bgb,KAAM,GACNC,UAAW,GACXC,KAAM,GAMNxa,SAAU,CACRya,QAAS,SAACva,EAAOC,GAGfD,EAAMoa,KAAOna,EAAOC,SAEtBsa,WAAY,SAACxa,GACXA,EAAMoa,KAAO,IAEfK,aAAc,SAACza,EAAOC,GACpBD,EAAMqa,UAAYpa,EAAOC,SAE3Bwa,QAAS,SAAC1a,EAAOC,GACfD,EAAMsa,KAAOra,EAAOC,a,GA4SoCia,GAAUha,QAEzDga,I,GAFAI,Q,GAASC,W,GAAYC,a,GAAcC,QAEnCP,GAAf,SCrDaQ,GAAezb,YAAY,CACtCC,KAAM,UACNC,aAhCiC,CACjCgb,KAAM,GACNvT,OAAQ,GACR+T,aAAc,GACdC,KAAM,GACNC,aAAc,GACdC,WAAY,GACZC,cAAe,GACfC,MAAO,GACPC,eAAe,EACfzS,MAAO,GACP0S,YAAa,GACbC,UAAW,GACXzS,SAAU,GACV0S,OAAQ,GACRC,SAAU,GACVC,WAAY,EACZC,OAAQ,EACRC,SAAU,GACVC,MAAO,GACPC,WAAY,GACZC,MAAO,GACPC,cAAe,GACfC,iBAAkB,GAClBC,KAAM,EACNC,MAAO,GACPC,aAAc,GACdC,YAAa,IAMbpc,SAAU,CACRqc,YAAa,SAACnc,EAAOC,GACnBD,EAAMoa,KAAOna,EAAOC,QAAQ2V,WAE9BuG,cAAe,SAACpc,EAAOC,GACrBD,EAAM+a,WAAa9a,EAAOC,SAE5Bmc,iBAAkB,SAACrc,EAAOC,GACxBD,EAAM6G,OAAS5G,EAAOC,SAExBoc,oBAAqB,SAACtc,GACpB,IAAMuc,EAAevc,EAAMoa,KAAKrQ,QAAO,SAACnF,GACtC,OAAsE,IAA/DA,EAAE4X,QAAQ/G,cAAc3L,QAAQ9J,EAAM6a,KAAKpF,kBAEpDzV,EAAM4a,aAAe2B,GAEvBE,mBAAoB,SAACzc,EAAOC,GAC1B,IAAMyc,EAAU1c,EAAMoa,KAAK9E,MAAMrV,EAAOC,QAASD,EAAOC,QAAU,IAClEF,EAAMsb,SAAWoB,GAEnBC,QAAS,SAAC3c,EAAOC,GACfD,EAAM6a,KAAO5a,EAAOC,SAEtB0c,iBAAkB,SAAC5c,EAAOC,GACxBD,EAAM6b,cAAgB5b,EAAOC,SAE/B2c,oBAAqB,SAAC7c,EAAOC,GAC3BD,EAAM8b,iBAAmB7b,EAAOC,SAElC4c,gBAAiB,SAAC9c,EAAOC,GACvBD,EAAM8a,aAAe7a,EAAOC,SAE9B6c,iBAAkB,SAAC/c,EAAOC,GACxBD,EAAMgb,cAAgB/a,EAAOC,SAE/B8c,SAAU,SAAChd,EAAOC,GAChBD,EAAMib,MAAQhb,EAAOC,SAEvBgb,cAAe,SAAClb,EAAOC,GACrBD,EAAMkb,cAAgBjb,EAAOC,SAE/BqK,SAAU,SAACvK,EAAOC,GAChBD,EAAMyI,MAAQxI,EAAOC,SAEvB+c,eAAgB,SAACjd,EAAOC,GACtBD,EAAMmb,YAAclb,EAAOC,SAE7Bgd,aAAc,SAACld,EAAOC,GACpBD,EAAMob,UAAYnb,EAAOC,SAE3BuK,YAAa,SAACzK,EAAOC,GACnBD,EAAM2I,SAAW1I,EAAOC,SAE1Bid,UAAW,SAACnd,EAAOC,GACjBD,EAAMqb,OAASpb,EAAOC,SAExBkd,cAAe,SAACpd,EAAOC,GACrBD,EAAMub,WAAatb,EAAOC,SAE5Bmd,YAAa,SAACrd,EAAOC,GACnBD,EAAMyb,SAAWxb,EAAOC,SAE1Bod,SAAU,SAACtd,EAAOC,GAChBD,EAAM0b,MAAQzb,EAAOC,SAEvBqd,cAAe,SAACvd,EAAOC,GACrBD,EAAM2b,WAAa1b,EAAOC,SAE5Bsd,SAAU,SAACxd,EAAOC,GAChBD,EAAM4b,MAAQ3b,EAAOC,SAEvBud,QAAS,SAACzd,EAAOC,GACfD,EAAM+b,KAAO9b,EAAOC,SAEtBwd,SAAU,SAAC1d,EAAOC,GAChBD,EAAMgc,MAAQ/b,EAAOC,SAEvByd,gBAAiB,SAAC3d,EAAOC,GACvBD,EAAMic,aAAehc,EAAOC,SAE9B0d,eAAgB,SAAC5d,EAAOC,GACtBD,EAAMkc,YAAcjc,EAAOC,Y,GAmmB7Bya,GAAaxa,QAEFwa,I,GA5BbwB,Y,GACAE,iB,GACAC,oB,GACAF,c,GACAO,Q,GACAG,gB,GACAC,iB,GACAC,S,GACA9B,c,GACA3Q,S,GACAE,Y,GACA0S,U,GACAV,mB,GACAW,c,GACAC,Y,GACAC,S,GACAC,c,GACAC,S,GACAZ,iB,GACAC,oB,GACAY,Q,GACAC,S,GACAT,e,GACAC,a,GACAS,gB,GACAC,eAGajD,GAAf,SCr8BekD,GAdDC,YAAe,CAC3BC,QAAS,CACP3d,KAAM4d,GACNlG,KAAMmG,GACNC,QAASC,GACTvJ,KAAMwJ,GACN3e,MAAO4e,MCHXjY,IAASkY,OACP,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UAINtZ,SAASU,eAAe,U","file":"static/js/main.f6c157fb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppContainer = styled.main`\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const AppInnerContainer = styled.div`\n  /* padding-top: 8vh; */\n  /* width: 100%; */\n  height: 86vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  /* text-align: center;\n  text-justify: center; */\n\n  @media (min-width: 1024px) {\n    width: 80%;\n  }\n\n  @media (max-width: 640px) {\n    width: 95%;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    font-size: 14px;\n  }\n`;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const NavbarContainer = styled.nav`\n  background-color: white;\n  box-shadow: 2px 1px 8px rgba(138, 167, 196, 0.5);\n  width: 100%;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  height: 8vh;\n\n  @media (min-width: 1024px) {\n    /* width: 80%; */\n    height: 52px;\n  }\n`;\n\nexport const NavbarStyle = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n  width: 90%;\n  position: relative;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  /* @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 50% 50%;\n    align-items: center;\n    width: 85%;\n  } */\n\n  @media (min-width: 1024px) {\n    width: 80%;\n    min-height: 52px;\n  }\n`;\n\nexport const NavLogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const NavLogo = styled(NavLink)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    width: 40%;\n  }\n\n  @media (min-width: 768px) {\n    width: 35%;\n  }\n\n  @media (min-width: 1536px) {\n    width: 135px;\n  }\n`;\n\nexport const ProfileSquare = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    border-left-width: 2px;\n    padding-left: 2rem;\n  }\n`;\n\nexport const ProfileGrid = styled.div`\n  display: grid;\n  grid-template-columns: 73% 25%;\n  width: 100%;\n  height: 100%;\n  grid-gap: 2%;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 85% 15%;\n    width: 60%;\n  }\n`;\n\nexport const ProfileText = styled.p`\n  font-size: 12px;\n  font-weight: ${(props) => props.title && \"600\"};\n  color: ${(props) => props.color && props.color};\n\n  @media (min-width: 768px) {\n    font-size: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 13px;\n  }\n`;\n\nexport const MailService = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n","import React from \"react\";\n\nconst helppeopleLogo = ({ width }) => {\n  return (\n    <svg\n      width={width}\n      height=\"100%\"\n      viewBox=\"0 0 155 36\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M129.48 11.2654C129.754 11.23 129.844 11.0562 129.97 10.9436C132.19 8.76956 135.079 7.38207 138.183 6.99779C138.854 6.90767 139.537 6.91894 140.214 6.8948C140.253 6.88873 140.293 6.89166 140.33 6.90338C140.368 6.91509 140.402 6.93526 140.43 6.96228C140.458 6.9893 140.48 7.02244 140.493 7.05905C140.506 7.09566 140.51 7.13474 140.505 7.17319C140.505 7.9778 140.505 8.76953 140.505 9.5661C140.505 9.8123 140.438 9.86863 140.162 9.87185C139.51 9.86818 138.859 9.91607 138.216 10.0151C137.265 10.1721 136.338 10.4423 135.453 10.8197C134.832 11.0873 134.25 11.4347 133.721 11.8528C131.69 13.4778 129.998 15.4758 128.738 17.7361C128.635 17.9147 128.547 18.1014 128.441 18.2784C128.423 18.2955 128.402 18.3085 128.379 18.3163C128.355 18.3241 128.33 18.3266 128.306 18.3234C128.271 18.3234 128.239 18.2639 128.221 18.2237C128.207 18.174 128.198 18.1234 128.191 18.0724C127.788 16.029 127.182 14.0294 126.384 12.1022C124.589 7.74607 121.266 5.03133 116.774 3.73431C112.282 2.43728 108.006 3.13246 104.048 5.61065C103.831 5.74904 103.613 5.89119 103.395 6.03709C103.182 6.18192 102.971 6.33319 102.743 6.49411C102.58 6.36537 102.405 6.2479 102.253 6.11433C101.738 5.68145 101.229 5.23892 100.712 4.80765C100.385 4.5373 100.269 4.5196 100.738 4.13017C102.907 2.3038 105.504 1.04045 108.293 0.454728C110.461 -0.0213844 112.696 -0.120499 114.898 0.161851C116.475 0.363423 118.02 0.765862 119.492 1.35911C121.691 2.24886 123.716 3.50946 125.477 5.08444C127.024 6.43787 128.244 8.11611 129.046 9.99576C129.136 10.2082 129.21 10.427 129.29 10.6394C129.356 10.839 129.413 11.0369 129.48 11.2654Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M102.312 8.98193C102.936 9.30378 114.434 17.4882 114.884 17.9259C114.85 18.0981 114.688 18.1496 114.569 18.2333C110.645 21.0312 106.72 23.8275 102.796 26.6221C102.711 26.6817 102.633 26.7428 102.542 26.8008C102.522 26.8169 102.498 26.8289 102.474 26.8361C102.449 26.8433 102.423 26.8455 102.397 26.8426C102.371 26.8398 102.347 26.8319 102.324 26.8195C102.302 26.807 102.282 26.7903 102.266 26.7702C102.199 26.6913 102.137 26.6091 102.078 26.524C100.533 24.395 99.5412 22.0455 99.2801 19.4322C98.9 15.6199 99.8577 12.1553 102.192 9.07527C102.228 9.03908 102.268 9.0077 102.312 8.98193Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M150.909 30.8429L148.975 28.6528C149.036 28.3664 149.222 28.2087 149.352 28.022C150.843 25.9478 151.589 23.4425 151.473 20.9028C151.256 15.689 147.757 11.6901 143.391 10.348C143.316 10.3255 143.228 10.3239 143.162 10.2965C143.099 10.2791 143.044 10.2415 143.004 10.1897C142.965 10.1379 142.944 10.0747 142.945 10.0101C142.945 9.13625 142.945 8.26245 142.945 7.38865C142.945 7.27278 143.055 7.22772 143.169 7.23577C143.298 7.25322 143.425 7.27957 143.551 7.31462C147.889 8.50544 151.06 11.0872 153.062 15.0598C153.734 16.3406 154.183 17.7232 154.392 19.1504C154.901 22.9401 154.206 26.4611 151.919 29.6103C151.63 30.0573 151.291 30.4708 150.909 30.8429Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M101.153 27.8229C100.36 28.3861 99.6434 28.8995 98.9239 29.4048C98.6759 29.5786 98.6286 29.5657 98.4116 29.3227C96.6447 27.3096 95.3639 25.0245 94.7293 22.4369C93.3343 16.7499 94.3899 11.5409 98.0282 6.87898C98.1722 6.64604 98.368 6.44848 98.6009 6.30127L101.115 8.03761C100.911 8.29187 100.743 8.5075 100.572 8.71992C99.0983 10.4966 98.0839 12.5994 97.6154 14.8478C96.8829 18.4106 97.3821 21.7932 99.1833 24.9762C99.6452 25.7812 100.166 26.5519 100.741 27.2822C100.861 27.4415 100.985 27.604 101.153 27.8229Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M125.643 35.6418C125.279 35.6628 124.991 35.6917 124.708 35.6933C120.406 35.7046 116.104 35.7641 111.8 35.6933C107.61 35.6193 103.995 34.1083 100.756 31.5818C100.656 31.503 100.568 31.4096 100.43 31.2873C100.665 31.0556 100.877 30.8416 101.094 30.6324C101.311 30.4232 101.542 30.2027 101.771 29.9887C101.999 29.7747 102.224 29.5687 102.487 29.3257C102.722 29.4866 102.955 29.6475 103.176 29.8084C105.156 31.3339 107.495 32.3408 109.976 32.7356C111.158 32.9357 112.356 33.0343 113.555 33.0301C117.259 33.0301 120.963 33.0301 124.668 33.0301C124.875 33.0301 125.084 33.0301 125.293 33.0301C125.576 33.0397 125.632 33.0832 125.635 33.3326C125.647 34.0745 125.643 34.8195 125.643 35.6418Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M147.235 30.354C147.874 31.0862 148.504 31.8297 149.134 32.6069C147.859 33.696 146.372 34.5173 144.764 35.0207C143.398 35.4563 141.97 35.6779 140.534 35.6773C136.571 35.6837 132.608 35.688 128.643 35.6902C128.539 35.6902 128.434 35.6902 128.33 35.6902C128.18 35.6821 128.082 35.6097 128.082 35.4552C128.082 34.7359 128.082 34.015 128.082 33.2956C128.082 33.1009 128.201 33.0301 128.382 33.0301H129.012C132.324 33.0301 135.636 33.0301 138.948 33.0301C141.899 33.0301 144.605 32.2593 146.991 30.5053C147.05 30.457 147.122 30.4152 147.235 30.354Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M38.9766 16.8976C39.3323 16.9925 39.6994 16.9233 40.0616 16.9474C40.21 16.9571 40.3096 17.0215 40.3112 17.176C40.3112 17.4029 40.3683 17.6362 40.2443 17.876H36.3743C36.2617 17.5718 36.3352 17.2966 36.3254 17.0118C36.7855 16.8638 37.2374 17.0118 37.6567 16.9024C37.7357 16.7677 37.764 16.6099 37.7366 16.4566C37.7366 13.6566 37.7366 10.856 37.7366 8.05493C37.7366 7.37423 37.7187 7.36457 37.04 7.35009C36.9884 7.35413 36.9366 7.35413 36.885 7.35009C36.6908 7.31147 36.4298 7.45791 36.3107 7.23905C36.1916 7.0202 36.234 6.73859 36.2895 6.48755C36.2978 6.45125 36.3185 6.4189 36.3483 6.39602C36.378 6.37313 36.4149 6.36112 36.4526 6.36203C36.9747 6.36203 37.4968 6.33468 38.0156 6.37491C38.5345 6.41514 38.7009 6.60663 38.8314 7.22618C38.8461 7.29699 38.8314 7.3871 38.9195 7.4209C39.0468 7.48044 39.1022 7.38227 39.1707 7.31308L39.223 7.25515C40.2769 6.09651 41.5838 5.95651 43.0097 6.37169C43.4591 6.51418 43.8633 6.76923 44.1828 7.11193C44.4234 7.34871 44.6264 7.61997 44.7848 7.91653C45.6006 9.52575 45.6708 11.1865 44.9088 12.8198C44.16 14.429 42.4338 15.1725 40.6571 14.6849C40.2058 14.5538 39.7936 14.3163 39.4563 13.9929C39.3078 13.8578 39.1528 13.7306 38.9848 13.5842C38.9505 13.5842 38.9179 13.6132 38.913 13.6727C38.8526 14.5964 38.882 16.381 38.9766 16.8976ZM38.8754 10.4864C38.8934 11.4198 39.0941 12.2341 39.6472 12.9292C40.2704 13.7129 41.0878 13.9961 42.0732 13.7757C42.4709 13.6918 42.8415 13.5125 43.1523 13.2537C43.463 12.995 43.7043 12.6646 43.8549 12.292C44.1188 11.7162 44.2505 11.09 44.2403 10.4582C44.2302 9.82643 44.0785 9.20466 43.7961 8.63746C43.6687 8.35575 43.486 8.10167 43.2587 7.88985C43.0313 7.67802 42.7637 7.51263 42.4713 7.40319C42.1542 7.28277 41.8159 7.22596 41.4763 7.23607C41.1366 7.24618 40.8024 7.32301 40.4933 7.46207C40.1841 7.60114 39.9061 7.79963 39.6757 8.04594C39.4452 8.29225 39.2669 8.58143 39.1512 8.89654C38.9703 9.40992 38.8771 9.94938 38.8754 10.4929V10.4864Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M28.5745 13.568C28.4114 13.6356 28.4114 13.7193 28.4114 13.7885C28.4114 14.7138 28.4114 15.6391 28.4114 16.5628C28.4114 16.9104 28.4571 16.9409 28.829 16.949C29.139 16.949 29.4474 16.949 29.7297 16.949C29.777 17.0504 29.8178 17.0954 29.8194 17.1421C29.8504 18.0014 29.8961 17.9065 29.108 17.9081C28.041 17.9081 26.974 17.9081 25.889 17.9081C25.8028 17.6106 25.7972 17.296 25.8727 16.9957C26.3214 16.8782 26.7733 17.0294 27.2497 16.8782V16.1927C27.2497 13.546 27.2497 10.8994 27.2497 8.2528C27.2497 7.38704 27.297 7.34038 26.3573 7.35325C25.796 7.35325 25.7536 7.41279 25.765 6.75623C25.7606 6.70268 25.7606 6.64886 25.765 6.59531C25.7862 6.45853 25.8434 6.35393 26.0065 6.35232C26.4486 6.35232 26.8924 6.33784 27.3346 6.35232C28.0329 6.37968 28.1879 6.52933 28.3477 7.2567C28.3641 7.33233 28.3787 7.42566 28.4668 7.42727C28.5398 7.42154 28.6077 7.38808 28.6561 7.33394C29.6203 6.18818 30.8619 5.97254 32.2585 6.29117C32.9208 6.45607 33.509 6.833 33.9308 7.3629C35.1936 8.83855 35.2051 11.7947 34.1837 13.2526C33.745 13.8979 33.104 14.3836 32.3588 14.6353C31.6135 14.887 30.8052 14.8908 30.0576 14.6462C29.4691 14.4337 28.9545 14.0596 28.5745 13.568ZM28.3902 10.3786C28.3902 11.2765 28.5533 12.0956 29.0721 12.8181C29.3682 13.2627 29.8104 13.5932 30.3244 13.7541C30.8384 13.915 31.3929 13.8965 31.8947 13.7016C32.4581 13.4887 32.93 13.0909 33.2309 12.5751C33.9357 11.4246 33.9015 9.49511 33.1526 8.37832C32.8758 7.94019 32.4634 7.60163 31.9763 7.41279C31.3475 7.17598 30.6494 7.1936 30.0338 7.4618C29.4181 7.73 28.9347 8.2271 28.6887 8.84499C28.4685 9.33419 28.4293 9.87167 28.3902 10.3786Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M66.4907 17.8522C66.4409 17.5722 66.4409 17.2857 66.4907 17.0057C66.8513 16.8995 67.2168 16.9751 67.5757 16.9494C67.7535 16.9365 67.8694 16.8657 67.8759 16.6758C67.8824 16.4859 67.8759 16.317 67.8759 16.1367C67.8759 13.5153 67.8759 10.8923 67.8759 8.26931C67.8759 7.36493 67.8335 7.33918 66.9802 7.35527C66.8497 7.35527 66.7208 7.35527 66.5902 7.34562C66.5582 7.34529 66.5265 7.33843 66.4972 7.32548C66.4679 7.31254 66.4417 7.29377 66.4201 7.27036C66.3985 7.24695 66.382 7.2194 66.3717 7.18943C66.3614 7.15947 66.3575 7.12772 66.3602 7.09619C66.3602 6.93527 66.3602 6.78722 66.3602 6.63274C66.3602 6.43963 66.4793 6.36239 66.6604 6.36239C67.1025 6.36239 67.5463 6.34469 67.9885 6.36239C68.6036 6.38974 68.9168 6.61182 68.9755 7.22654C68.9853 7.32631 68.9984 7.42769 69.0098 7.52585C69.2268 7.52585 69.2692 7.35527 69.3573 7.24424C70.4994 5.80882 73.273 5.75411 74.5309 7.35688C74.7933 7.67715 75.004 8.03538 75.1558 8.41896C75.6559 9.67598 75.6883 11.0671 75.2471 12.3454C74.8605 13.4719 74.1051 14.3119 72.9141 14.6563C71.5615 15.0489 70.333 14.8429 69.3573 13.7487C69.2986 13.6689 69.2499 13.5825 69.2121 13.4912C69.0946 13.6006 69.0278 13.6328 69.0278 13.6666C69.0278 14.7416 69.0278 15.8165 69.0278 16.9188L70.4031 16.9784V17.8361C69.7652 17.9294 67.22 17.9391 66.4907 17.8522ZM74.34 10.63C74.3815 9.89383 74.2118 9.16101 73.8506 8.51552C73.5816 8.01163 73.1406 7.61777 72.6057 7.40355C71.3608 6.93205 69.7407 7.43412 69.2023 9.1061C68.9903 9.79833 68.9396 10.5288 69.0539 11.2431C69.1404 11.9113 69.424 12.5398 69.8696 13.0503C70.1346 13.3723 70.4862 13.6141 70.8842 13.7479C71.2822 13.8817 71.7103 13.902 72.1195 13.8066C73.0315 13.6264 73.6401 13.0599 74.0202 12.2425C74.2509 11.7363 74.3603 11.1846 74.34 10.63Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M89.582 31.648C89.1366 31.648 88.67 31.6593 88.2034 31.648C87.5834 31.6303 87.3876 31.4501 87.2702 30.8434C87.2506 30.7453 87.2392 30.6455 87.2261 30.5618C86.9814 30.4636 86.9422 30.6696 86.8541 30.7662C85.8165 31.8926 84.5422 32.0616 83.1359 31.6641C82.4294 31.4646 81.9106 31.0027 81.5043 30.417C81.2213 30.0152 81.0166 29.565 80.9007 29.0894C80.6266 28.0381 80.6379 26.9343 80.9333 25.8886C81.2498 24.8008 81.9041 23.9463 82.9792 23.4941C84.3024 22.9374 85.8621 23.0983 86.8394 24.2472C86.8947 24.3184 86.9459 24.3925 86.9928 24.4693C87.187 24.4017 87.2016 24.3084 87.2016 24.2006C87.2016 23.301 87.2016 22.3999 87.2016 21.5003C87.2016 21.053 87.1918 21.0514 86.7122 21.0433C86.4789 21.0433 86.2439 21.0353 86.009 21.0433C85.8034 21.0433 85.7316 20.9403 85.7382 20.7601C85.7447 20.5799 85.6974 20.3497 85.8083 20.1003C86.049 20.0641 86.2931 20.0549 86.536 20.073C86.7709 20.073 87.0059 20.073 87.2408 20.073C87.5018 20.073 87.7612 20.073 88.0223 20.073C88.2833 20.073 88.3486 20.1277 88.3649 20.3723C88.3747 20.5782 88.3649 20.7842 88.3649 20.9902C88.3649 23.8954 88.3649 26.8005 88.3649 29.7057C88.3649 30.5538 88.2703 30.7501 89.3438 30.7018C89.6326 30.6873 89.6701 30.7356 89.6701 31.0027C89.6571 31.1974 89.7044 31.4066 89.582 31.648ZM87.218 27.8744C87.2457 26.7898 87.0793 25.9997 86.5947 25.2916C86.3147 24.8548 85.8879 24.529 85.389 24.3712C84.7756 24.1721 84.1084 24.211 83.5231 24.4801C82.9378 24.7492 82.4784 25.2281 82.2385 25.8195C81.9815 26.3971 81.8555 27.0231 81.8693 27.6538C81.8831 28.2845 82.0364 28.9046 82.3185 29.4708C82.4494 29.7656 82.6411 30.0304 82.8812 30.2484C83.1213 30.4664 83.4047 30.6328 83.7134 30.7372C84.9876 31.1781 86.3712 30.5554 86.9275 29.2889C87.1116 28.839 87.21 28.3595 87.218 27.8744Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M4.82835 13.6903V14.5303C4.77687 14.5764 4.71557 14.6106 4.64895 14.6304C4.58233 14.6502 4.51207 14.655 4.44331 14.6445C3.40076 14.6445 2.35822 14.6445 1.31404 14.6445C0.871894 14.6445 0.849053 14.6107 0.850685 14.1473C0.850685 14.07 0.850685 13.9864 0.850685 13.9156C0.84914 13.8831 0.854675 13.8507 0.866915 13.8206C0.879155 13.7904 0.897816 13.7632 0.921636 13.7408C0.945456 13.7184 0.973879 13.7012 1.00499 13.6906C1.03609 13.6799 1.06915 13.676 1.10194 13.679C1.38909 13.679 1.67624 13.679 1.96176 13.6661C2.20649 13.6565 2.27501 13.5792 2.28806 13.3346C2.28806 13.2059 2.28806 13.0772 2.28806 12.9484C2.28806 10.1967 2.28806 7.44545 2.28806 4.69476C2.31642 4.48471 2.2952 4.27103 2.22606 4.07039C1.85408 3.96257 1.46251 4.04303 1.08399 4.01889C0.805002 3.99958 0.775634 3.97866 0.775634 3.68579C0.769554 3.52996 0.776101 3.37391 0.795213 3.21912C0.805002 3.16279 0.883315 3.10003 0.945313 3.07429C1.02089 3.05499 1.09942 3.04953 1.17699 3.05819C1.77576 3.05819 2.37616 3.05819 2.97167 3.05819C3.40892 3.05819 3.42197 3.07268 3.42524 3.47981C3.42524 4.09614 3.42524 4.71407 3.42524 5.3304V7.49479C3.42179 7.61544 3.42999 7.73614 3.44971 7.85526C3.68302 7.83595 3.72381 7.6702 3.8217 7.57043C3.91959 7.47066 3.99627 7.37893 4.08601 7.28721C5.13508 6.2203 6.39952 5.95478 7.82221 6.3088C8.14106 6.38271 8.43671 6.53253 8.6833 6.74516C8.92988 6.9578 9.11991 7.22678 9.23675 7.52859C9.46444 8.07824 9.57549 8.66808 9.56305 9.26171C9.56305 10.496 9.56305 11.7302 9.56305 12.9629C9.56305 13.6983 9.49779 13.671 10.2826 13.671C10.4653 13.671 10.648 13.671 10.8291 13.6822C10.8676 13.6855 10.9037 13.7022 10.9309 13.7294C10.9581 13.7565 10.9746 13.7922 10.9776 13.8303C10.9939 14.0845 11.0396 14.3404 10.9384 14.5769C10.9042 14.5995 10.8846 14.622 10.8634 14.6236C10.0839 14.6649 9.30259 14.6595 8.52377 14.6075C8.30841 13.8818 8.45035 13.1399 8.42914 12.4061C8.40303 11.5066 8.41609 10.607 8.42914 9.70585C8.42987 9.26796 8.37506 8.83169 8.26599 8.40722C8.07347 7.63802 7.62806 7.3033 6.82208 7.24215C4.99966 7.10697 3.61613 8.50216 3.47582 10.121C3.38119 11.2185 3.44318 12.3305 3.43829 13.436C3.43829 13.5969 3.54108 13.6597 3.68791 13.6629C4.05011 13.679 4.41394 13.679 4.82835 13.6903Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M76.8257 29.9788C76.4897 30.3554 76.2612 30.6225 76.01 30.8848C75.7348 31.1781 75.4019 31.413 75.0317 31.5751C74.6614 31.7372 74.2615 31.8232 73.8564 31.8278C73.4919 31.8442 73.1267 31.8292 72.7649 31.7827C72.3753 31.7408 72.006 31.5897 71.7006 31.3473C71.3953 31.1049 71.1668 30.7814 71.042 30.4149C70.8501 29.8782 70.7573 29.3119 70.7679 28.7429C70.7679 27.5618 70.7679 26.3806 70.7679 25.2027C70.7679 25.024 70.7679 24.8438 70.7679 24.6636C70.7679 24.4834 70.7026 24.3723 70.497 24.3755C70.2376 24.3755 69.9766 24.3755 69.7155 24.3755C69.3093 24.3755 69.2979 24.3562 69.293 23.9282C69.293 23.8268 69.293 23.7222 69.293 23.6208C69.2928 23.589 69.2996 23.5575 69.3131 23.5285C69.3265 23.4996 69.3462 23.4738 69.3707 23.4532C69.3953 23.4325 69.4241 23.4173 69.4552 23.4088C69.4863 23.4002 69.5189 23.3984 69.5508 23.4036C70.2539 23.4036 70.9571 23.4036 71.6603 23.4036C71.6928 23.4006 71.7255 23.4045 71.7563 23.4148C71.7871 23.4252 71.8154 23.4418 71.8393 23.4637C71.8631 23.4856 71.882 23.5122 71.8948 23.5417C71.9075 23.5713 71.9138 23.6032 71.9132 23.6353C71.9214 23.8139 71.9132 23.9942 71.9132 24.1744C71.9132 25.4328 71.9132 26.6912 71.9132 27.9512C71.9132 28.3616 71.9475 28.7719 71.9654 29.1823C71.9853 29.4632 72.0636 29.7371 72.1955 29.9869C72.2796 30.1762 72.4101 30.342 72.5753 30.4692C72.7405 30.5965 72.9351 30.6812 73.1418 30.7158C74.1925 30.9138 75.0996 30.6692 75.8403 29.8839C76.4126 29.3064 76.7549 28.5449 76.8045 27.7388C76.8535 26.6397 76.816 25.5358 76.816 24.4319C76.4064 24.3224 76.0132 24.3916 75.6266 24.3691C75.3721 24.353 75.3247 24.3031 75.3182 24.0312C75.3108 23.8775 75.3174 23.7235 75.3378 23.5709C75.3476 23.513 75.4292 23.4647 75.483 23.41C75.4993 23.3955 75.5336 23.3987 75.5597 23.3987H77.8601C78.0233 23.5951 77.9646 23.7817 77.9662 23.9555C77.9662 25.9333 77.9662 27.911 77.9662 29.8903C77.9662 30.6434 77.9874 30.6579 78.7526 30.6837C78.8819 30.679 79.0114 30.6866 79.1393 30.7062C79.1742 30.7174 79.2059 30.7367 79.2317 30.7624C79.2576 30.7882 79.2768 30.8197 79.2877 30.8542C79.3043 31.0587 79.307 31.2641 79.2959 31.4689C79.2961 31.5087 79.2814 31.5472 79.2546 31.5769C79.2278 31.6066 79.1908 31.6255 79.1507 31.6299C78.6041 31.6299 78.0559 31.654 77.5191 31.6202C77.1602 31.5961 76.9302 31.3289 76.8812 30.946C76.8372 30.6708 76.8437 30.3924 76.8257 29.9788Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M51.4824 10.5011H48.978C48.7953 10.5011 48.6125 10.5011 48.4314 10.5172C48.3808 10.5224 48.3341 10.5465 48.3008 10.5844C48.2675 10.6224 48.25 10.6714 48.252 10.7215C48.1883 12.0089 49.2032 13.3574 50.5165 13.7243C51.5036 13.9979 52.4254 13.8289 53.3065 13.3526C53.4876 13.2544 53.6523 13.1257 53.8253 13.0114C53.9493 12.9294 54.0619 12.9149 54.1516 13.0597C54.2413 13.2045 54.3441 13.3655 54.4387 13.5183C54.4584 13.5441 54.4723 13.5737 54.4795 13.6052C54.4867 13.6366 54.4871 13.6693 54.4806 13.7009C54.4742 13.7325 54.461 13.7624 54.4419 13.7886C54.4229 13.8149 54.3985 13.8368 54.3702 13.8531C53.8173 14.2872 53.1692 14.5881 52.4776 14.7317C50.8069 15.0246 49.3141 14.7108 48.1231 13.4363C47.5307 12.8104 47.1672 12.0073 47.0903 11.1544C47.004 10.4373 47.0594 9.71047 47.2535 9.01415C47.8832 6.86424 50.2114 5.65411 52.4858 6.37182C52.9606 6.52471 53.3838 6.80299 53.7094 7.17643C54.4991 8.05667 54.765 9.10749 54.6981 10.25C54.6867 10.4431 54.5774 10.5059 54.3898 10.5043C53.4239 10.5043 52.4597 10.5043 51.4955 10.5043L51.4824 10.5011ZM53.4761 9.69646C53.5095 9.23231 53.4112 8.76817 53.1922 8.35598C53.0693 8.0983 52.8925 7.86916 52.6735 7.68363C52.4545 7.49809 52.1981 7.36034 51.9213 7.27942C51.5462 7.16629 51.1512 7.13207 50.7618 7.17898C50.3725 7.22588 49.9975 7.35286 49.661 7.5517C49.3245 7.75055 49.0341 8.01683 48.8086 8.33333C48.583 8.64984 48.4273 9.00951 48.3515 9.3891C48.3009 9.616 48.3727 9.69485 48.6452 9.69485C49.8166 9.69485 50.9897 9.69485 52.1627 9.69485L53.4761 9.69646Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M86.2135 10.5011H83.6324C83.4761 10.4962 83.3196 10.5026 83.1642 10.5204C83.1128 10.5268 83.0659 10.5524 83.0332 10.592C83.0004 10.6315 82.9842 10.6819 82.988 10.7328C82.9488 12.054 83.9506 13.3655 85.2721 13.7243C86.2885 14.0011 87.2299 13.8193 88.1256 13.3027C88.3035 13.1981 88.4666 13.0661 88.6477 12.968C88.6829 12.9569 88.7204 12.9548 88.7566 12.9618C88.7928 12.9688 88.8267 12.9848 88.8549 13.0082C89.3542 13.5521 89.3297 13.7452 88.7146 14.1202C88.0894 14.5245 87.3732 14.7713 86.6288 14.8389C85.8843 14.9065 85.1345 14.7929 84.4449 14.508C82.8884 13.8981 81.9976 12.7234 81.8247 11.0627C81.7345 10.3451 81.799 9.6169 82.0139 8.92564C82.1808 8.41607 82.4496 7.94467 82.8044 7.53933C83.1591 7.13399 83.5927 6.80293 84.0795 6.56573C84.5662 6.32854 85.0963 6.19002 85.6382 6.15837C86.1802 6.12672 86.7231 6.20258 87.2348 6.38147C88.4878 6.80469 89.0948 7.80723 89.3656 9.03185C89.408 9.23374 89.4326 9.43888 89.439 9.64496C89.4798 10.6942 89.4651 10.4866 88.6428 10.4978C87.8205 10.5091 87.0211 10.5011 86.2135 10.5011ZM88.2252 9.61116C88.2953 9.24909 88.1713 8.9015 88.0392 8.57322C87.911 8.21996 87.689 7.90719 87.3962 7.66767C87.1034 7.42816 86.7507 7.27071 86.375 7.21182C85.6626 7.07842 84.9255 7.22155 84.3175 7.61134C83.7095 8.00113 83.2776 8.60747 83.112 9.3038C83.0369 9.61599 83.0973 9.69162 83.4644 9.69323H87.8418C87.9755 9.71393 88.1122 9.68467 88.2252 9.61116Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M19.8333 10.501H19.0175C17.2718 10.501 15.5277 10.501 13.7836 10.501C13.4785 10.501 13.4214 10.5767 13.436 10.8583C13.547 12.8666 15.3009 14.0896 17.1315 13.8192C17.6981 13.728 18.2393 13.5214 18.7206 13.2126C18.8707 13.1208 18.9816 12.9631 19.1758 12.9454C19.8985 13.7951 19.7843 13.7339 18.9832 14.2071C18.3922 14.5653 17.725 14.7837 17.0341 14.8451C16.3431 14.9065 15.6472 14.8093 15.0007 14.5611C13.3365 13.9625 12.418 12.7137 12.2271 10.9806C12.1503 10.262 12.2327 9.53563 12.4685 8.85159C13.1554 6.81755 15.4216 5.66052 17.6552 6.3734C18.4612 6.63088 19.0224 7.19893 19.4058 7.93434C19.8148 8.72546 19.9642 9.62245 19.8333 10.501ZM13.5225 9.66907H18.59C18.6879 8.54262 18.1136 7.61893 17.1363 7.28583C15.4771 6.71938 13.6955 7.88606 13.5225 9.66907Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M63.7281 31.8394C61.3314 31.9311 59.3002 29.889 59.2773 27.5379C59.2808 26.3856 59.7456 25.2813 60.5707 24.4654C61.3957 23.6495 62.5142 23.1881 63.6825 23.1818C66.1298 23.1625 68.1545 25.0501 68.1692 27.4543C68.1871 30.1062 65.947 31.9311 63.7281 31.8394ZM66.97 27.3577C66.9678 27.2203 66.9563 27.0832 66.9357 26.9473C66.9051 26.7439 66.856 26.5435 66.7889 26.3487C65.8638 23.8577 62.8944 23.6131 61.4473 25.1161C60.5352 26.0607 60.3052 27.1775 60.5956 28.3973C60.997 30.0853 62.7607 31.3952 64.8376 30.6839C66.1216 30.2366 66.9733 28.9315 66.97 27.3577Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M60.8149 14.8233C58.4884 14.9568 56.3217 12.9646 56.3087 10.4977C56.2956 8.13378 58.3366 6.16731 60.7366 6.15283C62.9865 6.15283 65.1956 7.89239 65.1988 10.4527C65.1972 13.2318 62.8152 14.9134 60.8149 14.8233ZM64.0046 10.3899C64.0046 10.2837 63.9948 10.1018 63.967 9.92483C63.9414 9.74724 63.8999 9.57223 63.843 9.40183C63.6796 8.87777 63.3815 8.40431 62.9777 8.02742C62.5739 7.65053 62.0782 7.38303 61.5387 7.25088C60.9992 7.11874 60.4342 7.12644 59.8985 7.27324C59.3629 7.42005 58.8749 7.70097 58.4818 8.08872C57.5878 9.00597 57.3398 10.097 57.6122 11.2927C57.8945 12.5398 58.6727 13.4007 59.9453 13.7387C61.2179 14.0766 62.311 13.7033 63.1806 12.7313C63.7517 12.0892 63.998 11.3168 63.9997 10.3899H64.0046Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M52.6398 29.815C52.6708 29.84 52.6997 29.8674 52.7262 29.8971C53.1749 30.6598 53.1684 30.7226 52.4228 31.1394C51.2677 31.7831 50.0261 32.0309 48.729 31.7316C46.7532 31.2778 45.1396 29.6154 45.4431 26.9924C45.6519 25.1869 46.6912 23.98 48.4337 23.3958C49.4289 23.0627 50.4372 23.1335 51.4324 23.4361C51.7048 23.5253 51.9626 23.6533 52.1976 23.8158C52.6871 24.1377 52.9726 24.5673 52.9139 25.174C52.8975 25.3542 52.9139 25.5345 52.8943 25.7131C52.8917 25.7517 52.875 25.788 52.8475 25.8155C52.8199 25.843 52.7833 25.8598 52.7442 25.8628C52.5354 25.8628 52.3281 25.8756 52.1193 25.874C52.0798 25.8785 52.0397 25.8737 52.0025 25.8598C51.9653 25.846 51.932 25.8236 51.9053 25.7944C51.8786 25.7653 51.8594 25.7303 51.8493 25.6924C51.8391 25.6544 51.8383 25.6146 51.8468 25.5763C51.9268 24.8264 51.4667 24.5207 50.8337 24.3388C48.4598 23.6597 46.7336 25.2947 46.6308 27.126C46.5821 27.6392 46.6297 28.1569 46.7712 28.6531C46.965 29.271 47.3475 29.8148 47.8664 30.2102C48.3853 30.6057 49.0153 30.8335 49.6704 30.8626C50.5908 30.92 51.5001 30.6385 52.2221 30.0725C52.3332 29.9487 52.4783 29.8592 52.6398 29.815Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M57.939 30.7112C57.9537 30.9092 57.9635 31.0105 57.9651 31.1119C57.9651 31.2648 57.9651 31.4177 57.9651 31.5947C57.5112 31.7363 57.024 31.7363 56.5701 31.5947C56.3301 31.5283 56.1112 31.4028 55.9339 31.23C55.7567 31.0571 55.6269 30.8426 55.557 30.6066C55.4328 30.2132 55.3776 29.8018 55.3938 29.3901C55.3938 26.8969 55.3938 24.4042 55.3938 21.912V21.1718C55.1833 20.9803 54.9664 21.0543 54.7706 21.0415C54.5886 21.0302 54.406 21.0302 54.224 21.0415C54.0266 21.0511 53.9336 20.9658 53.9336 20.7743V20.1306C54.244 20.0703 54.5618 20.0557 54.8766 20.0872C55.4118 20.1097 55.9551 19.9923 56.4837 20.1677C56.5946 20.6746 56.5294 21.1895 56.531 21.6996C56.5391 24.1408 56.531 26.582 56.531 29.0232C56.5263 29.3308 56.5486 29.6382 56.5979 29.942C56.6974 30.494 56.9242 30.679 57.4854 30.7257C57.6306 30.7209 57.7595 30.7112 57.939 30.7112Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M80.376 13.7278C80.5603 14.8334 80.376 14.6773 79.5602 14.6596C78.6433 14.6387 78.0641 14.1076 77.9287 13.2113C77.8857 12.8805 77.8671 12.547 77.8732 12.2136C77.8732 9.8019 77.8732 7.38808 77.8732 4.97211C77.8732 4.76613 77.8732 4.56016 77.8732 4.35579C77.8634 4.08061 77.8194 4.03394 77.5665 4.02268C77.3837 4.02268 77.2026 4.02268 77.0199 4.02268C76.2955 4.02268 76.3918 4.02268 76.3901 3.32106C76.3901 3.16979 76.4652 3.07485 76.6186 3.07324C77.3462 3.07324 78.0744 3.07324 78.8032 3.07324C78.9663 3.07324 79.0251 3.17784 79.0267 3.32428C79.0267 3.53026 79.0267 3.73463 79.0267 3.94061C79.0267 6.63658 79.0267 9.33147 79.0267 12.0253C79.0174 12.3078 79.0277 12.5906 79.0577 12.8717C79.1295 13.3947 79.3922 13.6345 79.9208 13.7005C80.066 13.7182 80.2291 13.7182 80.376 13.7278Z\"\n        fill=\"#363636\"\n      />\n      <path\n        d=\"M24.7183 13.7744V14.6015C24.3379 14.6994 23.9394 14.7077 23.5551 14.6256C23.2831 14.5815 23.0284 14.4656 22.8179 14.2902C22.6073 14.1148 22.4488 13.8866 22.3591 13.6295C22.2288 13.238 22.1735 12.826 22.196 12.4146V6.55061C22.196 5.85703 22.196 5.16185 22.196 4.46828C22.196 4.02736 22.1862 4.02575 21.7702 4.01609C21.4846 4.01609 21.1959 4.02414 20.912 4.00161C20.6281 3.97908 20.6966 3.75218 20.7048 3.58643C20.7129 3.42068 20.602 3.15355 20.9038 3.07953C20.9799 3.06368 21.0579 3.05826 21.1355 3.06344C21.8354 3.08758 22.537 3.01034 23.2353 3.1085C23.4392 3.78437 23.3169 4.47633 23.3234 5.15864C23.3413 7.47269 23.3234 9.78834 23.3234 12.1024C23.3168 12.3607 23.3327 12.6191 23.3707 12.8748C23.4719 13.4429 23.7247 13.6505 24.3186 13.7084C24.4442 13.718 24.5764 13.6698 24.7183 13.7744Z\"\n        fill=\"#363636\"\n      />\n    </svg>\n  );\n};\n\nexport default helppeopleLogo;\n","import { Environment } from \"../interfaces/Environment\";\n\nfunction getBaseEnv(baseApi: string, awsBaseApi: string): Environment {\n  return {\n    intervals: {\n      logout: 36000,\n      timeout: 15000,\n    },\n    api: {\n      url: `${baseApi}/api`,\n      awsApi: `${awsBaseApi}`,\n      //   awsApi: `https://1r1nz0pxl4.execute-api.us-east-1.amazonaws.com/default/restServicesMailService`,\n    },\n    isProduction: true,\n    isDevelopment: false,\n  };\n}\n\nexport default getBaseEnv;\n","import environment from \"./base\";\nimport { Environment } from \"../interfaces/Environment\";\n\ndeclare global {\n  interface Window {\n    API_URL: string;\n  }\n}\n\n// const baseApi = \"https://monquick.helppeoplecloud.com/helppeopleapi\";\nconst baseApi = process.env.REACT_APP_API_URL\n  ? process.env.REACT_APP_API_URL\n  : \"https://monquick.helppeoplecloud.com/helppeopleapi\";\n// const awsBaseApi =\n//   \"https://1r1nz0pxl4.execute-api.us-east-1.amazonaws.com/default/restServicesMailService\";\nconst awsBaseApi = process.env.REACT_APP_AWS_API\n  ? process.env.REACT_APP_AWS_API\n  : \"https://1r1nz0pxl4.execute-api.us-east-1.amazonaws.com/default/restServicesMailService\";\nconst env = environment(baseApi, awsBaseApi);\n\nconst Config: Environment = {\n  ...env,\n  intervals: {\n    ...env.intervals,\n    logout: 300, // 5 min in seconds\n  },\n  isProduction: false,\n  isDevelopment: true,\n};\n\nexport default Config;\n","import axios from \"axios\";\nimport environment from \"environment\";\n\nconst API = () => {\n  return axios.create({\n    baseURL: environment.api.url,\n    timeout: environment.intervals.timeout,\n    headers: {\n      common: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    },\n  });\n};\n\nexport default API;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport API from \"../../services/API\";\n// import { TokenService } from \"../../services/LocalStorage\";\nimport { RootState } from \"../store\";\n\ninterface User {\n  username: string;\n  name: string;\n  lastName: string;\n  companyName: string;\n  CompanyID: string;\n  email: string;\n  userImage: string;\n  userImageExt: string;\n  userImageMime: string;\n  isVIP: string;\n}\n\nconst initialState: User = {\n  username: \"\",\n  name: \"\",\n  lastName: \"\",\n  companyName: \"\",\n  CompanyID: \"\",\n  email: \"\",\n  userImage: \"\",\n  userImageExt: \"\",\n  userImageMime: \"\",\n  isVIP: \"\",\n};\n\nexport const UserStorage = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setDetails: (state, action: PayloadAction<User>) => {\n      state.name = action.payload.name;\n      state.lastName = action.payload.lastName;\n      state.username = action.payload.username;\n      state.companyName = action.payload.companyName;\n      state.email = action.payload.email;\n      state.userImage = action.payload.userImage;\n      state.userImageExt = action.payload.userImageExt;\n      state.userImageMime = action.payload.userImageMime;\n      state.isVIP = action.payload.isVIP;\n      state.CompanyID = action.payload.CompanyID;\n    },\n  },\n});\n\nexport const getUserDetails = (token: any) => async (dispatch: any) => {\n  try {\n    await API()\n      .get(`security/GetUserPermisions?token=${token}`)\n      .then((response) => {\n        const data: User = {\n          username: response.data.Values.UserInfo.Username,\n          name: response.data.Values.UserInfo.Name,\n          lastName: response.data.Values.UserInfo.LastName,\n          companyName: response.data.Values.UserInfo.CompanyName,\n          email: response.data.Values.UserInfo.Email,\n          userImage: response.data.Values.UserInfo.UserImage,\n          userImageExt: response.data.Values.UserInfo.UserImageExt,\n          userImageMime: response.data.Values.UserInfo.UserImageMime,\n          isVIP: response.data.Values.UserInfo.IsVIP,\n          CompanyID: response.data.Values.UserInfo.CompanyID,\n        };\n        console.log(response);\n        return dispatch(setDetails(data));\n      });\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const { setDetails } = UserStorage.actions;\nexport const user = (state: RootState) => state.user;\nexport default UserStorage.reducer;\n","import {\n  MailService,\n  NavbarContainer,\n  NavbarStyle,\n  NavLogo,\n  NavLogoContainer,\n  ProfileGrid,\n  ProfileSquare,\n  ProfileText,\n} from \"./NavbarElements\";\n\n// svgs\nimport Logo from \"../Svg/helppeopleLogo\";\nimport { useSelector } from \"react-redux\";\nimport { user } from \"../../store/modules/UserStore\";\n\nexport const Navbar = () => {\n  const userDetails = useSelector(user);\n\n  return (\n    <NavbarContainer>\n      <NavbarStyle>\n        <NavLogoContainer>\n          <NavLogo to=\"/\">\n            <Logo width={\"100%\"} />\n          </NavLogo>\n        </NavLogoContainer>\n        <MailService>\n          <h4>Mail Service</h4>\n        </MailService>\n        <ProfileSquare\n        // onClick={(e: any) => handleProfileMenu(e)}\n        >\n          <ProfileGrid>\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <ProfileText\n                title={`true`}\n              >{`${userDetails.name} ${userDetails.lastName}`}</ProfileText>\n              <ProfileText color=\"#3948FF\">{`${userDetails.companyName}`}</ProfileText>\n            </div>\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {userDetails.userImage === \"\" ? (\n                <img\n                  style={{\n                    borderRadius: \"50%\",\n                    borderWidth: \"2px\",\n                    borderColor: `${userDetails.isVIP ? `yellow` : `white`}`,\n                    backgroundColor: \"white\",\n                  }}\n                  //   className={`rounded-full border-2 ${\n                  //     userDetails.isVIP === \"1\"\n                  //       ? \"border-amarillo\"\n                  //       : \"border-white\"\n                  //   } bg-white w-11 h-11`}\n                  alt=\"profile\"\n                  src=\"https://www.google.com/url?sa=i&url=https%3A%2F%2Fnovocom.top%2Fview%2F3b27a1-no-profile-pic-for-whatsapp%2F&psig=AOvVaw2FIy7DuWX9vv1PJ-UaS0cl&ust=1626368895717000&source=images&cd=vfe&ved=0CAoQjRxqFwoTCOCslbmG4_ECFQAAAAAdAAAAABAD\"\n                />\n              ) : (\n                <div style={{ position: \"relative\" }}>\n                  <img\n                    style={{\n                      borderRadius: \"50%\",\n                      borderWidth: \"4px\",\n                      borderColor: `${userDetails.isVIP ? `yellow` : `white`}`,\n                      backgroundColor: \"white\",\n                    }}\n                    src={`data:${userDetails.userImageMime};base64,${userDetails.userImage}`}\n                    alt=\"profile\"\n                  />\n                  {userDetails.isVIP === \"1\" && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        bottom: \"0\",\n                        right: \"0\",\n                        height: \"5px\",\n                        borderRadius: \"50%\",\n                        backgroundColor: \"yellow\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        padding: \"1rem\",\n                      }}\n                    >\n                      <svg\n                        className=\"fill-current h-3\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 512.002 512.002\"\n                      >\n                        <path d=\"M511.267 197.258a14.995 14.995 0 00-12.107-10.209l-158.723-23.065-70.985-143.827a14.998 14.998 0 00-26.901 0l-70.988 143.827-158.72 23.065a14.998 14.998 0 00-8.312 25.585l114.848 111.954-27.108 158.083a14.999 14.999 0 0021.763 15.812l141.967-74.638 141.961 74.637a15 15 0 0021.766-15.813l-27.117-158.081 114.861-111.955a14.994 14.994 0 003.795-15.375z\" />\n                      </svg>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </ProfileGrid>\n          {/* <ProfileMenu /> */}\n        </ProfileSquare>\n      </NavbarStyle>\n    </NavbarContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FootertContainer = styled.footer`\n  display: flex;\n\n  height: 6vh;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  bottom: 0;\n  position: fixed;\n\n  @media (min-width: 768px) {\n    justify-content: end;\n    flex-direction: row-reverse;\n    height: 6vh;\n    bottom: 0;\n  }\n`;\n\nexport const InnerContainer = styled.div`\n  /* grid grid-cols-3 grid-rows-1 text-sm md:flex justify-center items-center md:pr-16 md:text-md\n */\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  font-size: 13px;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    display: flex;\n    padding-right: 24px;\n    font-size: 15px;\n  }\n`;\n\nexport const LinkContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    margin-right: 8px;\n  }\n`;\n","import {\n  FootertContainer,\n  InnerContainer,\n  LinkContainer,\n} from \"./FooterElements\";\n\nexport const Footer = () => {\n  return (\n    <FootertContainer>\n      <InnerContainer>\n        <LinkContainer>\n          <a\n            style={{ color: \"#3948FF\" }}\n            href=\"https://helppeoplecloud.com/2021/03/24/terminos-y-condiciones-del-servicio/\"\n          >\n            helppeople\n          </a>\n        </LinkContainer>\n\n        <LinkContainer>\n          <span>|</span>\n          <a\n            style={{ color: \"#3948FF\" }}\n            href=\"https://helppeoplecloud.com/2021/03/24/politicas-de-la-seguridad-de-la-informacion/\"\n          >\n            Política de cookies\n          </a>\n          <span>|</span>\n        </LinkContainer>\n\n        <LinkContainer>\n          <a\n            style={{ color: \"#3948FF\" }}\n            href=\"https://helppeoplecloud.com/2021/03/24/politica-de-proteccion-de-datos/\"\n          >\n            Directiva de privacidad\n          </a>\n        </LinkContainer>\n      </InnerContainer>\n    </FootertContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  gap: 0px;\n`;\n\nexport const MainDiv = styled.div`\n  width: 100%;\n  height: 80%;\n  border: 1px solid #dce6e6;\n  border-radius: 0px 0px 10px 10px;\n  padding: 2rem 3rem;\n  border-top: 0px;\n  border-color: #dce6e6;\n`;\n\nexport const TabButtons = styled.nav`\n  margin-top: 4rem;\n  display: flex;\n  width: 100%;\n  justify-content: start;\n`;\n\nexport const TabButton = styled.button`\n  /* py-2 w-full focus:outline-none rounded-t-lg font-title text-md text-lavanda  */\n  padding: ${(props) => props.isActive && `10px 0`};\n  width: 100%;\n  background-color: ${(props) => (props.isActive ? \"#FFFFFF \" : \"transparent\")};\n  border-width: ${(props) =>\n    props.isActive ? \"1px 1px 0px 1px\" : \"0px 0px 1px 0px\"};\n  margin-top: ${(props) => (props.isActive ? \"-1rem\" : \"\")};\n  border-color: #dce6e6;\n  border-radius: 7px 7px 0 0;\n  color: #3c6ebe;\n  font-weight: 600;\n  cursor: pointer;\n  z-index: 2;\n\n  &:hover {\n    background-color: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 640px) {\n    font-size: 0.65rem;\n    padding: 2px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.775rem;\n    padding: 5px;\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Tab1Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  position: relative;\n`;\n\nexport const ConfigurationsContainer = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  padding-bottom: 2rem;\n`;\n\nexport const EmailsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  flex-grow: 1;\n`;\n\nexport const LogsBtn = styled(Link)`\n  text-decoration: underline;\n  color: #3948ff;\n  position: ${(props) => props.absolute && \"absolute\"};\n  right: ${(props) => props.absolute && \"0\"};\n  top: ${(props) => props.absolute && \"-10px\"};\n  font-size: 12px;\n`;\n\nexport const EmailContainer = styled.div`\n  border: 1px solid #dce6e6;\n  border-radius: 10px;\n  min-height: 200px;\n  width: 100%;\n  display: flex;\n  background: ${(props) => props.edit && \"#f5faff\"};\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    min-height: 200px;\n  }\n\n  &:hover {\n    background: #f5faff;\n    border-color: transparent;\n  }\n`;\n\nexport const OptionsContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 10px;\n  gap: 15px;\n  position: ${(props) => props.absolute && \"absolute\"};\n  top: ${(props) => props.absolute && \"0\"};\n  left: ${(props) => props.absolute && \"5px\"};\n`;\n\nexport const OptionButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n`;\n\nexport const EmailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  grid-gap: 8%;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr;\n  }\n`;\n\nexport const InputFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  justify-content: center;\n  padding: 0px 15px 15px 10px;\n`;\n\nexport const InputField = styled.div`\n  display: grid;\n  grid-template-columns: 18% auto;\n  gap: 10px;\n  align-items: center;\n  /* height: ${(props) => props.switch && \"25px\"}; */\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 18% auto;\n    gap: 7px;\n    align-items: center;\n  }\n`;\n\nexport const Input = styled.input`\n  flex-grow: 1;\n  background: #ffffff;\n  border: 1px solid #dce6e6;\n  border-radius: 6px;\n  height: ${(props) => (props.height ? props.height : \"35px\")};\n  outline: none;\n  padding: 0 10px;\n`;\n\nexport const InputShow = styled.div`\n  flex-grow: 1;\n  height: 35px;\n  padding: 0 10px;\n  background: inherit;\n  border: 0;\n  align-items: center;\n  display: flex;\n  border: 1px solid transparent;\n`;\n\nexport const ContentContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: black; */\n  padding-top: 1%;\n  padding-left: 5%;\n  padding-right: 5%;\n  display: ${(props) => props.spaceBetween && \"flex\"};\n  justify-content: ${(props) => props.spaceBetween && \"space-between\"};\n  align-items: ${(props) => props.spaceBetween && \"center\"};\n  flex-direction: ${(props) => props.spaceBetween && \"column\"};\n`;\n\nexport const ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const Logs = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 15px;\n`;\n\nexport const LogContainer = styled.div`\n  width: 100%;\n  height: 145px;\n  border: 1px solid #dce6e6;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nexport const LogBody = styled.div`\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n`;\n\nexport const Photo = styled.div`\n  width: 40px;\n  height: 100%;\n\n  @media (min-width: 768px) {\n    width: 45px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 50px;\n  }\n`;\n\nexport const LogInfo = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  /* background-color: green; */\n  justify-content: center;\n`;\n\nexport const Reglas = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 15px;\n`;\n\nexport const ReglaContainer = styled.div`\n  width: 100%;\n  min-height: 230px;\n  border: 1px solid #dce6e6;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 6rem 2rem 6rem;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport const ReglasInputField = styled.div`\n  display: grid;\n  grid-template-columns: 40% auto;\n  gap: 10px;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 18% auto;\n    gap: 7px;\n    align-items: center;\n  }\n`;\n\nexport const CheckInput = styled.div`\n  height: 15px;\n  width: 15px;\n  border: 1px solid #3948ff;\n  border-radius: 50%;\n  cursor: pointer;\n  position: relative;\n\n  &:after {\n    content: \"\";\n    background-color: ${(props) => (props.checked ? \"#3948FF\" : \"inherit\")};\n    /* margin: 1px; */\n    border-radius: 50%;\n    position: absolute;\n    height: 11px;\n    width: 11px;\n    top: 1px;\n    right: 1px;\n  }\n`;\n\nexport const PartialOptionsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n","import styled from \"styled-components\";\nimport { IoMdAddCircle, IoMdAddCircleOutline } from \"react-icons/io\";\n\nexport const Button = styled.button`\n  border: ${(props) =>\n    props.bg ? `1px solid ${props.bg}` : \"1px solid #3948ff\"};\n  color: ${(props) => (props.bg ? props.bg : \"#3948ff\")};\n  padding: 8px;\n  border-radius: 6px;\n  background-color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 3px;\n  margin-top: ${(props) => props.marginTop && props.marginTop};\n  /* width: ${(props) => (props.w ? props.w : \"100px\")}; */\n\n  &:hover {\n    background-color: ${(props) => (props.bg ? props.bg : \"#3948ff\")};\n    color: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const AddIconNoFill = styled(IoMdAddCircleOutline)`\n  color: #3948ff;\n  font-size: 18px;\n`;\n\nexport const AddIconFill = styled(IoMdAddCircle)`\n  color: #3948ff;\n  font-size: 18px;\n`;\n\nexport const ModalButtons = styled.button`\n  border-radius: 6px;\n  border: 1px solid;\n  border-color: ${(props) => (props.bg ? props.bg : \"#787878\")};\n  height: 45px;\n  width: 175px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${(props) => (props.bg ? props.bg : \"transparent\")};\n  color: ${(props) => (props.bg ? \"white\" : \"#787878\")};\n  outline: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\nexport const Scrollbar = (props) => {\n  const preventDefault = (e) => {\n    e = e || window.event;\n    if (e.preventDefault) {\n      e.preventDefault();\n    }\n    e.returnValue = false;\n  };\n\n  const enableScroll = () => {\n    document.removeEventListener(\"wheel\", preventDefault, false);\n  };\n\n  const disableScroll = () => {\n    document.addEventListener(\"wheel\", preventDefault, {\n      passive: false,\n    });\n  };\n\n  return (\n    <Scrollbars\n      style={{\n        width: \"100%\",\n        height: props.height ? props.height : \"24rem\",\n        padding: \"10px\",\n      }}\n      autoHide\n      onMouseEnter={() => disableScroll}\n      onMouseLeave={() => enableScroll}\n    >\n      {props.children}\n    </Scrollbars>\n  );\n};\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { GrClose } from \"react-icons/gr\";\n\nconst portalRoot = document.getElementById(\"portal\");\n\nclass Popup extends Component {\n  constructor() {\n    super();\n    this.element = document.createElement(\"div\");\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.element);\n  };\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.element);\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return ReactDOM.createPortal(children, this.element);\n  }\n}\n\n// style for popup\nconst PopupStyle = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupWindow = styled.div`\n  position: fixed;\n  background-color: #ffffff;\n  border-radius: 5px;\n  padding: 13px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  width: ${(props) => (props.height ? props.width : \"95%\")};\n  height: ${(props) => (props.height ? props.height : \"80%\")};\n  transition: 0.5s ease-in-out;\n\n  @media (min-width: 1280px) {\n    width: ${(props) => (props.height ? props.width : \"65%\")};\n    height: ${(props) => (props.height ? props.height : \"75%\")};\n  }\n\n  @media (min-width: 1024px) {\n    width: ${(props) => (props.height ? props.width : \"60%\")};\n    height: ${(props) => (props.height ? props.height : \"75%\")};\n  }\n\n  @media (min-width: 768px) {\n    width: ${(props) => (props.height ? props.width : \"75%\")};\n    height: ${(props) => (props.height ? props.height : \"75%\")};\n  }\n`;\n\nconst Background = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0px;\n  background: black;\n  opacity: 0.5;\n  z-index: 999;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  cursor: pointer;\n  border-width: 0px;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Modal = (props) => {\n  const { children, setModalActive, active, height, alert, width } = props;\n  return (\n    <Popup>\n      {active && (\n        <PopupStyle>\n          <PopupWindow height={height} width={width}>\n            <div style={{ position: \"relative\" }}>\n              {!alert && (\n                <Button\n                  onClick={() => {\n                    setModalActive(false);\n                  }}\n                >\n                  <GrClose />\n                </Button>\n              )}\n            </div>\n            <Content>{children}</Content>\n          </PopupWindow>\n          <Background\n            onClick={() => !alert && setModalActive(false)}\n          ></Background>\n        </PopupStyle>\n      )}\n    </Popup>\n  );\n};\n","import styled, { keyframes } from \"styled-components\";\nconst BounceAnimation = keyframes`\n  0% { margin-bottom: 0; }\n  50% { margin-bottom: 15px }\n  100% { margin-bottom: 0 }\n`;\nexport const DotWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: ${(props) => (props.mTop ? props.mTop : \"150px\")};\n`;\nexport const Dot = styled.div`\n  background-color: #3c6ebe;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  margin: 0 5px; /* Animation */\n  animation: ${BounceAnimation} 0.5s linear infinite;\n  animation-delay: ${(props) => props.delay};\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Loader = ({ mTop }) => {\n  return (\n    <Container>\n      <DotWrapper mTop={mTop}>\n        <Dot delay=\"0s\" />\n        <Dot delay=\".1s\" />\n        <Dot delay=\".2s\" />\n      </DotWrapper>\n    </Container>\n  );\n};\n","const TOKEN = 'token'\n\nconst TokenService = {\n  get(): string {\n    const token = localStorage.getItem(TOKEN)\n    return token ? token : ''\n  },\n  set(value: string) {\n    localStorage.setItem(TOKEN, value)\n  },\n  remove() {\n    localStorage.removeItem(TOKEN)\n  },\n}\n\nexport { TokenService }\n","import axios from \"axios\";\nimport environment from \"environment\";\n\nconst AWSAPI = () => {\n  return axios.create({\n    baseURL: environment.api.awsApi,\n    timeout: environment.intervals.timeout,\n    headers: {\n      common: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    },\n  });\n};\n\nexport default AWSAPI;\n","import { RootState } from \"../store\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport API from \"../../services/API\";\nimport { TokenService } from \"../../services/LocalStorage\";\nimport AWSAPI from \"../../services/AWSAPI\";\nimport { toast } from \"react-toastify\";\n\ninterface ServerValue {\n  text: string;\n  server: string;\n  port: number;\n}\n\ninterface ServerType {\n  label: string;\n  value: ServerValue;\n}\n\ninterface SelectType {\n  label: string;\n  value: string;\n}\n\ninterface LogsType {\n  type: string;\n  logMessage: string;\n  data: string;\n  username: string;\n}\n\ninterface ClientSettings {\n  id: number;\n  apiUrl: string;\n  mainUsername: string;\n  active: boolean;\n  maxInboxLength: number;\n}\n\ninterface Reglas {\n  id: number;\n  hasKeywords: boolean;\n  keywords: Array<string>[];\n  type?: string;\n  ruleId: number;\n  natureId?: number;\n  areaId?: number;\n  serviceId?: number;\n  recentlyCreated?: boolean;\n}\n\ninterface EmailsListTypes {\n  id: number;\n  emailText: string;\n  tipoDeServidor?: ServerType;\n  password?: string;\n  port?: boolean;\n  portNumber?: number;\n  otherRoute?: string;\n  recentlyCreated?: boolean;\n}\n\ninterface LoadingTypes {\n  loadingRules: boolean;\n  loadingInboxes: boolean;\n  loadingNatures: boolean;\n  loadingAreas: boolean;\n}\n\ninterface AlertType {\n  isOpen: boolean;\n  content: string;\n}\n\ninterface EmailState {\n  emails: number;\n  emailsList: EmailsListTypes[];\n  tooManyEmailsAlert: boolean;\n  serversList: ServerType[];\n  areas: SelectType[];\n  natures: SelectType[];\n  services: SelectType[];\n  clientSettings: ClientSettings;\n  reglas: Reglas[];\n  loading: LoadingTypes;\n  logs: LogsType[];\n  alert: AlertType;\n}\n\nconst initialState: EmailState = {\n  emails: 0,\n  emailsList: [],\n  tooManyEmailsAlert: false,\n  serversList: [\n    {\n      label: \"Gmail\",\n      value: { text: \"GMAIL\", server: \"imap.gmail.com\", port: 993 },\n    },\n    {\n      label: \"Outlook\",\n      value: { text: \"OUTLOOK\", server: \"outlook.office365.com\", port: 993 },\n    },\n    {\n      label: \"Office365\",\n      value: { text: \"OFFICE365\", server: \"outlook.office365.com\", port: 993 },\n    },\n    {\n      label: \"Zoho Mail\",\n      value: { text: \"ZOHO\", server: \"imappro.zoho.com\", port: 993 },\n    },\n    { label: \"Otro\", value: { text: \"OTRO\", server: \"\", port: 557 } },\n  ],\n  areas: [],\n  natures: [],\n  services: [],\n  clientSettings: {\n    id: 0,\n    apiUrl: \"\",\n    mainUsername: \"\",\n    active: false,\n    maxInboxLength: 0,\n  },\n  reglas: [],\n  loading: {\n    loadingInboxes: false,\n    loadingRules: false,\n    loadingNatures: false,\n    loadingAreas: false,\n  },\n  logs: [],\n  alert: { isOpen: false, content: \"\" },\n};\n\nexport const EmailStore = createSlice({\n  name: \"email\",\n  initialState,\n  reducers: {\n    setEmailsCount: (state, action: PayloadAction) => {\n      state.emails = state.emails + 1;\n    },\n    setNewInbox: (state, action: PayloadAction<EmailsListTypes>) => {\n      state.emailsList = [...state.emailsList, action.payload];\n    },\n    setReplaceInbox: (state, action: PayloadAction<any>) => {\n      const indexToReplace = state.emailsList.indexOf(\n        state.emailsList.filter(\n          (item) => item.id === action.payload.idToReplace\n        )[0]\n      );\n\n      let tempList = [...state.emailsList];\n      tempList[indexToReplace] = action.payload.replaceObject;\n\n      state.emailsList = tempList;\n    },\n    setEmailsList: (state, action: PayloadAction<EmailsListTypes[]>) => {\n      state.emailsList = action.payload;\n    },\n    setTooManyWarning: (state, action: PayloadAction<boolean>) => {\n      state.tooManyEmailsAlert = action.payload;\n    },\n    setEmailFields: (state, action: PayloadAction<EmailsListTypes[]>) => {\n      state.emailsList = action.payload;\n    },\n    setAreas: (state, action: PayloadAction<SelectType[]>) => {\n      state.areas = action.payload;\n    },\n    setNatures: (state, action: PayloadAction<SelectType[]>) => {\n      state.natures = action.payload;\n    },\n    setServices: (state, action: PayloadAction<SelectType[]>) => {\n      state.services = action.payload;\n    },\n    setAddRules: (state, action: PayloadAction<Reglas>) => {\n      state.reglas = [...state.reglas, action.payload];\n    },\n    setClientSettings: (state, action: PayloadAction<ClientSettings>) => {\n      state.clientSettings = action.payload;\n    },\n    setRules: (state, action: PayloadAction<Reglas[]>) => {\n      state.reglas = action.payload;\n    },\n    setRulesLoader: (state, action: PayloadAction<boolean>) => {\n      state.loading = { ...state.loading, loadingRules: action.payload };\n    },\n    setInboxesLoader: (state, action: PayloadAction<boolean>) => {\n      state.loading = { ...state.loading, loadingInboxes: action.payload };\n    },\n    setNaturesLoader: (state, action: PayloadAction<boolean>) => {\n      state.loading = { ...state.loading, loadingRules: action.payload };\n    },\n    setAreasLoader: (state, action: PayloadAction<boolean>) => {\n      state.loading = { ...state.loading, loadingInboxes: action.payload };\n    },\n    setLogs: (state, action: PayloadAction<LogsType[]>) => {\n      state.logs = action.payload;\n    },\n    setNewRule: (state, action: PayloadAction<Reglas[]>) => {\n      state.reglas = action.payload;\n    },\n    setFilteredRules: (state, action: PayloadAction<number>) => {\n      state.reglas = state.reglas.filter((item) => item.id !== action.payload);\n    },\n    setAlert: (state, action: PayloadAction<AlertType>) => {\n      state.alert = action.payload;\n    },\n  },\n});\n\n// handles alert changes\nexport const handleAlert = (payload: AlertType) => (dispatch: any) => {\n  dispatch(setAlert(payload));\n};\n/*\nThis function updates the email count and list:\nsetEmailsCount => updates the total count of emails\nsetEmailsList => updates the list of emails by adding a new email\n*/\nexport const addEmailTemplate = () => (dispatch: any) => {\n  const newEmailTemplate: EmailsListTypes = {\n    id: 60065,\n    emailText: \"\",\n    tipoDeServidor: { label: \"\", value: { text: \"\", server: \"\", port: 557 } },\n    password: \"\",\n    port: false,\n    portNumber: undefined,\n    otherRoute: \"\",\n    recentlyCreated: true,\n  };\n  dispatch(setNewInbox(newEmailTemplate));\n};\n\nexport const addRuleTempplate = (id: number) => (dispatch: any) => {\n  const newRuleTemplate: Reglas = {\n    id: 10000,\n    hasKeywords: false,\n    keywords: [],\n    type: \"COMPLETA\",\n    ruleId: 1,\n    recentlyCreated: true,\n  };\n  dispatch(setAddRules(newRuleTemplate));\n};\n\n/*\nThis function triggers a warning when a user wants to add more emails than limit\n*/\nexport const triggerTooManyWarning = (trigger: boolean) => (dispatch: any) => {\n  dispatch(setTooManyWarning(trigger));\n};\n\n/*\nThis function saves the changes done to an email\n*/\nexport const editEmailFields =\n  (updatedList: EmailsListTypes[]) => (dispatch: any) => {\n    dispatch(setEmailFields(updatedList));\n  };\n\n/*\nThis function gets the natures\n*/\nexport const getNatures = () => (dispatch: any) => {\n  try {\n    API()\n      .get(`/services/getnatures?token=${TokenService.get()}`)\n      .then((res) => {\n        let naturesToDispatch: SelectType[] = [];\n        naturesToDispatch = res.data.Values.map((item: any) => {\n          return { label: item.Text, value: item.Value };\n        });\n        dispatch(setNatures(naturesToDispatch));\n      })\n      .catch((e) => console.log(e));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*\nThis function gets the areaas\n*/\nexport const getAreas = () => (dispatch: any) => {\n  try {\n    API()\n      .get(`/services/getareas?token=${TokenService.get()}`)\n      .then((res) => {\n        let areasToDispatch: SelectType[] = [];\n        areasToDispatch = res.data.Values.map((item: any) => {\n          return { label: item.Text, value: item.Value };\n        });\n        dispatch(setAreas(areasToDispatch));\n      })\n      .catch((e) => console.log(e));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*\nThis function gets the service\n*/\nexport const getServices = (areaID?: string) => (dispatch: any) => {\n  try {\n    API()\n      .get(\n        `/services/getservices?token=${TokenService.get()}${\n          areaID && areaID !== \"\" ? `&areaid=${areaID}` : ``\n        }`\n      )\n      .then((res) => {\n        let servicesToDispatch: SelectType[] = [];\n        servicesToDispatch = res.data.Values.map((item: any) => {\n          return { label: item.Text, value: item.Value };\n        });\n        dispatch(setServices(servicesToDispatch));\n      })\n      .catch((e) => console.log(e));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// AWS API CALLS\n\n/*\nThis function gets Client information which provides key values to make other API calls\n*/\nexport const getClientSettings =\n  (username: string, cliCod: any) => async (dispatch: any) => {\n    try {\n      AWSAPI()\n        .post(``, {\n          operation: \"GetClientSettingsByCliCod\",\n          payload: {\n            cliCod: parseInt(cliCod),\n          },\n        })\n        .then((res) => {\n          if (res.status < 400 && res.data.status !== \"Fail\") {\n            let clientSettings: ClientSettings = {\n              id: res.data.data.id,\n              apiUrl: res.data.data.apiUrl,\n              mainUsername: res.data.data.mainUsername,\n              active: res.data.data.active,\n              maxInboxLength: res.data.data.maxInboxLength,\n            };\n            dispatch(setClientSettings(clientSettings));\n          }\n          // console.log(res.data.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n/*\nThis function gets all inboxes created by the user\n*/\nexport const getInboxesByClientId =\n  (clientID: number) => async (dispatch: any) => {\n    try {\n      dispatch(setInboxesLoader(true));\n      AWSAPI()\n        .post(``, {\n          operation: \"GetInboxesByClientId\",\n          payload: {\n            clientId: clientID,\n          },\n        })\n        .then((res) => {\n          function capitalize(str: string) {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n          }\n          let emailList: EmailsListTypes[] = [];\n          emailList = res.data.data.map((inbox: any) => {\n            return {\n              id: inbox.id,\n              emailText: inbox.username,\n              tipoDeServidor: {\n                label: inbox.serverType\n                  .toLowerCase()\n                  .split(\" \")\n                  .map(capitalize)\n                  .join(\" \"),\n                value: {\n                  text: inbox.serverType,\n                  server: inbox.server,\n                  port: inbox.port,\n                },\n              },\n              password: inbox.password,\n              otherRoute: inbox.server,\n              port: inbox.port === 993 ? true : false,\n              portNumber: inbox.port,\n            };\n          });\n          dispatch(setEmailsList(emailList));\n          dispatch(setInboxesLoader(false));\n          // console.log(emailList);\n        });\n    } catch (error) {\n      console.log(error);\n      dispatch(setInboxesLoader(false));\n    }\n  };\n\n/*\nThis function gets all of the rules for a specific inbox\n*/\nexport const getRulesByInboxId =\n  (\n    inboxID: number,\n    natures: SelectType[],\n    areas: SelectType[],\n    services: SelectType[]\n  ) =>\n  async (dispatch: any) => {\n    try {\n      dispatch(setRulesLoader(true));\n      AWSAPI()\n        .post(``, {\n          operation: \"GetRulesByInboxId\",\n          payload: {\n            inboxId: inboxID,\n          },\n        })\n        .then((res) => {\n          let rules: Reglas[] = [];\n          rules = res.data.data.map((rule: any) => {\n            return {\n              id: rule.id,\n              hasKeywords: rule.hasKeywords,\n              keywords: rule.keywords,\n              type: rule.type,\n              ruleId: rule.ruleId,\n              areaId: rule.areaId,\n              serviceId: rule.serviceId,\n              natureId: rule.natureId,\n            };\n          });\n\n          dispatch(setRules(rules));\n          dispatch(setRulesLoader(false));\n          //   console.log(rules);\n        });\n    } catch (error) {\n      console.log(error);\n      dispatch(setRulesLoader(false));\n    }\n  };\n\n/*\nThis function gets all of the logs created by the user\n*/\nexport const getLogsByClientId =\n  (clientId?: number) => async (dispatch: any) => {\n    try {\n      AWSAPI()\n        .post(``, {\n          operation: \"GetLogsByClientId\",\n          payload: {\n            clientId: 1,\n          },\n        })\n        .then((res) => {\n          let logs: LogsType[] = res.data.data.Items.map((log: any) => {\n            return {\n              type: log.type,\n              logMessage: log.logMessage,\n              date: log.date,\n              username: log.inboxUsername,\n            };\n          });\n          //   console.log(logs);\n          dispatch(setLogs(logs));\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n/*\nThis function creates a new inbox by first being validated by imap\n*/\nexport const createInbox =\n  (temporaryInboxId: number, newInbox: any, clientID: number) =>\n  async (dispatch: any) => {\n    try {\n      const validation = await AWSAPI()\n        .post(``, {\n          operation: \"ValidateIMAPCredentials\",\n          payload: {\n            username: newInbox.username,\n            password: newInbox.password,\n            server: newInbox.server,\n            port: newInbox.port,\n          },\n        })\n        .then((res) => {\n          //   console.log(res.data);\n          return res.data.data.successfulConnection;\n          //   return true;\n        });\n      //   console.log(validation.data.successfulConnection);\n      if (validation === true) {\n        AWSAPI()\n          .post(``, {\n            operation: \"CreateInbox\",\n            payload: {\n              clientId: clientID,\n              username: newInbox.username,\n              password: newInbox.password,\n              server: newInbox.server,\n              port: newInbox.port ? 993 : 557,\n              serverType: newInbox.serverType.value.text,\n            },\n          })\n          .then((res) => {\n            console.log(res.data.data.createdInboxId);\n            let replaceObject = {\n              id: res.data.data.createdInboxId,\n              emailText: newInbox.username,\n              password: newInbox.password,\n              port: newInbox.port,\n              portNumber: newInbox.port ? 993 : 557,\n              tipoDeServidor: newInbox.serverType,\n              otherRoute: newInbox.server,\n            };\n            dispatch(\n              setReplaceInbox({\n                replaceObject: replaceObject,\n                idToReplace: temporaryInboxId,\n              })\n            );\n            toast.success(\"Buzón creado exitosamente.\", {\n              bodyStyle: { color: \"white\" },\n              position: \"bottom-left\",\n            });\n          });\n      } else {\n        dispatch(\n          setAlert({\n            isOpen: true,\n            content:\n              \"Credenciales imap incorrectas. Prueba con otros credenciales\",\n          })\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n/*\nThis function deletes an inbox from the database\n*/\nexport const deleteInbox =\n  (inboxId: number, emails: EmailsListTypes[]) => async (dispatch: any) => {\n    try {\n      AWSAPI()\n        .post(``, {\n          operation: \"DeleteInbox\",\n          payload: {\n            inboxId: inboxId,\n          },\n        })\n        .then((res) => {\n          const newEmailList = emails.filter((item) => item.id !== inboxId);\n          if (res.data.data.deleted) {\n            dispatch(setEmailsList(newEmailList));\n          }\n          toast.warning(\"Buzón eliminado exitosamente.\", {\n            bodyStyle: { color: \"white\" },\n            position: \"bottom-left\",\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n/*\nThis function edits an inbox\n*/\nexport const editInbox =\n  (emailToEdit: EmailsListTypes, clientId: number, emails: EmailsListTypes[]) =>\n  async (dispatch: any) => {\n    try {\n      AWSAPI()\n        .post(``, {\n          operation: \"EditInbox\",\n          payload: {\n            id: emailToEdit.id,\n            clientId: clientId,\n            username: emailToEdit.emailText,\n            password: emailToEdit.password,\n            server: emailToEdit.otherRoute,\n            port: emailToEdit.portNumber,\n            serverType: emailToEdit.tipoDeServidor?.value.text,\n          },\n        })\n        .then((res) => {\n          if (res.data.data.edited === true) {\n            dispatch(\n              setReplaceInbox({\n                replaceObject: emailToEdit,\n                idToReplace: emailToEdit.id,\n              })\n            );\n            toast.success(\"Buzón guardado exitosamente.\", {\n              bodyStyle: { color: \"white\" },\n              position: \"bottom-left\",\n            });\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\nexport const saveRule =\n  (payloadArg: any, recentlyCreated: boolean, rules: Reglas[]) =>\n  (dispatch: any) => {\n    if (recentlyCreated) {\n      try {\n        AWSAPI()\n          .post(``, {\n            operation: \"CreateInboxRule\",\n            payload: { ...payloadArg },\n          })\n          .then((res) => {\n            let ruleToReplace = {\n              id: res.data.data.createdInboxRuleId,\n              hasKeywords: payloadArg.hasKeywords,\n              keywords: payloadArg.keywords,\n              type: payloadArg.type,\n              natureId: payloadArg.natureId,\n              areaId: payloadArg.areaId,\n              serviceId: payloadArg.serviceId,\n              ruleId: payloadArg.ruleId,\n            };\n\n            const indexToReplace = rules.indexOf(\n              rules.filter((item) => item.id === payloadArg.id)[0]\n            );\n\n            let tempList = [...rules];\n            tempList[indexToReplace] = ruleToReplace;\n\n            dispatch(setNewRule(tempList));\n\n            // console.log(tempList);\n            toast.success(\"Regla creada con exito.\", {\n              bodyStyle: { color: \"white\" },\n              position: \"bottom-left\",\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (!recentlyCreated) {\n      try {\n        AWSAPI()\n          .post(``, {\n            operation: \"EditInboxRule\",\n            payload: { ...payloadArg },\n          })\n          .then((res) => {\n            if (res.data.data.edited) {\n              let ruleToReplace = {\n                id: payloadArg.id,\n                hasKeywords: payloadArg.hasKeywords,\n                keywords: payloadArg.keywords,\n                type: payloadArg.type,\n                natureId: payloadArg.natureId,\n                areaId: payloadArg.areaId,\n                serviceId: payloadArg.serviceId,\n                ruleId: payloadArg.ruleId,\n              };\n\n              const indexToReplace = rules.indexOf(\n                rules.filter((item) => item.id === payloadArg.id)[0]\n              );\n\n              let tempList = [...rules];\n              tempList[indexToReplace] = ruleToReplace;\n\n              dispatch(setNewRule(tempList));\n              toast.success(\"Regla guardada con exito.\", {\n                bodyStyle: { color: \"white\" },\n                position: \"bottom-left\",\n              });\n            } else {\n              console.log(res.data);\n            }\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\nexport const deleteRule = (ruleId: number) => (dispatch: any) => {\n  try {\n    AWSAPI()\n      .post(``, {\n        operation: \"DeleteInboxRule\",\n        payload: { inboxRuleId: ruleId },\n      })\n      .then((res) => {\n        if (res.data.data.deleted) {\n          dispatch(setFilteredRules(ruleId));\n          toast.warning(\"Regla eliminada con exito.\", {\n            bodyStyle: { color: \"white\" },\n            position: \"bottom-left\",\n          });\n        }\n        // console.log(res.data);\n      });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const {\n  setEmailsCount,\n  setEmailsList,\n  setNewInbox,\n  setReplaceInbox,\n  setTooManyWarning,\n  setEmailFields,\n  setRules,\n  //   setDeleteEmail,\n  setAreas,\n  setNatures,\n  setServices,\n  setAddRules,\n  setClientSettings,\n  setRulesLoader,\n  setInboxesLoader,\n  setNaturesLoader,\n  setAreasLoader,\n  setLogs,\n  setNewRule,\n  setFilteredRules,\n  setAlert,\n} = EmailStore.actions;\nexport const email = (state: RootState) => state.email;\nexport default EmailStore.reducer;\n","export const Calendar = ({ size }) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 14 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10.4852 2.99753C11.0295 2.99753 11.4704 2.55955 11.4704 2.01428V0.985194C11.4704 0.439436 11.03 0 10.4852 0C9.94041 0 9.50049 0.438948 9.50049 0.985194V2.01477C9.50098 2.55955 9.9409 2.99753 10.4852 2.99753Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M13.9849 1.70456H12.0018V2.20545C12.0018 3.03213 11.3302 3.70568 10.5021 3.70568C9.67295 3.70568 9.00282 3.03213 9.00282 2.20545V1.70456H5.00108V2.20545C5.00108 3.03213 4.32851 3.70568 3.50085 3.70568C2.67319 3.70568 2.00111 3.03262 2.00111 2.20545V1.70456L0 1.67969V14.2034H1.0008H13.0007L14 14.2004L13.9849 1.70456ZM12.9997 13.206H1.0008V5.20541H13.0007V13.206H12.9997Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M3.48544 2.99753C4.02974 2.99753 4.47112 2.55955 4.47112 2.01428V0.985194C4.47112 0.438948 4.02974 0 3.48544 0C2.94114 0 2.50122 0.438948 2.50122 0.985194V2.01477C2.50122 2.55955 2.94066 2.99753 3.48544 2.99753Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M6.57973 6.27881H5.00391V7.66979H6.57973V6.27881Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M9.12904 6.27881H7.55176V7.66979H9.12904V6.27881Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M11.4904 6.27881H9.91455V7.66979H11.4904V6.27881Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M6.57973 8.58838H5.00391V9.97838H6.57973V8.58838Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M9.12904 8.58838H7.55176V9.97838H9.12904V8.58838Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M11.4904 8.58838H9.91455V9.97838H11.4904V8.58838Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M6.57973 10.9443H5.00391V12.3343H6.57973V10.9443Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M4.07582 8.58838H2.50098V9.97838H4.07582V8.58838Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M4.07582 10.9443H2.50098V12.3343H4.07582V10.9443Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M9.12904 10.9443H7.55176V12.3343H9.12904V10.9443Z\"\n        fill=\"#3948FF\"\n      />\n      <path\n        d=\"M11.4904 10.9443H9.91455V12.3343H11.4904V10.9443Z\"\n        fill=\"#3948FF\"\n      />\n    </svg>\n  );\n};\n","import {\n  LogContainer,\n  LogBody,\n  //   Photo,\n  LogInfo,\n} from \"./ServidoresDeCorreoElements\";\nimport { Calendar } from \"../../Svg/Calendario\";\n\nexport const Log = (props) => {\n  const { type, logMessage, date, username } = props.features;\n  const dateFormat = new Date(date);\n\n  return (\n    <LogContainer>\n      <h5>{logMessage}</h5>\n      <LogBody>\n        {/* <Photo>\n            <SinAsignar />\n          </Photo> */}\n        <LogInfo>\n          <p>\n            Correo asociado:{\" \"}\n            <span style={{ color: \"#3C6EBE\", fontWeight: \"bold\" }}>\n              {username}\n            </span>\n          </p>\n          <span\n            style={{\n              fontSize: \"12px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"4px\",\n              //   justifyContent: \"center\",\n            }}\n          >\n            <Calendar size={14} /> {dateFormat.toString()}\n          </span>\n        </LogInfo>\n      </LogBody>\n      <span style={{ fontSize: \"11px\", color: \"#FABE32\" }}>{type}</span>\n    </LogContainer>\n  );\n};\n","import Select from \"react-select\";\n\nexport const CustomSelect = ({\n  options,\n  defaultValue,\n  placeholder,\n  onChange,\n  value,\n}) => {\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      fontSize: \"13px\",\n    }),\n    control: (provided, state) => ({\n      // none of react-select's styles are passed to <Control />\n      display: \"flex\",\n      border: \"1px solid #dce6e6\",\n      borderRadius: \"7px\",\n      width: \"100%\",\n      margin: \"0\",\n      height: \"35px\",\n      backgroundColor: \"white\",\n      fontSize: \"13px\",\n      color: \"#757371\",\n      fontFamily: `'Open Sans', sans-serif`,\n    }),\n    dropdownIndicator: (provided, state) => ({\n      ...provided,\n    }),\n    indicatorSeparator: () => ({\n      display: \"none\",\n    }),\n    placeholder: () => ({\n      fontSize: \"13px\",\n      color: \"#757371\",\n      fontFamily: `'Open Sans', sans-serif`,\n    }),\n  };\n\n  return (\n    <Select\n      styles={customStyles}\n      options={options}\n      defaultValue={defaultValue}\n      placeholder={placeholder}\n      onChange={onChange}\n      value={value}\n    />\n  );\n};\n","export const Basura = ({ size }) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 14 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M9.66036 1.65348C9.66036 1.11128 9.24682 0.715017 8.71694 0.715017H4.83871C4.30899 0.715017 3.89546 1.11128 3.89546 1.65348V2.68131H3.19669V1.65348C3.19669 0.717111 3.92361 0 4.83871 0H8.71694C9.63204 0 10.3591 0.717111 10.3591 1.65348V2.68131H9.66036V1.65348Z\"\n        fill=\"#645ABE\"\n      />\n      <path\n        d=\"M10.9098 18.1884H2.6468C1.8501 18.1884 1.23184 17.4713 1.23184 16.5796V5.5415H12.325V16.5796C12.325 17.4713 11.7067 18.1884 10.9098 18.1884ZM4.55104 7.24858C4.55104 7.05115 4.3946 6.89107 4.20165 6.89107C4.0087 6.89107 3.85226 7.05115 3.85226 7.24858V15.6947C3.85226 15.8922 4.0087 16.0523 4.20165 16.0523C4.3946 16.0523 4.55104 15.8922 4.55104 15.6947V7.24858ZM7.12779 7.24858C7.12779 7.05115 6.97135 6.89107 6.7784 6.89107C6.58545 6.89107 6.42901 7.05115 6.42901 7.24858V15.6947C6.42901 15.8922 6.58545 16.0523 6.7784 16.0523C6.97135 16.0523 7.12779 15.8922 7.12779 15.6947V7.24858ZM9.70453 7.24858C9.70453 7.05115 9.54809 6.89107 9.35514 6.89107C9.16219 6.89107 9.00575 7.05115 9.00575 7.24858V15.6947C9.00575 15.8922 9.16219 16.0523 9.35514 16.0523C9.54809 16.0523 9.70453 15.8922 9.70453 15.6947V7.24858Z\"\n        fill=\"#645ABE\"\n      />\n      <path\n        d=\"M12.6827 4.82613H0.873411C0.390955 4.82613 -6.05418e-05 4.42603 -6.05418e-05 3.93235C-6.05418e-05 3.43868 0.390955 3.03857 0.873411 3.03857H12.6827C13.1651 3.03857 13.5562 3.43868 13.5562 3.93235C13.5562 4.42603 13.1651 4.82613 12.6827 4.82613Z\"\n        fill=\"#645ABE\"\n      />\n    </svg>\n  );\n};\n","export const Guardar = ({ size }) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 15 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.8404 0H1.75781C0.788555 0 0 0.82986 0 1.84989V13.9358C0 14.9559 0.788555 15.7857 1.75781 15.7857H13.2422C14.2114 15.7857 15 14.9559 15 13.9358V2.27277L12.8404 0ZM3.51562 1.23326H10.2539V4.87137H3.51562V1.23326ZM11.4844 14.5525H3.51562V9.68108H11.4844V14.5525ZM13.8281 13.9358C13.8281 14.2758 13.5653 14.5525 13.2422 14.5525H12.6562V8.44782H2.34375V14.5525H1.75781C1.43473 14.5525 1.17188 14.2758 1.17188 13.9358V1.84989C1.17188 1.50988 1.43473 1.23326 1.75781 1.23326H2.34375V6.10463H11.4258V1.23326H12.355L13.8281 2.78359V13.9358Z\"\n        fill=\"#645ABE\"\n      />\n      <path\n        d=\"M9.19922 1.81885H8.02734V4.25453H9.19922V1.81885Z\"\n        fill=\"#645ABE\"\n      />\n    </svg>\n  );\n};\n","export const Lapiz = ({ size }) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 17 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13.9882 0.13175C13.7946 -0.0438566 13.4801 -0.0439766 13.2863 0.13175L1.54987 10.772C1.54967 10.7722 1.5494 10.7723 1.5492 10.7725C1.49454 10.8221 1.45222 10.8861 1.42932 10.9484L0.0254886 14.7665C-0.033971 14.9282 0.0124518 15.1064 0.145401 15.227C0.279044 15.3481 0.475919 15.3893 0.653306 15.3357L4.86475 14.063C4.93738 14.0411 5.00835 14 5.05874 13.9543L16.7959 3.31348C16.9897 3.13776 16.9897 2.85287 16.7959 2.67714L13.9882 0.13175ZM4.70781 12.9998L2.60207 11.0907L11.5316 2.9953L13.6373 4.90435L4.70781 12.9998ZM2.1171 11.9237L3.78905 13.4395L1.28112 14.1973L2.1171 11.9237ZM14.3392 4.26801L12.2334 2.35896L13.6373 1.08625L15.743 2.9953L14.3392 4.26801Z\"\n        fill=\"#645ABE\"\n      />\n      <path\n        d=\"M11.8827 4.58541C11.6889 4.40968 11.3746 4.40968 11.1808 4.58541L4.35704 10.7718C4.16321 10.9475 4.16321 11.2324 4.35704 11.4081C4.55084 11.5839 4.86512 11.5839 5.05895 11.4081L11.8827 5.22175C12.0765 5.04602 12.0765 4.76113 11.8827 4.58541V4.58541Z\"\n        fill=\"#645ABE\"\n      />\n    </svg>\n  );\n};\n","//styles\nimport {\n  Input,\n  ReglaContainer,\n  ReglasInputField,\n  CheckInput,\n  PartialOptionsContainer,\n  OptionsContainer,\n  OptionButton,\n} from \"./ServidoresDeCorreoElements\";\n\n//widgets\nimport { CustomSelect } from \"../../widgets/ReactSelect\";\n\n//reducer\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  email,\n  getNatures,\n  getAreas,\n  getServices,\n  saveRule,\n  deleteRule,\n} from \"../../../store/modules/EmailStore\";\nimport { useEffect, useState } from \"react\";\nimport { Basura } from \"../../Svg/Basura\";\nimport { Guardar } from \"../../Svg/Guardar\";\n\nexport const Regla = (props) => {\n  const {\n    hasKeywords,\n    keywords,\n    type,\n    natureId,\n    areaId,\n    serviceId,\n    ruleId,\n    id,\n    recentlyCreated,\n  } = props.features;\n  const inboxId = props.inboxId;\n  const dispatch = useDispatch();\n  const [editableKeywords, setKeywords] = useState(keywords.join(\",\"));\n  const [editableHasKeywords, setHasKeywords] = useState(hasKeywords);\n  const [typo, setType] = useState(type);\n  const [showOptions, setShowOptions] = useState(false);\n  const emailState = useSelector(email);\n\n  const [selectedNature, setSelectedNature] = useState(\n    natureId\n      ? emailState.natures.filter((n) => n.value === natureId.toString())[0]\n      : { label: \"Seleccione la naturaleza\", value: \"\" }\n  );\n  const [selectedArea, setSelectedAreas] = useState(\n    areaId\n      ? emailState.areas.filter((a) => a.value === areaId.toString())[0]\n      : { label: \"Seleccione el area\", value: \"\" }\n  );\n  const [selectedService, setSelectedService] = useState(\n    serviceId\n      ? emailState.services.filter((s) => s.value === serviceId.toString())[0]\n      : { label: \"Seleccione el servicio\", value: \"\" }\n  );\n\n  const options = [\n    {\n      Icon: Basura,\n      action: () => {\n        dispatch(deleteRule(id));\n      },\n      id: 1,\n    },\n    {\n      Icon: Guardar,\n      action: () => {\n        let payload = {\n          id: id,\n          inboxId: inboxId,\n          hasKeywords: editableHasKeywords,\n          keywords: editableKeywords.split(\",\"),\n          type: typo,\n          ruleId: ruleId,\n          areaId: parseInt(selectedArea.value),\n          serviceId: parseInt(selectedService.value),\n          natureId: parseInt(selectedNature.value),\n        };\n        dispatch(saveRule(payload, recentlyCreated, emailState.reglas));\n        // console.log(ruleToSave);\n      },\n      id: 2,\n    },\n  ];\n\n  useEffect(() => {\n    // dispatch(getRulesByInboxId(inboxId));\n    dispatch(getNatures());\n    dispatch(getAreas());\n    dispatch(getServices(selectedArea.value));\n  }, [dispatch, selectedArea]);\n\n  useEffect(() => {\n    if (typo === \"NORMAL\") {\n      setShowOptions(true);\n    } else {\n      setShowOptions(false);\n    }\n  }, [typo]);\n\n  return (\n    <ReglaContainer>\n      <OptionsContainer absolute={true}>\n        {options.map((option) => {\n          const { Icon, id, action } = option;\n          return (\n            <OptionButton key={id} onClick={() => action()}>\n              <Icon size={15} />\n            </OptionButton>\n          );\n        })}\n      </OptionsContainer>\n      <ReglasInputField>\n        <label>Contiene Keywords:</label>\n        <div style={{ display: \"flex\", gap: \"20px\" }}>\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\n            {/*  */}\n            <CheckInput\n              checked={editableHasKeywords === true}\n              onClick={() => setHasKeywords(true)}\n            />\n            <label>Si</label>\n          </div>\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\n            <CheckInput\n              checked={editableHasKeywords === false}\n              onClick={() => setHasKeywords(false)}\n            />\n            <label>No</label>\n          </div>\n        </div>\n      </ReglasInputField>\n      {editableHasKeywords === true && (\n        <ReglasInputField>\n          <label>Keywords:</label>\n          <Input\n            onChange={(e) => {\n              setKeywords(e.target.value);\n            }}\n            value={editableKeywords}\n            height=\"55px\"\n            placeholder=\"Escriba aquí los keyword, separados por comas (,)\"\n          />\n        </ReglasInputField>\n      )}\n      <ReglasInputField>\n        <label>Tipo de solicitud:</label>\n        <div style={{ display: \"flex\", gap: \"20px\" }}>\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\n            <CheckInput\n              checked={typo === \"NORMAL\"}\n              onClick={() => setType(\"NORMAL\")}\n            />\n            <label>Parcial</label>\n          </div>\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\n            <CheckInput\n              checked={typo === \"COMPLETA\"}\n              onClick={() => setType(\"COMPLETA\")}\n            />\n            <label>Completa</label>\n          </div>\n        </div>\n      </ReglasInputField>\n      {showOptions && (\n        <PartialOptionsContainer>\n          <CustomSelect\n            onChange={(e) => setSelectedNature(e)}\n            value={selectedNature}\n            options={emailState.natures}\n            placeholder=\"Natures...\"\n          />\n          <CustomSelect\n            onChange={(e) => setSelectedAreas(e)}\n            value={selectedArea}\n            options={emailState.areas}\n            placeholder=\"Areas...\"\n          />\n          <CustomSelect\n            onChange={(e) => setSelectedService(e)}\n            value={selectedService}\n            options={emailState.services}\n            placeholder=\"Services...\"\n          />\n        </PartialOptionsContainer>\n      )}\n    </ReglaContainer>\n  );\n};\n","//styles\nimport {\n  EmailContainer,\n  OptionsContainer,\n  OptionButton,\n  EmailWrapper,\n  InputFields,\n  InputField,\n  Input,\n  InputShow,\n  LogsBtn,\n  ContentContainer,\n  ContentWrapper,\n  Reglas,\n} from \"./ServidoresDeCorreoElements\";\nimport { Button, ModalButtons } from \"../../ReusableStyles\";\n\n//widgets\nimport { Scrollbar } from \"../../widgets/ReactScrollbar\";\nimport { CustomSelect } from \"../../widgets/ReactSelect\";\nimport Switch from \"react-switch\";\nimport { Modal } from \"../../widgets/Popup\";\nimport { Loader } from \"../../widgets/Loader\";\n\n//svgs\nimport { Basura } from \"../../Svg/Basura\";\nimport { Guardar } from \"../../Svg/Guardar\";\nimport { Lapiz } from \"../../Svg/Lapiz\";\n\n//reducer\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  //   addEmailCount,\n  editEmailFields,\n  email,\n  getRulesByInboxId,\n  createInbox,\n  deleteInbox,\n  editInbox,\n  addRuleTempplate,\n  handleAlert,\n} from \"../../../store/modules/EmailStore\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Regla } from \"./regla\";\n\n/*\nEmail coponent which renders the following:\n    * Email ContentWrapper\n*/\nexport const NewEmail = (props) => {\n  const {\n    id,\n    emailText,\n    tipoDeServidor,\n    otherRoute,\n    port,\n    portNumber,\n    recentlyCreated,\n    password,\n  } = props.email;\n  const [edit, setEdit] = useState(false);\n  const emailState = useSelector(email);\n  const dispatch = useDispatch();\n  const wrapperRef = useRef(null);\n  // for rules modal\n  const [openModal, setOpenModal] = useState(false);\n  // for delete modal\n  const [deleteModal, setDeleteModal] = useState(false);\n  // for saving modal\n  const [saveModal, setSaveModal] = useState(false);\n\n  // inital rendered info\n  const [editedEmail, setEditedEmail] = useState(emailText);\n  const [serverType, setServerType] = useState(tipoDeServidor);\n  const [isSllOn, setIsSslOn] = useState(port);\n  const [puerto, setPuerto] = useState(portNumber);\n  const [showOthers, setShowOthers] = useState(\n    tipoDeServidor.label === \"Otro\" ? true : false\n  );\n  const [serverRoute, setServerRoute] = useState(otherRoute);\n  const [editablePassword, setPassword] = useState(password);\n\n  const options = [\n    {\n      Icon: Lapiz,\n      action: () => {\n        setEdit(!edit);\n      },\n      id: 0,\n      show: !edit && true,\n    },\n    {\n      Icon: Basura,\n      action: () => {\n        setDeleteModal(true);\n      },\n      id: 1,\n      show: true,\n    },\n    {\n      Icon: Guardar,\n      action: () => {\n        setSaveModal(true);\n      },\n      id: 2,\n      show: edit && true,\n    },\n  ];\n\n  // toggles edit off when click outside of components\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setEdit(false);\n      }\n    };\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [wrapperRef, setEdit]);\n\n  const handleSwitch = () => {\n    if (edit) {\n      if (isSllOn) {\n        setIsSslOn(false);\n        setPuerto(557);\n      } else {\n        setIsSslOn(true);\n        setPuerto(993);\n      }\n    }\n  };\n\n  const handleServerChange = (e) => {\n    // console.log(e);\n    setServerType(e);\n    if (e.label === \"Otro\") {\n      setShowOthers(true);\n      setIsSslOn(false);\n      setServerRoute(e.value.server);\n      setPuerto(e.value.port);\n    } else {\n      setShowOthers(false);\n      setPuerto(e.value.port);\n      setServerRoute(e.value.server);\n    }\n  };\n\n  return (\n    <EmailContainer edit={edit} ref={wrapperRef}>\n      <Modal\n        active={deleteModal}\n        setModalActive={setDeleteModal}\n        height=\"200px\"\n      >\n        <ContentContainer spaceBetween>\n          <h4>\n            Esta seguro que quiere eliminar el correo{\" \"}\n            <span\n              style={{\n                color: \"#00B446\",\n              }}\n            >\n              {editedEmail !== \"\" ? editedEmail : `${id}`}\n            </span>\n            ?\n          </h4>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"8px\",\n            }}\n          >\n            <ModalButtons\n              onClick={() => {\n                setDeleteModal(false);\n              }}\n            >\n              Cancelar\n            </ModalButtons>\n            <ModalButtons\n              bg=\"#f1c40f\"\n              onClick={() => {\n                if (id > 60000) {\n                  const newEmailList = emailState.emailsList.filter(\n                    (item) => item.id !== id\n                  );\n                  dispatch(editEmailFields(newEmailList));\n                } else {\n                  dispatch(deleteInbox(id, emailState.emailsList));\n                }\n                setDeleteModal(false);\n              }}\n            >\n              Eliminar\n            </ModalButtons>\n          </div>\n        </ContentContainer>\n      </Modal>\n      <Modal active={saveModal} setModalActive={setSaveModal} height=\"200px\">\n        <ContentContainer spaceBetween>\n          <h4>\n            Esta seguro que quiere guargar el correo{\" \"}\n            <span\n              style={{\n                color: \"#00B446\",\n              }}\n            >\n              {editedEmail !== \"\" ? editedEmail : `${id}`}\n            </span>\n            ?\n          </h4>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"8px\",\n            }}\n          >\n            <ModalButtons\n              onClick={() => {\n                setSaveModal(false);\n              }}\n            >\n              Cancelar\n            </ModalButtons>\n            <ModalButtons\n              bg=\"#00B446\"\n              onClick={() => {\n                if (edit && !recentlyCreated) {\n                  setServerType({\n                    label: serverType.label,\n                    value: {\n                      ...serverType.value,\n                      port: puerto,\n                      server: serverRoute,\n                    },\n                  });\n                  let editedInbox = {\n                    id: id,\n                    emailText: editedEmail,\n                    password: editablePassword,\n                    otherRoute: serverRoute,\n                    portNumber: puerto,\n                    tipoDeServidor: serverType,\n                  };\n                  dispatch(\n                    editInbox(\n                      editedInbox,\n                      emailState.clientSettings.id,\n                      emailState.emailsList\n                    )\n                  );\n                  setEdit(false);\n                } else if (recentlyCreated) {\n                  let newInbox = {\n                    clientId: emailState.clientSettings.id,\n                    username: editedEmail,\n                    password: editablePassword,\n                    port: puerto,\n                    serverType: serverType,\n                    server: serverRoute,\n                  };\n                  dispatch(\n                    createInbox(id, newInbox, emailState.clientSettings.id)\n                  );\n                  setEdit(false);\n                }\n                setSaveModal(false);\n              }}\n            >\n              {recentlyCreated ? `Crear` : `Guardar`}\n            </ModalButtons>\n          </div>\n        </ContentContainer>\n      </Modal>\n      <Modal active={openModal} setModalActive={setOpenModal}>\n        <ContentContainer>\n          {emailState.loading.loadingRules ? (\n            <Loader mTop=\"250px\" />\n          ) : (\n            <Scrollbar height=\"100%\">\n              <ContentWrapper>\n                <h4 style={{ textAlign: \"center\", textJustify: \"center\" }}>\n                  Estás son las{\" \"}\n                  <span\n                    style={{\n                      color: \"#00B446\",\n                    }}\n                  >\n                    reglas\n                  </span>{\" \"}\n                  del correo{\" \"}\n                  <span\n                    style={{\n                      color: \"#00B446\",\n                    }}\n                  >\n                    {editedEmail}\n                  </span>{\" \"}\n                </h4>\n                <p style={{ fontSize: \"14px\" }}>\n                  visualizando todas tus reglas para el correo dado.\n                </p>\n                <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n                  <Button\n                    bg=\"#00B446\"\n                    onClick={() => {\n                      dispatch(addRuleTempplate(id));\n                    }}\n                  >\n                    Agregar Regla\n                  </Button>\n                </div>\n                <Reglas>\n                  {emailState.reglas.map((item, index) => {\n                    return <Regla key={index} features={item} inboxId={id} />;\n                  })}\n                </Reglas>\n              </ContentWrapper>\n            </Scrollbar>\n          )}\n        </ContentContainer>\n      </Modal>\n      <Modal\n        alert=\"true\"\n        active={emailState.alert.isOpen}\n        // setModalActive={setDeleteModal}\n        height=\"200px\"\n        width=\"500px\"\n      >\n        <ContentContainer spaceBetween>\n          <h4>{emailState.alert.content}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <ModalButtons\n              bg=\"#00B446\"\n              onClick={() => {\n                dispatch(handleAlert({ isOpen: false, content: \"\" }));\n              }}\n            >\n              Entendido\n            </ModalButtons>\n          </div>\n        </ContentContainer>\n      </Modal>\n      <OptionsContainer>\n        {options.map((option) => {\n          const { Icon, id, action, show } = option;\n          return (\n            show && (\n              <OptionButton key={id} onClick={() => action()}>\n                <Icon size={15} />\n              </OptionButton>\n            )\n          );\n        })}\n      </OptionsContainer>\n      <EmailWrapper>\n        <InputFields>\n          <InputField>\n            <label>Correo:</label>\n            {edit ? (\n              <Input\n                placeholder=\"example@gmail.com\"\n                value={editedEmail}\n                onChange={(e) => setEditedEmail(e.target.value)}\n              />\n            ) : (\n              <InputShow>\n                <p>{editedEmail}</p>\n              </InputShow>\n            )}\n            <LogsBtn\n              to=\"#\"\n              onClick={() => {\n                dispatch(\n                  getRulesByInboxId(\n                    id,\n                    emailState.natures,\n                    emailState.areas,\n                    emailState.services\n                  )\n                );\n                setOpenModal(!openModal);\n              }}\n            >\n              Ver Reglas\n            </LogsBtn>\n          </InputField>\n        </InputFields>\n        <InputFields>\n          <InputField>\n            <label>Tipo de servidor:</label>\n            {edit ? (\n              <CustomSelect\n                value={serverType}\n                onChange={(e) => handleServerChange(e)}\n                placeholder=\"Selecciona el tipo de servidor...\"\n                options={emailState.serversList}\n              />\n            ) : (\n              <InputShow>\n                <p>{serverType.label}</p>\n              </InputShow>\n            )}\n          </InputField>\n          {showOthers && (\n            <InputField>\n              <label>Ruta del servidor:</label>\n              {edit ? (\n                <Input\n                  placeholder=\"ingrese la ruta del servidor\"\n                  value={serverRoute}\n                  onChange={(e) => setServerRoute(e.target.value)}\n                />\n              ) : (\n                <InputShow>\n                  <p>{serverRoute}</p>\n                </InputShow>\n              )}\n            </InputField>\n          )}\n          <InputField>\n            <label>Contraseña:</label>\n            {edit ? (\n              <Input\n                type=\"password\"\n                placeholder=\"ingrese su contraseña\"\n                value={editablePassword}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            ) : (\n              <InputShow>\n                <p>{editablePassword !== \"\" ? \"*******\" : \"\"}</p>\n              </InputShow>\n            )}\n          </InputField>\n          <InputField>\n            {showOthers ? <label>Puerto:</label> : <label>SSL:</label>}\n            {!showOthers && edit ? (\n              <Switch\n                checked={isSllOn}\n                onChange={() => handleSwitch()}\n                checkedIcon={false}\n                uncheckedIcon={false}\n                onColor=\"#645ABE\"\n                size=\"14px\"\n              />\n            ) : showOthers && edit ? (\n              <Input\n                placeholder=\"ingrese el puerto\"\n                value={puerto}\n                onChange={(e) => {\n                  setPuerto(e.target.value);\n                }}\n              />\n            ) : (\n              <InputShow>\n                <p>{puerto}</p>\n              </InputShow>\n            )}\n          </InputField>\n        </InputFields>\n      </EmailWrapper>\n    </EmailContainer>\n  );\n};\n","//styles\nimport {\n  Tab1Container,\n  ConfigurationsContainer,\n  EmailsContainer,\n  LogsBtn,\n  ContentContainer,\n  ContentWrapper,\n  Logs,\n} from \"./ServidoresDeCorreoElements\";\nimport { Button, ModalButtons } from \"../../ReusableStyles\";\n\n//widgets\nimport { Scrollbar } from \"../../widgets/ReactScrollbar\";\nimport { Modal } from \"../../widgets/Popup\";\nimport { Loader } from \"../../widgets/Loader\";\n\n//reducer\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  email,\n  getNatures,\n  getAreas,\n  getServices,\n  getInboxesByClientId,\n  getLogsByClientId,\n  addEmailTemplate,\n  handleAlert,\n} from \"../../../store/modules/EmailStore\";\nimport { useEffect, useState } from \"react\";\nimport { user } from \"../../../store/modules/UserStore\";\n\n//components\nimport { Log } from \"./Log\";\nimport { NewEmail } from \"./newEmail\";\n\n// import { useState } from \"react\";\n\n/*\nMain rendered coponent which renders the following:\n    * NewEmail: React.FC\n*/\nconst ServidoresDeCorreo = () => {\n  const emailState = useSelector(email);\n  const userDetails = useSelector(user);\n  const dispatch = useDispatch();\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    dispatch(getInboxesByClientId(emailState.clientSettings.id));\n    dispatch(getLogsByClientId(emailState.clientSettings.id));\n    dispatch(getNatures());\n    dispatch(getAreas());\n    dispatch(getServices());\n  }, [dispatch, userDetails.username, emailState.clientSettings.id]);\n\n  const logsReversed = [...emailState.logs];\n\n  return (\n    <Tab1Container>\n      <h6>Configuración de uso:</h6>\n      <Modal active={openModal} setModalActive={setOpenModal}>\n        <ContentContainer>\n          <Scrollbar height=\"100%\">\n            <ContentWrapper>\n              <h4 style={{ textAlign: \"center\", textJustify: \"center\" }}>\n                Estos son los{\" \"}\n                <span\n                  style={{\n                    color: \"#00B446\",\n                  }}\n                >\n                  logs\n                </span>{\" \"}\n                de tu MailService\n              </h4>\n              <p style={{ fontSize: \"14px\" }}>\n                visualizando todos los registros de tu consola de mailservice\n              </p>\n              <Logs>\n                {logsReversed.reverse().map((item, index) => {\n                  return <Log key={index} features={item} />;\n                })}\n              </Logs>\n            </ContentWrapper>\n          </Scrollbar>\n        </ContentContainer>\n      </Modal>\n      <Modal\n        alert=\"true\"\n        active={emailState.alert.isOpen}\n        // setModalActive={setDeleteModal}\n        height=\"200px\"\n        width=\"500px\"\n      >\n        <ContentContainer spaceBetween>\n          <h4>{emailState.alert.content}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <ModalButtons\n              bg=\"#00B446\"\n              onClick={() => {\n                dispatch(handleAlert({ isOpen: false, content: \"\" }));\n              }}\n            >\n              Entendido\n            </ModalButtons>\n          </div>\n        </ContentContainer>\n      </Modal>\n      <LogsBtn absolute=\"true\" to=\"#\" onClick={() => setOpenModal(!openModal)}>\n        Ver Logs\n      </LogsBtn>\n      <ConfigurationsContainer>\n        {emailState.loading.loadingInboxes ? (\n          <Loader />\n        ) : (\n          <Scrollbar height=\"100%\">\n            <EmailsContainer>\n              {emailState.emailsList.map((email) => {\n                //   console.log(email);\n                return <NewEmail key={email.id} email={email} />;\n              })}\n            </EmailsContainer>\n          </Scrollbar>\n        )}\n        <div>\n          <Button\n            marginTop=\"10px\"\n            onClick={() => {\n              if (\n                emailState.emailsList.length <\n                emailState.clientSettings.maxInboxLength\n              ) {\n                dispatch(addEmailTemplate());\n              } else {\n                dispatch(\n                  handleAlert({\n                    isOpen: true,\n                    content: `Ha llegado al limite de buzones creados: ${emailState.clientSettings.maxInboxLength}`,\n                  })\n                );\n              }\n            }}\n          >\n            Agregar Correo\n          </Button>\n        </div>\n      </ConfigurationsContainer>\n      {/* {emailState.tooManyEmailsAlert && <h1>Too many emails</h1>} */}\n    </Tab1Container>\n  );\n};\n\nexport default ServidoresDeCorreo;\n","import { useEffect, useState } from \"react\";\n\n//styles for this page\nimport {\n  MainPageContainer,\n  MainDiv,\n  TabButtons,\n  TabButton,\n} from \"./MainPageStyles\";\n\n// components to import\nimport Tab1 from \"../../components/MainPageComponents/ServidoresDeCorreo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { user } from \"../../store/modules/UserStore\";\nimport { getClientSettings } from \"../../store/modules/EmailStore\";\n// import { useLocation } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport const ServidoresDeCorreo = (props: any) => {\n  const { cliCod } = props;\n  const [tab, setTab] = useState(0);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(user);\n\n  useEffect(() => {\n    dispatch(getClientSettings(userDetails.username, cliCod));\n    console.log(cliCod);\n  }, [dispatch, userDetails.username, cliCod]);\n\n  return (\n    <MainPageContainer>\n      <TabButtons>\n        <TabButton\n          isActive={tab === 0}\n          onClick={() => {\n            setTab(0);\n          }}\n        >\n          Servidores de correo\n        </TabButton>\n        <TabButton isActive={tab === 1}></TabButton>\n        <TabButton isActive={tab === 2}></TabButton>\n        <TabButton isActive={tab === 3}></TabButton>\n      </TabButtons>\n      <MainDiv>{tab === 0 && <Tab1 />}</MainDiv>\n      <ToastContainer\n        position=\"bottom-left\"\n        autoClose={3500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        style={{ display: \"none\" }}\n      />\n      <ToastContainer />\n    </MainPageContainer>\n  );\n};\n","import { Redirect, Route, useLocation } from \"react-router\";\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  authenticationPath,\n  ...routeProps\n}: ProtectedRouteProps) => {\n  const { pathname, search } = useLocation();\n  if (isAuthenticated) {\n    return <Route {...routeProps} />;\n  } else {\n    return <Redirect to={`?redirect=${pathname}${search}`} />;\n  }\n};\n\nexport default PrivateRoute;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserLogin } from \"./../../interfaces/UserLogin\";\nimport API from \"./../../services/API\";\nimport { TokenService } from \"./../../services/LocalStorage\";\nimport { RootState } from \"./../store\";\n\ninterface AlertType {\n  isOpen: boolean;\n  content: string;\n}\n\ninterface IAuth {\n  token: string;\n  error: string;\n  count: number;\n  alert: AlertType;\n  tokenValid: boolean;\n}\n\nconst initialState: IAuth = {\n  token: \"-1\",\n  error: \"\",\n  count: 0,\n  alert: { isOpen: false, content: \"\" },\n  tokenValid: false,\n};\n\nexport const AuthStore = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action: PayloadAction<string>) => {\n      state.token = action.payload;\n    },\n    logoutSuccess: (state) => {\n      state.token = \"-1\";\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n    increaseCounter: (state) => {\n      state.count = state.count + 1;\n    },\n    resetCounter: (state) => {\n      state.count = 0;\n    },\n    setAlert: (state, action: PayloadAction<AlertType>) => {\n      state.alert = action.payload;\n    },\n    setTokenChecked: (state, action: PayloadAction<boolean>) => {\n      state.tokenValid = action.payload;\n    },\n  },\n});\n\nexport const {\n  loginSuccess,\n  logoutSuccess,\n  setError,\n  increaseCounter,\n  resetCounter,\n  setAlert,\n  setTokenChecked,\n} = AuthStore.actions;\n\nexport const selectUser = (state: RootState) => state.auth;\n\nexport const handleAlert = (payload: AlertType) => (dispatch: any) => {\n  dispatch(setAlert(payload));\n};\n\nexport const login = (user: UserLogin) => async (dispatch: any) => {\n  try {\n    // const res = await api.post('/api/auth/login/', { username, password })\n    API()\n      .post(`security/gettoken`, user)\n      .then((response) => {\n        let data = response.data;\n        if (data.Status === \"Fail\") {\n          dispatch(setError(\"error\"));\n          dispatch(increaseCounter());\n        } else {\n          dispatch(resetCounter());\n          TokenService.set(data.Token);\n          dispatch(setError(\"\"));\n          dispatch(loginSuccess(data.Token));\n        }\n      });\n  } catch (e) {\n    dispatch(setError(\"error\"));\n    return console.error(e.message);\n  }\n};\n\nexport const setToken = (token: any) => (dispatch: any) => {\n  if (token) {\n    TokenService.set(token);\n    dispatch(loginSuccess(token));\n  } else {\n    dispatch(setAlert({ isOpen: true, content: \"Se requiere un token!\" }));\n  }\n};\n\nexport const checkToken = (token: any) => async (dispatch: any) => {\n  try {\n    // const res = await api.post('/api/auth/login/', { username, password })\n    API()\n      .get(`security/checktoken?token=${token}`)\n      .then((response) => {\n        let data = response.data;\n        if (data.Status === \"Ok\") {\n          dispatch(setTokenChecked(true));\n        } else if (token && data.Status !== \"Ok\") {\n          dispatch(setAlert({ isOpen: true, content: \"Token no valido!\" }));\n          dispatch(setTokenChecked(false));\n        }\n      });\n  } catch (e) {\n    dispatch(setError(\"error\"));\n    return console.error(e.message);\n  }\n};\n\nexport const logout = () => async (dispatch: any) => {\n  try {\n    TokenService.remove();\n    dispatch(setError(\"\"));\n    return dispatch(logoutSuccess());\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const auth = (state: RootState) => state.auth;\n\nexport default AuthStore.reducer;\n","import React, { useEffect } from \"react\";\n\n// for in app routing (single page application)\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Redirect,\n  Route,\n  //   Redirect,\n  //   Route,\n  //   Route,\n  //   Redirect,\n  Switch,\n  //   useParams,\n} from \"react-router-dom\";\n\n// Styled components\nimport {\n  AppContainer,\n  AppInnerContainer,\n} from \"./components/AppContainerComponents/AppContainerElements\";\n\n// components\nimport { Navbar } from \"./components/NavbarComponents/Navbar\";\nimport { Footer } from \"./components/FooterComponents/Footer\";\n\n//pages\nimport { ServidoresDeCorreo } from \"./pages/MainPage\";\n\n// Widgets\nimport { Scrollbar } from \"./components/widgets/ReactScrollbar\";\n\n// Private Routes\nimport PrivateRoute from \"./components/Routes/PrivateRoutes\";\n\nimport { TokenService } from \"./services/LocalStorage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  auth,\n  checkToken,\n  handleAlert,\n  selectUser,\n  setToken,\n} from \"./store/modules/AuthStore\";\n// import { Login } from \"./pages/LoginPage\";\nimport { getUserDetails } from \"./store/modules/UserStore\";\nimport { Modal } from \"./components/widgets/Popup\";\nimport { ContentContainer } from \"./components/MainPageComponents/ServidoresDeCorreo/ServidoresDeCorreoElements\";\nimport { ModalButtons } from \"./components/ReusableStyles\";\n\n// function useQuery() {\n//   return new URLSearchParams(useLocation().search);\n// }\n\nconst App: React.FC = () => {\n  //   let query = useQuery();\n  //   const token = query.get(\"token\");\n  const urlParams = new URLSearchParams(window.location.search);\n  const token = urlParams.get(\"token\");\n  const cliCod = urlParams.get(\"cliCod\");\n\n  //   console.log(token);\n\n  // declaring a user which is coming from store\n  const user = useSelector(selectUser);\n  const authState = useSelector(auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkToken(token));\n    dispatch(setToken(token));\n    dispatch(getUserDetails(token));\n  }, [dispatch, token]);\n\n  // initialize this variable as false\n  let isAuthenticated = false;\n\n  // if the token in the local strorage exist and it is not an empty string, then authorize user\n  if (TokenService.get() !== \"\") isAuthenticated = true;\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated,\n    authenticationPath: \"/\",\n    redirectPath: \"/\",\n    setRedirectPath: \"/\",\n  };\n\n  const NoToken = () => {\n    return (\n      <Modal\n        alert=\"true\"\n        active={authState.alert.isOpen}\n        // setModalActive={setDeleteModal}\n        height=\"200px\"\n        width=\"500px\"\n      >\n        <ContentContainer spaceBetween>\n          <h4>{authState.alert.content}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <ModalButtons\n              bg=\"#00B446\"\n              onClick={() => {\n                dispatch(handleAlert({ isOpen: false, content: \"\" }));\n              }}\n            >\n              Entendido\n            </ModalButtons>\n          </div>\n        </ContentContainer>\n      </Modal>\n    );\n  };\n\n  const Default = () => {\n    return (\n      <Router basename=\"/mailservice\">\n        <Switch>\n          <Route\n            {...defaultProtectedRouteProps}\n            path=\"/\"\n            exact\n            component={NoToken}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    );\n  };\n\n  const Dashboard = () => {\n    return (\n      <AppContainer>\n        <HashRouter basename=\"/mailservice\">\n          <Navbar />\n          <AppInnerContainer>\n            <Scrollbar height=\"100%\">\n              <Switch>\n                <PrivateRoute\n                  {...defaultProtectedRouteProps}\n                  path={`/`}\n                  //   path=\"/\"\n                  exact\n                  //   component={}\n                >\n                  <ServidoresDeCorreo cliCod={cliCod} />\n                </PrivateRoute>\n                {/* <Route component={NotFoundPage} /> */}\n              </Switch>\n            </Scrollbar>\n          </AppInnerContainer>\n          <Footer />\n        </HashRouter>\n      </AppContainer>\n    );\n  };\n\n  return (\n    <> {user.error === \"\" && user.tokenValid ? <Dashboard /> : <Default />} </>\n  );\n};\n\nexport default App;\n","import React, { useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  //   const notify = (message) => {\n  //     toast(message, {\n  //       position: \"top-right\",\n  //       autoClose: 3500,\n  //       hideProgressBar: false,\n  //       closeOnClick: true,\n  //       pauseOnHover: true,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //   };\n\n  return <AppContext.Provider value={{}}>{children}</AppContext.Provider>;\n};\n\n// custom hook\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider };\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport API from \"../../services/API\";\nimport { TokenService } from \"../../services/LocalStorage\";\nimport { RootState } from \"../store\";\n// import { getCIs } from \"./CIStore\";\nimport { getAssetsByRequest, getFilesByRequest } from \"./RequestStore\";\n\ninterface Rule {\n  ruleID: string;\n  ruleName: string;\n}\n\ninterface RuleState {\n  list: Rule[];\n  requestID: string;\n  mode: number; // 0: Mostrar relgas, 1: se encontra una regla y se creo la solicitud, 2: listado de reglas, 3:No se encontraron reglas\n}\n\nconst initialState: RuleState = {\n  list: [],\n  requestID: \"\",\n  mode: 0,\n};\n\nexport const RuleStore = createSlice({\n  name: \"Rule\",\n  initialState,\n  reducers: {\n    setRule: (state, action: PayloadAction<Rule[]>) => {\n      // state = action.payload\n      // return [...state.list, ...action.payload.list]\n      state.list = action.payload;\n    },\n    clearRules: (state) => {\n      state.list = [];\n    },\n    setRequestID: (state, action: PayloadAction<string>) => {\n      state.requestID = action.payload;\n    },\n    setMode: (state, action: PayloadAction<number>) => {\n      state.mode = action.payload;\n    },\n  },\n});\n\nexport const getRules =\n  (\n    subject: string,\n    description: string,\n    username: string,\n    by: string,\n    companyid: string,\n    selectedUserComapnyid: string,\n    ci: string,\n    files?: any,\n    email?: string,\n    telefono?: string,\n    extension?: string,\n    locationSelected?: string,\n    departmentSelected?: string\n  ) =>\n  async (dispatch: any) => {\n    try {\n      API()\n        .post(`Rules/getRule`, {\n          token: TokenService.get(),\n          OnBehalfTo: by,\n          Description: description,\n          Subject: subject,\n          ThroughOf: 1,\n          email: email,\n          telefono: telefono,\n          extension: extension,\n          locationSelected: locationSelected,\n          departmentSelected: departmentSelected,\n        })\n        .then((response) => {\n          const data: Rule[] = [];\n\n          if (response.data.Values.Values === \"[]\") {\n            // SE CREO\n            dispatch(setMode(1));\n            console.log(\"se encontra una regla y se creo la solicitud\");\n            if (by === username || companyid === selectedUserComapnyid)\n              dispatch(setRequestID(response.data.Values.RequestID));\n            else dispatch(setRequestID(\"-1\"));\n            if (ci) {\n              if (ci !== \"none\")\n                dispatch(associateCI(ci, response.data.Values.RequestID));\n            }\n            if (files) {\n              files.map((file: File) => {\n                dispatch(uploadFile(response.data.Values.RequestID, file));\n                return null;\n              });\n            }\n          } else if (response.data.Values.Values.length > 0) {\n            // PARA ESCOGER\n            dispatch(setMode(2));\n            console.log(\"listado de reglas\");\n\n            response.data.Values.Values.forEach((RuleItem: any) => {\n              data.push({\n                ruleID: RuleItem.ReglaID,\n                ruleName: RuleItem.ReglaNom,\n              });\n            });\n          } else {\n            // CRREAR CON METODO 2\n            dispatch(setMode(3));\n            console.log(\"No se encontraron reglas\");\n          }\n          dispatch(setRule(data));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const sendRuleRequest =\n  (\n    subject: string,\n    description: string,\n    ruleID: string,\n    username: string,\n    by: string,\n    companyid: string,\n    selectedUserComapnyid: string,\n    ci?: string,\n    files?: any,\n    email?: string,\n    telefono?: string,\n    extension?: string,\n    locationSelected?: string,\n    departmentSelected?: string\n  ) =>\n  async (dispatch: any) => {\n    try {\n      API()\n        .post(`Rules/getRule`, {\n          token: TokenService.get(),\n          OnBehalfTo: by,\n          Description: description,\n          Subject: subject,\n          ThroughOf: 1,\n          ReglaID: ruleID,\n          email: email,\n          telefono: telefono,\n          extension: extension,\n          locationSelected: locationSelected,\n          departmentSelected: departmentSelected,\n        })\n        .then((response) => {\n          if (by === username || companyid === selectedUserComapnyid)\n            dispatch(setRequestID(response.data.Values.RequestID));\n          else dispatch(setRequestID(\"-1\"));\n          if (ci) {\n            if (ci !== \"none\")\n              dispatch(associateCI(ci, response.data.Values.RequestID));\n          }\n\n          if (files) {\n            files.map((file: File) => {\n              dispatch(uploadFile(response.data.Values.RequestID, file));\n              return null;\n            });\n          }\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const createSimpleRequest =\n  (\n    subject: string,\n    description: string,\n    username: string,\n    by: string,\n    companyid: string,\n    selectedUserComapnyid: string,\n    serviceID: string,\n    ci?: string,\n    files?: any,\n    email?: string,\n    telefono?: string,\n    extension?: string,\n    locationSelected?: string,\n    departmentSelected?: string\n  ) =>\n  async (dispatch: any) => {\n    try {\n      API()\n        .post(`services/createrequest`, {\n          token: TokenService.get(),\n          OnBehalfTo: by,\n          Description: description,\n          Subject: subject,\n          Nature: 4,\n          ServiceID: serviceID,\n          ThroughOf: 1,\n          email: email,\n          telefono: telefono,\n          extension: extension,\n          locationSelected: locationSelected,\n          departmentSelected: departmentSelected,\n        })\n        .then((response) => {\n          if (by === username)\n            dispatch(setRequestID(response.data.Values.RequestID));\n          else if (by !== username) {\n            dispatch(setRequestID(\"\"));\n          } else dispatch(setRequestID(\"-1\"));\n          //   dispatch(setRequestID(response.data.Values.RequestID));\n\n          if (ci) {\n            if (ci !== \"none\")\n              dispatch(associateCI(ci, response.data.Values.RequestID));\n          }\n\n          if (files) {\n            files.map((file: File) => {\n              dispatch(uploadFile(response.data.Values.RequestID, file));\n              return null;\n            });\n          }\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const associateCI =\n  (ci: string, requestID: string) => async (dispatch: any) => {\n    try {\n      API()\n        .post(`assets/AssociateCIToRequest`, {\n          token: TokenService.get(),\n          requestID: requestID,\n          ciList: [\n            {\n              CIID: ci,\n              CIName: \"\",\n              Impact: \"\",\n            },\n          ],\n        })\n        .then((response) => {\n          console.log(\"Status:\", response.data.Status);\n          dispatch(getAssetsByRequest(requestID));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const removeCI =\n  (ci: string, requestID: string) => async (dispatch: any) => {\n    try {\n      API()\n        .post(`assets/RemoveCIFromRequest`, {\n          token: TokenService.get(),\n          requestID: requestID,\n          ciID: ci,\n        })\n        .then((response) => {\n          console.log(\"Status:\", response.data.Status);\n          dispatch(getAssetsByRequest(requestID));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const uploadFile =\n  (requestID: string, file: File) => async (dispatch: any) => {\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"files\", file);\n    return await API()\n      .post(`File/PostFile`, bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        dispatch(appendFile(requestID, file, response.data.guid));\n      })\n      .catch((e) => {\n        return console.error(e.message);\n      });\n  };\n\nexport const appendFile =\n  (requestID: string, file: File, guid: string) => async (dispatch: any) => {\n    try {\n      API()\n        .post(`File/UploadFileServiceRequestAsync`, {\n          token: TokenService.get(),\n          RequestID: requestID,\n          files: [\n            {\n              fileName: file.name,\n              mimeType: file.type,\n              fileCreatedTime: new Date(),\n              fileLength: file.size,\n              guid: guid,\n            },\n          ],\n        })\n        .then((response) => {\n          console.log(\"File Status:\", response.data);\n          dispatch(getFilesByRequest(requestID));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const removeFile =\n  (attachmentID: string, requestID: string) => async (dispatch: any) => {\n    try {\n      API()\n        .post(`file/DeleteAttachment`, {\n          attachmentID: attachmentID,\n          token: TokenService.get(),\n        })\n        .then((response) => {\n          console.log(\"Status:\", response.data.Status);\n          dispatch(getFilesByRequest(requestID));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const setRules = () => async (dispatch: any) => {\n  dispatch(clearRules());\n};\n\nexport const { setRule, clearRules, setRequestID, setMode } = RuleStore.actions;\nexport const rule = (state: RootState) => state.rule;\nexport default RuleStore.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport API from \"../../services/API\";\nimport { TokenService } from \"../../services/LocalStorage\";\nimport { RootState } from \"../store\";\nimport { setRequestID } from \"./RuleStore\";\n\nexport interface ISelect {\n  value: string;\n  label: string;\n}\n\ninterface Asset {\n  CIID: string;\n  CIName: string;\n  Department: string;\n  Impact: string;\n  Location: string;\n  UsedBy: string;\n}\n\nexport interface AutofillDataType {\n  UserLocationText?: string;\n  UserLocationValue?: string;\n  UserMail?: string;\n  UserTelephone?: string;\n  UserExtension?: string;\n  UserDepartmentText?: string;\n  UserDepartmentValue?: string;\n}\n\ninterface Users {\n  AuthUserID: string;\n  CardID: string;\n  Cellphone: string;\n  CityID: string;\n  CityName: string;\n  CompanyID: string;\n  CompanyName: string;\n  CostCenterID: string;\n  CostCenterName: string;\n  CountryID: string;\n  CountryName: string;\n  DepartmentID: string;\n  DepartmentName: string;\n  DynamicSQL: string;\n  Email: string;\n  Extention: string;\n  ExternalUser: string;\n  Gender: string;\n  HourCost: string;\n  HoursMonth: string;\n  IsSuperUser: string;\n  IsVIP: string;\n  LastName: string;\n  LevelID: string;\n  LocationID: string;\n  LocationName: string;\n  Name: string;\n  Office: string;\n  Phone: string;\n  Phone2: string;\n  PicturePath: string;\n  PositionID: string;\n  PositionName: string;\n  StateID: string;\n  StateName: string;\n  StatusID: string;\n  StatusName: string;\n  TimeID: string;\n  UpdatedOn: string;\n  Username: string;\n}\n\ninterface WorkOrder {\n  ID?: string;\n  ServiceOrderID?: string;\n  Description?: string;\n  Percentage?: string;\n  TechnicianID?: string;\n  StatusID?: string;\n  StatusDescription?: string;\n  TechnicianName?: string;\n  TechnicianIsVIP?: string;\n  IsPredecessor?: string;\n  UserImage?: string;\n  Advances: OrderAdvancement[];\n}\n\nexport interface Request {\n  requestId?: string;\n  statusName?: string;\n  closeDate?: string;\n  creationDate?: string;\n  description?: string;\n  equipmentName?: string;\n  errorTypeID?: string;\n  errorTypeName?: string;\n  expirationDate?: string;\n  filingDate?: string;\n  majorIncident?: string;\n  natureCod?: string;\n  natureID?: string;\n  natureName?: string;\n  onBehalfOfID?: string;\n  onBehalfOfName?: string;\n  priorityID?: string;\n  problemTypeID?: string;\n  problemTypeName?: string;\n  receivedByID?: string;\n  receivedByNames?: string;\n  receptionDate?: string;\n  reopenDate?: string;\n  requestID: string;\n  requestUserID?: string;\n  requestUserNames?: string;\n  statusID?: string;\n  subject: string;\n  surveyStatus?: string;\n  vipStatus?: string;\n  viaID?: string;\n  viaName?: string;\n  TechnicianName?: string;\n  TechnicianImg?: any;\n}\n\ninterface FullRequest {\n  RequestID?: string;\n  RequestUserID?: string;\n  RequestUserNames?: string;\n  RequestUserIsVIP?: string;\n  ReceivedByID?: string;\n  ReceivedByNames?: string;\n  ReceivedByIsVIP?: string;\n  ObBehalfOfID?: string;\n  OnBehalfOfName?: string;\n  ObBehalfOfEmail?: string;\n  ObBehalfOfIsVIP?: string;\n  CreationDate?: string;\n  Description?: string;\n  PriorityID?: string;\n  StatusID?: string;\n  StatusName?: string;\n  Subject?: string;\n  EquipmentName?: string;\n  CloseDate?: string;\n  ExpirationDate?: string;\n  SurveyStatus?: string;\n  FilingDate?: string;\n  NatureID?: string;\n  NatureName?: string;\n  MajorIncident?: string;\n  ReceptionDate?: string;\n  ReopenDate?: string;\n  VIPStatus?: string;\n  NatureCod?: string;\n  ViaID?: string;\n  ViaName?: string;\n  ProblemTypeID?: string;\n  ProblemTypeName?: string;\n  ErrorTypeID?: string;\n  ErrorTypeName?: string;\n  NatureTypeID?: string;\n  NatureTypeName?: string;\n  SLACode?: string;\n  SLAName?: string;\n  ObBehalfOfURLImage?: string;\n  ServiceOrder?: ServiceOrder;\n}\n\ninterface ServiceOrder {\n  ActivityID?: string;\n  ActivityName?: string;\n  AreaID?: string;\n  AreaName?: string;\n  AssignmentDate?: string;\n  CanBeReopened?: string;\n  CategoryID?: string;\n  CategoryName?: string;\n  CloseDate?: string;\n  Description?: string;\n  ID?: string;\n  ImpactID?: string;\n  IsAccessFull?: string;\n  PriorityID?: string;\n  RFCID?: string;\n  ServiceID?: string;\n  ServiceName?: string;\n  StatusID?: string;\n  StatusName?: string;\n  SurveyStatus?: string;\n  TechnicianID?: string;\n  TechnicianName?: string;\n  UrgencyID?: string;\n  WorkGroupID?: string;\n  WorkGroupName?: string;\n}\n\ninterface OrderAdvancement {\n  AdvancementID: string;\n  Description: string;\n  EndDate: string;\n  Environment: string;\n  Progress: string;\n  StartDate: string;\n  Via: string;\n  WorkOrderID: string;\n}\n\ninterface Note {\n  Description: string;\n  ID: string;\n  NoteDate: string;\n  NoteTypeID: string;\n  NoteTypeName: string;\n  RequestID: string;\n  UserID: string;\n  UserImage: string;\n  UserIsVIP: string;\n  UserName: string;\n}\n\ninterface FileAttach {\n  AttachmentID: string;\n  AttachmentPath: string;\n  FileName: string;\n  FileSize: string;\n  FileURL: string;\n}\n\ninterface RequestState {\n  list: Request[];\n  active: FullRequest;\n  filteredList: Request[];\n  pageData: Request[];\n  workOrders: WorkOrder[];\n  term: string;\n  selectedYears: number[];\n  selectedStatuses: number[];\n  advancements: OrderAdvancement[];\n  users: Users[];\n  filteredUsers: ISelect[];\n  createSuccess: boolean;\n  areas: ISelect[];\n  departments: ISelect[];\n  locations: ISelect[];\n  services: ISelect[];\n  assets: Asset[];\n  pagesTotal: number;\n  offset: number;\n  statuses: ISelect[];\n  years: ISelect[];\n  notesTypes: ISelect[];\n  notes: Note[];\n  page: number;\n  files: FileAttach[];\n  autofillData: AutofillDataType;\n  workOrderId: string;\n}\n\nconst initialState: RequestState = {\n  list: [],\n  active: {},\n  filteredList: [],\n  term: \"\",\n  advancements: [],\n  workOrders: [],\n  filteredUsers: [],\n  users: [],\n  createSuccess: false,\n  areas: [],\n  departments: [],\n  locations: [],\n  services: [],\n  assets: [],\n  pageData: [],\n  pagesTotal: 0,\n  offset: 0,\n  statuses: [],\n  years: [],\n  notesTypes: [],\n  notes: [],\n  selectedYears: [],\n  selectedStatuses: [],\n  page: 0,\n  files: [],\n  autofillData: {},\n  workOrderId: \"\",\n};\n\nexport const RequestStore = createSlice({\n  name: \"request\",\n  initialState,\n  reducers: {\n    setRequests: (state, action: PayloadAction<Request[]>) => {\n      state.list = action.payload.reverse();\n    },\n    setWorkOrders: (state, action: PayloadAction<WorkOrder[]>) => {\n      state.workOrders = action.payload;\n    },\n    setActiveRequest: (state, action: PayloadAction<FullRequest>) => {\n      state.active = action.payload;\n    },\n    setFilteredRequests: (state) => {\n      const listFiltered = state.list.filter((e) => {\n        return e.subject.toLowerCase().indexOf(state.term.toLowerCase()) !== -1;\n      });\n      state.filteredList = listFiltered;\n    },\n    setCurrentPageData: (state, action: PayloadAction<number>) => {\n      const newData = state.list.slice(action.payload, action.payload + 10);\n      state.pageData = newData;\n    },\n    setTerm: (state, action: PayloadAction<string>) => {\n      state.term = action.payload;\n    },\n    setSelectedYears: (state, action: PayloadAction<number[]>) => {\n      state.selectedYears = action.payload;\n    },\n    setSelectedStatuses: (state, action: PayloadAction<number[]>) => {\n      state.selectedStatuses = action.payload;\n    },\n    setAdvancements: (state, action: PayloadAction<OrderAdvancement[]>) => {\n      state.advancements = action.payload;\n    },\n    setFilteredUsers: (state, action: PayloadAction<ISelect[]>) => {\n      state.filteredUsers = action.payload;\n    },\n    setUsers: (state, action: PayloadAction<Users[]>) => {\n      state.users = action.payload;\n    },\n    createSuccess: (state, action: PayloadAction<boolean>) => {\n      state.createSuccess = action.payload;\n    },\n    setAreas: (state, action: PayloadAction<ISelect[]>) => {\n      state.areas = action.payload;\n    },\n    setDepartments: (state, action: PayloadAction<ISelect[]>) => {\n      state.departments = action.payload;\n    },\n    setLocations: (state, action: PayloadAction<ISelect[]>) => {\n      state.locations = action.payload;\n    },\n    setServices: (state, action: PayloadAction<ISelect[]>) => {\n      state.services = action.payload;\n    },\n    setAssets: (state, action: PayloadAction<Asset[]>) => {\n      state.assets = action.payload;\n    },\n    setTotalPages: (state, action: PayloadAction<number>) => {\n      state.pagesTotal = action.payload;\n    },\n    setStatuses: (state, action: PayloadAction<ISelect[]>) => {\n      state.statuses = action.payload;\n    },\n    setYears: (state, action: PayloadAction<ISelect[]>) => {\n      state.years = action.payload;\n    },\n    setNotesTypes: (state, action: PayloadAction<ISelect[]>) => {\n      state.notesTypes = action.payload;\n    },\n    setNotes: (state, action: PayloadAction<Note[]>) => {\n      state.notes = action.payload;\n    },\n    setPage: (state, action: PayloadAction<number>) => {\n      state.page = action.payload;\n    },\n    setFiles: (state, action: PayloadAction<FileAttach[]>) => {\n      state.files = action.payload;\n    },\n    setAutofillData: (state, action: PayloadAction<AutofillDataType>) => {\n      state.autofillData = action.payload;\n    },\n    setWorkOrderId: (state, action: PayloadAction<string>) => {\n      state.workOrderId = action.payload;\n    },\n    // setRequestID: (state, action: PayloadAction) => {\n\n    // }\n  },\n});\n\nexport const setAutofillRequestData = () => async (dispatch: any) => {\n  try {\n    API()\n      .get(`users/GetUserBasicInformation?token=${TokenService.get()}`)\n      .then((response) => {\n        let autofillData: AutofillDataType = {};\n        autofillData[\"UserLocationText\"] = response.data.Value.UserLocationText;\n        autofillData[\"UserLocationValue\"] =\n          response.data.Value.UserLocationValue;\n        autofillData[\"UserMail\"] = response.data.Value.UserMail;\n        autofillData[\"UserTelephone\"] = response.data.Value.UserTelephone;\n        autofillData[\"UserExtension\"] = response.data.Value.UserExtension;\n        autofillData[\"UserDepartmentText\"] =\n          response.data.Value.UserDepartmentText;\n        autofillData[\"UserDepartmentValue\"] =\n          response.data.Value.UserDepartmentValue;\n        dispatch(setAutofillData(autofillData));\n      });\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const getAreas = (username: string) => async (dispatch: any) => {\n  try {\n    API()\n      .get(`services/getareas?token=${TokenService.get()}&username=${username}`)\n      .then((response) => {\n        let areas: ISelect[] = [];\n        response.data.Values.forEach((e: any) => {\n          areas.push({ value: e.Value, label: e.Text });\n        });\n        dispatch(setAreas(areas));\n      });\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const rateRequest =\n  (\n    RequestCode: number,\n    isUseful: boolean,\n    hasComplaint: boolean,\n    observations: string\n  ) =>\n  async () => {\n    return await API()\n      .post(`knowledge/RateSurvey`, {\n        RequestCode: RequestCode,\n        isUseful: isUseful,\n        hasComplaint: hasComplaint,\n        observations: observations,\n        token: TokenService.get(),\n      })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\nexport const getServices =\n  (username: string, areaId: string) => async (dispatch: any) => {\n    try {\n      API()\n        .get(\n          `services/getservices?token=${TokenService.get()}&areaid=${areaId}&username=${username}`\n        )\n        .then((response) => {\n          let areas: ISelect[] = [];\n          response.data.Values.forEach((e: any) => {\n            areas.push({ value: e.Value, label: e.Text });\n          });\n          dispatch(setServices(areas));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const getStatuses = () => async (dispatch: any) => {\n  try {\n    API()\n      .get(`services/GetServiceOrderStatus?token=${TokenService.get()}`)\n      .then((response) => {\n        let areas: ISelect[] = [];\n        response.data.Values.forEach((e: any) => {\n          areas.push({ value: e.Value, label: e.Text });\n        });\n        dispatch(setStatuses(areas));\n      });\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const getNoteTypes = () => async (dispatch: any) => {\n  try {\n    API()\n      .get(`services/getnotetypes?token=${TokenService.get()}`)\n      .then((response) => {\n        let areas: ISelect[] = [];\n        response.data.Values.forEach((e: any) => {\n          areas.push({ value: e.Value, label: e.Text });\n        });\n        dispatch(setNotesTypes(areas));\n      });\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const getYears = (username: string) => async (dispatch: any) => {\n  try {\n    API()\n      .get(\n        `services/GetRequests?token=${TokenService.get()}&userSearched=${username}`\n      )\n      .then((response) => {\n        const dates: number[] = [];\n        response.data.Values.forEach((requestItem: any) => {\n          const date = new Date(requestItem.ReceptionDate);\n          dates.push(date.getFullYear());\n        });\n        let result = dates.filter((item, index) => {\n          return dates.indexOf(item) === index;\n        });\n        const datesSelect: ISelect[] = [];\n        result.sort().forEach((e) => {\n          datesSelect.push({ value: e.toString(), label: e.toString() });\n        });\n        dispatch(setYears(datesSelect));\n      });\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const getWorkerOrderID = async (RequestID: string) => {\n  return API()\n    .get(\n      `services/getrequestwithorder?token=${TokenService.get()}&requestid=${RequestID}`\n    )\n    .then((response) => {\n      return response.data.Values.ServiceOrder.ID;\n    })\n    .catch((e) => {\n      return e;\n    });\n};\n\nexport const getWorker = async (RequestID: string) => {\n  const workOderID = await getWorkerOrderID(RequestID);\n  return await API()\n    .get(\n      `services/getworkorders?token=${TokenService.get()}&serviceorderid=${workOderID}`\n    )\n    .then((res) => {\n      return res.data.Values.length > 0 ? res.data.Values[0].UserImage : \"\";\n    })\n    .catch((e) => {\n      return e;\n    });\n  //   try {\n  //     API()\n  //       .get(\n  //         `services/getworkorders?token=${TokenService.get()}&serviceorderid=${workOderID}`\n  //       )\n  //       .then((response) => {\n  //         // console.log(\n  //         //   typeof (response.data.Values.length > 0\n  //         //     ? response.data.Values[0].UserImage\n  //         //     : \"\")\n  //         // );\n  //         return response.data;\n  //       });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n};\n\nexport const getRequests =\n  (username: string, page?: number) => async (dispatch: any) => {\n    try {\n      await API()\n        .get(\n          `services/GetRequests?token=${TokenService.get()}&year=2021&serviceOrderStatusID=1,4,3&userSearched=${username}`\n        )\n        .then(async (response) => {\n          let data: Request[] = [];\n\n          data = await Promise.all(\n            response.data.Values.map(async (requestItem: any) => {\n              //   const image = await getWorker(requestItem.RequestID);\n              //   console.log(image);\n              let newItem = {\n                requestID: requestItem.RequestID,\n                subject: requestItem.Subject,\n                statusName: requestItem.StatusName,\n                receptionDate: requestItem.ReceptionDate,\n                viaName: requestItem.ViaName,\n                TechnicianName: requestItem.TechnicianName,\n                TechnicianImg: await getWorker(requestItem.RequestID),\n              };\n              return newItem;\n            })\n          );\n\n          dispatch(setRequests(data));\n          dispatch(setRequestID(\"\"));\n          let offset = 0;\n          if (page) offset = page;\n          dispatch(setTotalPages(data.length));\n          dispatch(setCurrentPageData(offset));\n          console.log(data);\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const getActiveRequest =\n  (requestId: string) => async (dispatch: any) => {\n    try {\n      API()\n        .get(\n          `services/getrequestwithorder?token=${TokenService.get()}&requestid=${requestId}`\n        )\n        .then((response) => {\n          dispatch(setActiveRequest(response.data.Values));\n          dispatch(getOrdersWorks(response.data.Values.ServiceOrder.ID));\n          dispatch(getFilesByRequest(requestId));\n          dispatch(getAssetsByRequest(requestId));\n          dispatch(getNoteTypes());\n          dispatch(getNotesByRequest(requestId));\n          dispatch(setRequestID(\"\"));\n          console.log(response);\n        });\n      return;\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const getOrdersWorks = (serviceID: number) => async (dispatch: any) => {\n  return await API()\n    .get(\n      `services/getworkorders?token=${TokenService.get()}&serviceorderid=${serviceID}`\n    )\n    .then(async (response) => {\n      let workOrders: any[] = [];\n      for (const element of response.data.Values) {\n        const workOrder: WorkOrder = { ...element, Advances: [] };\n        const workOderID = workOrder.ID;\n        const advances = await getOrderAdvancementsWork(\n          workOderID ? workOderID : \"0\"\n        );\n        workOrder.Advances = advances;\n        workOrders.push(workOrder);\n      }\n\n      dispatch(setWorkOrders(workOrders));\n    })\n    .catch((e) => {\n      return console.error(e.message);\n    });\n};\n\nexport const getOrderAdvancementsWork = async (workOrderId: string) => {\n  return API()\n    .get(\n      `services/getworkorderadvancements?token=${TokenService.get()}&workorderid=${workOrderId}`\n    )\n    .then((response) => {\n      return response.data.Values;\n    });\n};\n\nexport const getAssetsByRequest =\n  (requestId: string) => async (dispatch: any) => {\n    try {\n      API()\n        .get(\n          `assets/GetAssetsByRequest?token=${TokenService.get()}&requestid=${requestId}`\n        )\n        .then((response) => {\n          dispatch(setAssets(response.data.Values));\n          // dispatch(getFilesByRequest(requestId));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const getFilesByRequest =\n  (requestId: string) => async (dispatch: any) => {\n    try {\n      API()\n        .get(\n          `file/GetAttachmentsListRequest?token=${TokenService.get()}&requestid=${requestId}`\n        )\n        .then((response) => {\n          dispatch(setFiles(response.data.Values));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const getNotesByRequest =\n  (requestId: string) => async (dispatch: any) => {\n    return await API()\n      .get(\n        `services/getnotes?token=${TokenService.get()}&RequestID=${requestId}`\n      )\n      .then((response) => {\n        dispatch(setNotes(response.data.Values));\n      });\n  };\n\nexport const setCurrentData = (offset: number) => async (dispatch: any) => {\n  dispatch(setCurrentPageData(offset));\n};\n\nexport const createNote =\n  (requestID: string, text: string, noteType: string) =>\n  async (dispatch: any) => {\n    return await API()\n      .post(`services/insertnote`, {\n        Token: TokenService.get(),\n        RequestID: requestID,\n        Description: text,\n        NoteTypeID: noteType,\n      })\n      .then((response) => {\n        dispatch(getNotesByRequest(requestID));\n      })\n      .catch((e) => {\n        return console.error(e.message);\n      });\n  };\n\nexport const getFilteredRequests =\n  (username: string, status: number[], years: number[], page?: number) =>\n  async (dispatch: any) => {\n    var today = new Date();\n    // var dd = String(today.getDate()).padStart(2, \"0\");\n    // var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    let filter = \"\";\n    if (status.length > 0) filter = `&serviceOrderStatusID=${status}`;\n    let filterYear = \"\";\n    if (years.length > 0) filter = `&year=${years}`;\n    else filter = `&year=${yyyy}`;\n    try {\n      API()\n        .get(\n          `services/GetRequests?token=${TokenService.get()}${filterYear}${filter}&userSearched=${username}`\n        )\n        .then(async (response) => {\n          let data: Request[] = [];\n          data = await Promise.all(\n            response.data.Values.map(async (requestItem: any) => {\n              //   const image = await getWorker(requestItem.RequestID);\n              //   console.log(image);\n              let newItem = {\n                requestID: requestItem.RequestID,\n                subject: requestItem.Subject,\n                statusName: requestItem.StatusName,\n                receptionDate: requestItem.ReceptionDate,\n                viaName: requestItem.ViaName,\n                TechnicianName: requestItem.TechnicianName,\n                TechnicianImg: await getWorker(requestItem.RequestID),\n              };\n              return newItem;\n            })\n          );\n          dispatch(setRequests(data));\n          let offset = 0;\n          if (page) offset = page;\n          dispatch(setTotalPages(data.length));\n          dispatch(setCurrentPageData(offset));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const testFilter =\n  (\n    username: string,\n    status: number[],\n    years: number[],\n    term: string,\n    code: string,\n    page?: number\n  ) =>\n  async (dispatch: any) => {\n    let filter = \"\";\n    if (status.length > 0) filter = `&serviceOrderStatusID=${status}`;\n    let filterYear = \"\";\n    if (years.length > 0) filterYear = `&year=${years}`;\n    let filterTerm = \"\";\n    if (term !== \"\") filterTerm = `&subject=${term}`;\n    let filterCode = \"\";\n    if (code !== \"\") filterCode = `&requestID=${code}`;\n\n    try {\n      API()\n        .get(\n          `services/GetRequests?token=${TokenService.get()}${filterYear}${filter}${filterTerm}${filterCode}&userSearched=${username}`\n        )\n        .then(async (response) => {\n          let data: Request[] = [];\n          data = await Promise.all(\n            response.data.Values.map(async (requestItem: any) => {\n              //   const image = await getWorker(requestItem.RequestID);\n              //   console.log(image);\n              let newItem = {\n                requestID: requestItem.RequestID,\n                subject: requestItem.Subject,\n                statusName: requestItem.StatusName,\n                receptionDate: requestItem.ReceptionDate,\n                viaName: requestItem.ViaName,\n                TechnicianName: requestItem.TechnicianName,\n                TechnicianImg: await getWorker(requestItem.RequestID),\n              };\n              return newItem;\n            })\n          );\n          dispatch(setRequests(data));\n          let offset = 0;\n          if (page) offset = page;\n          dispatch(setTotalPages(data.length));\n          dispatch(setCurrentPageData(offset));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\nexport const filterByStatuses = (term: number[]) => async (dispatch: any) => {\n  dispatch(setSelectedStatuses(term));\n  //dispatch(filterRequests());\n};\n\nexport const filterByYears = (term: number[]) => async (dispatch: any) => {\n  dispatch(setSelectedYears(term));\n};\n\nexport const filterByTerm = (term: string) => async (dispatch: any) => {\n  dispatch(setTerm(term));\n};\n\nexport const filterByPage = (term: number) => async (dispatch: any) => {\n  dispatch(setPage(term));\n};\n\nexport const filterRequests =\n  (username: string, status: number[], years: number[], page?: number) =>\n  async (dispatch: any) => {\n    let filter = \"\";\n    if (status.length > 0) filter = `&serviceOrderStatusID=${status}`;\n    let filterYear = \"\";\n    if (years.length > 0) filter = `&year=${years}`;\n    try {\n      API()\n        .get(\n          `services/GetRequests?token=${TokenService.get()}${filterYear}${filter}&userSearched=${username}`\n        )\n        .then((response) => {\n          const data: Request[] = [];\n          response.data.Values.forEach((requestItem: any) => {\n            data.push({\n              requestID: requestItem.RequestID,\n              subject: requestItem.Subject,\n              statusName: requestItem.StatusName,\n              receptionDate: requestItem.ReceptionDate,\n              viaName: requestItem.ViaName,\n              TechnicianName: requestItem.TechnicianName,\n            });\n          });\n          dispatch(setRequests(data));\n          let offset = 0;\n          if (page) offset = page;\n          dispatch(setTotalPages(data.length));\n          dispatch(setCurrentPageData(offset));\n        });\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\n\n// New Request\nexport const getDepartments = () => async (dispatch: any) => {\n  try {\n    API()\n      .get(\n        `users/getdepartments?token=${TokenService.get()}\n        `\n      )\n      .then((response) => {\n        let departments: ISelect[] = [];\n        response.data.Values.map((department: any) => {\n          if (department.Text !== \"\") {\n            departments.push({\n              value: department.Value,\n              label: department.Text,\n            });\n          }\n          return null;\n        });\n        dispatch(setDepartments(departments));\n      });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLocations = (companyid: string) => async (dispatch: any) => {\n  try {\n    API()\n      .get(\n        `users/GetLocations?token=${TokenService.get()}&companyid=${companyid}`\n      )\n      .then((response) => {\n        let Locations: ISelect[] = [];\n        response.data.Values.map((location: any) => {\n          if (location.Text !== \"\") {\n            Locations.push({ value: location.Value, label: location.Text });\n          }\n          return null;\n        });\n        dispatch(setLocations(Locations));\n      });\n  } catch (error) {\n    console.log(\"Error mio\");\n  }\n};\n\nexport const getUsers = (CompanyID: string) => async (dispatch: any) => {\n  try {\n    API()\n      .get(`users/getusers?token=${TokenService.get()}`)\n      .then((response) => {\n        let filteredUsers: ISelect[] = [];\n        response.data.Values.filter(\n          (user: any) =>\n            user.CompanyID === CompanyID && user.StatusName === \"Activo\"\n        ).map((user: any) => {\n          filteredUsers.push({\n            label: user.Name + \" \" + user.LastName,\n            value: user.CompanyID + \" \" + user.Username,\n          });\n          return null;\n        });\n        dispatch(setFilteredUsers(filteredUsers));\n\n        let users: Users[] = [];\n        response.data.Values.filter(\n          (user: any) => user.StatusName === \"Activo\"\n        ).map((item: any) => {\n          users.push(item);\n          return null;\n        });\n        dispatch(setUsers(users));\n        console.log(filteredUsers);\n      });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const {\n  setRequests,\n  setActiveRequest,\n  setFilteredRequests,\n  setWorkOrders,\n  setTerm,\n  setAdvancements,\n  setFilteredUsers,\n  setUsers,\n  createSuccess,\n  setAreas,\n  setServices,\n  setAssets,\n  setCurrentPageData,\n  setTotalPages,\n  setStatuses,\n  setYears,\n  setNotesTypes,\n  setNotes,\n  setSelectedYears,\n  setSelectedStatuses,\n  setPage,\n  setFiles,\n  setDepartments,\n  setLocations,\n  setAutofillData,\n  setWorkOrderId,\n} = RequestStore.actions;\nexport const request = (state: RootState) => state.request;\nexport default RequestStore.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./modules/UserStore\";\nimport authReducer from \"./modules/AuthStore\";\nimport requestReducer from \"./modules/RequestStore\";\nimport ruleReducer from \"./modules/RuleStore\";\nimport emailReducer from \"./modules/EmailStore\";\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n    auth: authReducer,\n    request: requestReducer,\n    rule: ruleReducer,\n    email: emailReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// importing global context\nimport { AppProvider } from \"./context\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <AppProvider>\n        <App />\n      </AppProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}